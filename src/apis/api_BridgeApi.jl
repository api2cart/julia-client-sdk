# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct BridgeApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `BridgeApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ BridgeApi }) = "https://api.api2cart.local.com/v1.1"

const _returntypes_bridge_delete_BridgeApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AttributeValueDelete200Response,
)

function _oacinternal_bridge_delete(_api::BridgeApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_bridge_delete_BridgeApi, "/bridge.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""bridge.delete

Delete bridge from the store.

Params:

Return: AttributeValueDelete200Response, OpenAPI.Clients.ApiResponse
"""
function bridge_delete(_api::BridgeApi; _mediaType=nothing)
    _ctx = _oacinternal_bridge_delete(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function bridge_delete(_api::BridgeApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_bridge_delete(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_bridge_download_BridgeApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => String,
)

function _oacinternal_bridge_download(_api::BridgeApi; whitelabel=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_bridge_download_BridgeApi, "/bridge.download.file", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "whitelabel", whitelabel; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/zip", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""bridge.download

Download bridge for store.</br>Please note that the method would not work if you call it from Swagger UI.

Params:
- whitelabel::Bool

Return: String, OpenAPI.Clients.ApiResponse
"""
function bridge_download(_api::BridgeApi; whitelabel=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bridge_download(_api; whitelabel=whitelabel, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function bridge_download(_api::BridgeApi, response_stream::Channel; whitelabel=nothing, _mediaType=nothing)
    _ctx = _oacinternal_bridge_download(_api; whitelabel=whitelabel, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_bridge_update_BridgeApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AttributeUpdate200Response,
)

function _oacinternal_bridge_update(_api::BridgeApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_bridge_update_BridgeApi, "/bridge.update.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""bridge.update

Update bridge in the store.

Params:

Return: AttributeUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function bridge_update(_api::BridgeApi; _mediaType=nothing)
    _ctx = _oacinternal_bridge_update(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function bridge_update(_api::BridgeApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_bridge_update(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export bridge_delete
export bridge_download
export bridge_update
