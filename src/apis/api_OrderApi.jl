# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct OrderApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `OrderApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ OrderApi }) = "https://api.api2cart.com/v1.1"

const _returntypes_order_abandoned_list_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseOrderAbandonedList,
)

function _oacinternal_order_abandoned_list(_api::OrderApi; start=nothing, count=nothing, page_cursor=nothing, customer_id=nothing, customer_email=nothing, store_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, skip_empty_email=nothing, response_fields=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_abandoned_list_OrderApi, "/order.abandoned.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customer_id", customer_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customer_email", customer_email; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "skip_empty_email", skip_empty_email; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.abandoned.list

Get list of orders that were left by customers before completing the order.

Params:
- start::Int64
- count::Int64
- page_cursor::String
- customer_id::String
- customer_email::String
- store_id::String
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String
- skip_empty_email::Bool
- response_fields::String
- params::String
- exclude::String

Return: ModelResponseOrderAbandonedList, OpenAPI.Clients.ApiResponse
"""
function order_abandoned_list(_api::OrderApi; start=nothing, count=nothing, page_cursor=nothing, customer_id=nothing, customer_email=nothing, store_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, skip_empty_email=nothing, response_fields=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_abandoned_list(_api; start=start, count=count, page_cursor=page_cursor, customer_id=customer_id, customer_email=customer_email, store_id=store_id, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, skip_empty_email=skip_empty_email, response_fields=response_fields, params=params, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_abandoned_list(_api::OrderApi, response_stream::Channel; start=nothing, count=nothing, page_cursor=nothing, customer_id=nothing, customer_email=nothing, store_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, skip_empty_email=nothing, response_fields=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_abandoned_list(_api; start=start, count=count, page_cursor=page_cursor, customer_id=customer_id, customer_email=customer_email, store_id=store_id, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, skip_empty_email=skip_empty_email, response_fields=response_fields, params=params, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_add_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderAdd200Response,
)

function _oacinternal_order_add(_api::OrderApi, order_add_param::OrderAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_order_add_OrderApi, "/order.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], order_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""order.add

Add a new order to the cart.

Params:
- order_add_param::OrderAdd (required)

Return: OrderAdd200Response, OpenAPI.Clients.ApiResponse
"""
function order_add(_api::OrderApi, order_add_param::OrderAdd; _mediaType=nothing)
    _ctx = _oacinternal_order_add(_api, order_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_add(_api::OrderApi, response_stream::Channel, order_add_param::OrderAdd; _mediaType=nothing)
    _ctx = _oacinternal_order_add(_api, order_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_count_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderCount200Response,
)

function _oacinternal_order_count(_api::OrderApi; order_ids=nothing, ids=nothing, customer_id=nothing, store_id=nothing, customer_email=nothing, order_status=nothing, order_status_ids=nothing, ebay_order_status=nothing, financial_status=nothing, financial_status_ids=nothing, fulfillment_channel=nothing, fulfillment_status=nothing, shipping_method=nothing, delivery_method=nothing, tags=nothing, ship_node_type=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_count_OrderApi, "/order.count.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "order_ids", order_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "ids", ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customer_id", customer_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customer_email", customer_email; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_status", order_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_status_ids", order_status_ids; style="form", is_explode=true)  # type Vector{String}
    OpenAPI.Clients.set_param(_ctx.query, "ebay_order_status", ebay_order_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "financial_status", financial_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "financial_status_ids", financial_status_ids; style="form", is_explode=true)  # type Vector{String}
    OpenAPI.Clients.set_param(_ctx.query, "fulfillment_channel", fulfillment_channel; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fulfillment_status", fulfillment_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "shipping_method", shipping_method; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "delivery_method", delivery_method; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "tags", tags; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "ship_node_type", ship_node_type; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.count

Count orders in store

Params:
- order_ids::String
- ids::String
- customer_id::String
- store_id::String
- customer_email::String
- order_status::String
- order_status_ids::Vector{String}
- ebay_order_status::String
- financial_status::String
- financial_status_ids::Vector{String}
- fulfillment_channel::String
- fulfillment_status::String
- shipping_method::String
- delivery_method::String
- tags::String
- ship_node_type::String
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String

Return: OrderCount200Response, OpenAPI.Clients.ApiResponse
"""
function order_count(_api::OrderApi; order_ids=nothing, ids=nothing, customer_id=nothing, store_id=nothing, customer_email=nothing, order_status=nothing, order_status_ids=nothing, ebay_order_status=nothing, financial_status=nothing, financial_status_ids=nothing, fulfillment_channel=nothing, fulfillment_status=nothing, shipping_method=nothing, delivery_method=nothing, tags=nothing, ship_node_type=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_count(_api; order_ids=order_ids, ids=ids, customer_id=customer_id, store_id=store_id, customer_email=customer_email, order_status=order_status, order_status_ids=order_status_ids, ebay_order_status=ebay_order_status, financial_status=financial_status, financial_status_ids=financial_status_ids, fulfillment_channel=fulfillment_channel, fulfillment_status=fulfillment_status, shipping_method=shipping_method, delivery_method=delivery_method, tags=tags, ship_node_type=ship_node_type, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_count(_api::OrderApi, response_stream::Channel; order_ids=nothing, ids=nothing, customer_id=nothing, store_id=nothing, customer_email=nothing, order_status=nothing, order_status_ids=nothing, ebay_order_status=nothing, financial_status=nothing, financial_status_ids=nothing, fulfillment_channel=nothing, fulfillment_status=nothing, shipping_method=nothing, delivery_method=nothing, tags=nothing, ship_node_type=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_count(_api; order_ids=order_ids, ids=ids, customer_id=customer_id, store_id=store_id, customer_email=customer_email, order_status=order_status, order_status_ids=order_status_ids, ebay_order_status=ebay_order_status, financial_status=financial_status, financial_status_ids=financial_status_ids, fulfillment_channel=fulfillment_channel, fulfillment_status=fulfillment_status, shipping_method=shipping_method, delivery_method=delivery_method, tags=tags, ship_node_type=ship_node_type, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_financial_status_list_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderFinancialStatusList200Response,
)

function _oacinternal_order_financial_status_list(_api::OrderApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_financial_status_list_OrderApi, "/order.financial_status.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.financial_status.list

Retrieve list of financial statuses

Params:

Return: OrderFinancialStatusList200Response, OpenAPI.Clients.ApiResponse
"""
function order_financial_status_list(_api::OrderApi; _mediaType=nothing)
    _ctx = _oacinternal_order_financial_status_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_financial_status_list(_api::OrderApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_order_financial_status_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_find_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderFind200Response,
)

function _oacinternal_order_find(_api::OrderApi; start=nothing, count=nothing, customer_id=nothing, customer_email=nothing, order_status=nothing, financial_status=nothing, created_to=nothing, created_from=nothing, modified_to=nothing, modified_from=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_find_OrderApi, "/order.find.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "customer_id", customer_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customer_email", customer_email; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_status", order_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "financial_status", financial_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.find

This method is deprecated and won't be supported in the future. Please use \"order.list\" instead.

Params:
- start::Int64
- count::Int64
- customer_id::String
- customer_email::String
- order_status::String
- financial_status::String
- created_to::String
- created_from::String
- modified_to::String
- modified_from::String
- params::String
- exclude::String

Return: OrderFind200Response, OpenAPI.Clients.ApiResponse
"""
function order_find(_api::OrderApi; start=nothing, count=nothing, customer_id=nothing, customer_email=nothing, order_status=nothing, financial_status=nothing, created_to=nothing, created_from=nothing, modified_to=nothing, modified_from=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_find(_api; start=start, count=count, customer_id=customer_id, customer_email=customer_email, order_status=order_status, financial_status=financial_status, created_to=created_to, created_from=created_from, modified_to=modified_to, modified_from=modified_from, params=params, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_find(_api::OrderApi, response_stream::Channel; start=nothing, count=nothing, customer_id=nothing, customer_email=nothing, order_status=nothing, financial_status=nothing, created_to=nothing, created_from=nothing, modified_to=nothing, modified_from=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_find(_api; start=start, count=count, customer_id=customer_id, customer_email=customer_email, order_status=order_status, financial_status=financial_status, created_to=created_to, created_from=created_from, modified_to=modified_to, modified_from=modified_from, params=params, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_fulfillment_status_list_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderFulfillmentStatusList200Response,
)

function _oacinternal_order_fulfillment_status_list(_api::OrderApi; action=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_fulfillment_status_list_OrderApi, "/order.fulfillment_status.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "action", action; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.fulfillment_status.list

Retrieve list of fulfillment statuses

Params:
- action::String

Return: OrderFulfillmentStatusList200Response, OpenAPI.Clients.ApiResponse
"""
function order_fulfillment_status_list(_api::OrderApi; action=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_fulfillment_status_list(_api; action=action, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_fulfillment_status_list(_api::OrderApi, response_stream::Channel; action=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_fulfillment_status_list(_api; action=action, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_info_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderInfo200Response,
)

function _oacinternal_order_info(_api::OrderApi; id=nothing, order_id=nothing, store_id=nothing, params=nothing, response_fields=nothing, exclude=nothing, enable_cache=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_info_OrderApi, "/order.info.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_id", order_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "enable_cache", enable_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "use_latest_api_version", use_latest_api_version; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.info

Info about a specific order by ID

Params:
- id::String
- order_id::String
- store_id::String
- params::String
- response_fields::String
- exclude::String
- enable_cache::Bool
- use_latest_api_version::Bool

Return: OrderInfo200Response, OpenAPI.Clients.ApiResponse
"""
function order_info(_api::OrderApi; id=nothing, order_id=nothing, store_id=nothing, params=nothing, response_fields=nothing, exclude=nothing, enable_cache=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_info(_api; id=id, order_id=order_id, store_id=store_id, params=params, response_fields=response_fields, exclude=exclude, enable_cache=enable_cache, use_latest_api_version=use_latest_api_version, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_info(_api::OrderApi, response_stream::Channel; id=nothing, order_id=nothing, store_id=nothing, params=nothing, response_fields=nothing, exclude=nothing, enable_cache=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_info(_api; id=id, order_id=order_id, store_id=store_id, params=params, response_fields=response_fields, exclude=exclude, enable_cache=enable_cache, use_latest_api_version=use_latest_api_version, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_list_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseOrderList,
)

function _oacinternal_order_list(_api::OrderApi; start=nothing, count=nothing, page_cursor=nothing, ids=nothing, order_ids=nothing, since_id=nothing, store_id=nothing, customer_id=nothing, customer_email=nothing, basket_id=nothing, currency_id=nothing, phone=nothing, order_status=nothing, order_status_ids=nothing, ebay_order_status=nothing, financial_status=nothing, financial_status_ids=nothing, fulfillment_status=nothing, return_status=nothing, fulfillment_channel=nothing, shipping_method=nothing, skip_order_ids=nothing, is_deleted=nothing, shipping_country_iso3=nothing, delivery_method=nothing, ship_node_type=nothing, created_to=nothing, created_from=nothing, modified_to=nothing, modified_from=nothing, tags=nothing, sort_by=nothing, sort_direction=nothing, params=nothing, response_fields=nothing, exclude=nothing, enable_cache=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_list_OrderApi, "/order.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "ids", ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_ids", order_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "since_id", since_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customer_id", customer_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customer_email", customer_email; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "basket_id", basket_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "currency_id", currency_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "phone", phone; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_status", order_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_status_ids", order_status_ids; style="form", is_explode=true)  # type Vector{String}
    OpenAPI.Clients.set_param(_ctx.query, "ebay_order_status", ebay_order_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "financial_status", financial_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "financial_status_ids", financial_status_ids; style="form", is_explode=true)  # type Vector{String}
    OpenAPI.Clients.set_param(_ctx.query, "fulfillment_status", fulfillment_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "return_status", return_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fulfillment_channel", fulfillment_channel; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "shipping_method", shipping_method; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "skip_order_ids", skip_order_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "is_deleted", is_deleted; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "shipping_country_iso3", shipping_country_iso3; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "delivery_method", delivery_method; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "ship_node_type", ship_node_type; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "tags", tags; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort_by", sort_by; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort_direction", sort_direction; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "enable_cache", enable_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "use_latest_api_version", use_latest_api_version; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.list

Get list of orders from store.

Params:
- start::Int64
- count::Int64
- page_cursor::String
- ids::String
- order_ids::String
- since_id::String
- store_id::String
- customer_id::String
- customer_email::String
- basket_id::String
- currency_id::String
- phone::String
- order_status::String
- order_status_ids::Vector{String}
- ebay_order_status::String
- financial_status::String
- financial_status_ids::Vector{String}
- fulfillment_status::String
- return_status::String
- fulfillment_channel::String
- shipping_method::String
- skip_order_ids::String
- is_deleted::Bool
- shipping_country_iso3::String
- delivery_method::String
- ship_node_type::String
- created_to::String
- created_from::String
- modified_to::String
- modified_from::String
- tags::String
- sort_by::String
- sort_direction::String
- params::String
- response_fields::String
- exclude::String
- enable_cache::Bool
- use_latest_api_version::Bool

Return: ModelResponseOrderList, OpenAPI.Clients.ApiResponse
"""
function order_list(_api::OrderApi; start=nothing, count=nothing, page_cursor=nothing, ids=nothing, order_ids=nothing, since_id=nothing, store_id=nothing, customer_id=nothing, customer_email=nothing, basket_id=nothing, currency_id=nothing, phone=nothing, order_status=nothing, order_status_ids=nothing, ebay_order_status=nothing, financial_status=nothing, financial_status_ids=nothing, fulfillment_status=nothing, return_status=nothing, fulfillment_channel=nothing, shipping_method=nothing, skip_order_ids=nothing, is_deleted=nothing, shipping_country_iso3=nothing, delivery_method=nothing, ship_node_type=nothing, created_to=nothing, created_from=nothing, modified_to=nothing, modified_from=nothing, tags=nothing, sort_by=nothing, sort_direction=nothing, params=nothing, response_fields=nothing, exclude=nothing, enable_cache=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_list(_api; start=start, count=count, page_cursor=page_cursor, ids=ids, order_ids=order_ids, since_id=since_id, store_id=store_id, customer_id=customer_id, customer_email=customer_email, basket_id=basket_id, currency_id=currency_id, phone=phone, order_status=order_status, order_status_ids=order_status_ids, ebay_order_status=ebay_order_status, financial_status=financial_status, financial_status_ids=financial_status_ids, fulfillment_status=fulfillment_status, return_status=return_status, fulfillment_channel=fulfillment_channel, shipping_method=shipping_method, skip_order_ids=skip_order_ids, is_deleted=is_deleted, shipping_country_iso3=shipping_country_iso3, delivery_method=delivery_method, ship_node_type=ship_node_type, created_to=created_to, created_from=created_from, modified_to=modified_to, modified_from=modified_from, tags=tags, sort_by=sort_by, sort_direction=sort_direction, params=params, response_fields=response_fields, exclude=exclude, enable_cache=enable_cache, use_latest_api_version=use_latest_api_version, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_list(_api::OrderApi, response_stream::Channel; start=nothing, count=nothing, page_cursor=nothing, ids=nothing, order_ids=nothing, since_id=nothing, store_id=nothing, customer_id=nothing, customer_email=nothing, basket_id=nothing, currency_id=nothing, phone=nothing, order_status=nothing, order_status_ids=nothing, ebay_order_status=nothing, financial_status=nothing, financial_status_ids=nothing, fulfillment_status=nothing, return_status=nothing, fulfillment_channel=nothing, shipping_method=nothing, skip_order_ids=nothing, is_deleted=nothing, shipping_country_iso3=nothing, delivery_method=nothing, ship_node_type=nothing, created_to=nothing, created_from=nothing, modified_to=nothing, modified_from=nothing, tags=nothing, sort_by=nothing, sort_direction=nothing, params=nothing, response_fields=nothing, exclude=nothing, enable_cache=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_list(_api; start=start, count=count, page_cursor=page_cursor, ids=ids, order_ids=order_ids, since_id=since_id, store_id=store_id, customer_id=customer_id, customer_email=customer_email, basket_id=basket_id, currency_id=currency_id, phone=phone, order_status=order_status, order_status_ids=order_status_ids, ebay_order_status=ebay_order_status, financial_status=financial_status, financial_status_ids=financial_status_ids, fulfillment_status=fulfillment_status, return_status=return_status, fulfillment_channel=fulfillment_channel, shipping_method=shipping_method, skip_order_ids=skip_order_ids, is_deleted=is_deleted, shipping_country_iso3=shipping_country_iso3, delivery_method=delivery_method, ship_node_type=ship_node_type, created_to=created_to, created_from=created_from, modified_to=modified_to, modified_from=modified_from, tags=tags, sort_by=sort_by, sort_direction=sort_direction, params=params, response_fields=response_fields, exclude=exclude, enable_cache=enable_cache, use_latest_api_version=use_latest_api_version, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_preestimate_shipping_list_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseOrderPreestimateShippingList,
)

function _oacinternal_order_preestimate_shipping_list(_api::OrderApi, order_preestimate_shipping_list_param::OrderPreestimateShippingList; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_order_preestimate_shipping_list_OrderApi, "/order.preestimate_shipping.list.json", ["StoreKeyAuth", "ApiKeyAuth", ], order_preestimate_shipping_list_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""order.preestimate_shipping.list

Retrieve list of order preestimated shipping methods

Params:
- order_preestimate_shipping_list_param::OrderPreestimateShippingList (required)

Return: ModelResponseOrderPreestimateShippingList, OpenAPI.Clients.ApiResponse
"""
function order_preestimate_shipping_list(_api::OrderApi, order_preestimate_shipping_list_param::OrderPreestimateShippingList; _mediaType=nothing)
    _ctx = _oacinternal_order_preestimate_shipping_list(_api, order_preestimate_shipping_list_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_preestimate_shipping_list(_api::OrderApi, response_stream::Channel, order_preestimate_shipping_list_param::OrderPreestimateShippingList; _mediaType=nothing)
    _ctx = _oacinternal_order_preestimate_shipping_list(_api, order_preestimate_shipping_list_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_refund_add_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderRefundAdd200Response,
)

function _oacinternal_order_refund_add(_api::OrderApi, order_refund_add_param::OrderRefundAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_order_refund_add_OrderApi, "/order.refund.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], order_refund_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""order.refund.add

Add a refund to the order.

Params:
- order_refund_add_param::OrderRefundAdd (required)

Return: OrderRefundAdd200Response, OpenAPI.Clients.ApiResponse
"""
function order_refund_add(_api::OrderApi, order_refund_add_param::OrderRefundAdd; _mediaType=nothing)
    _ctx = _oacinternal_order_refund_add(_api, order_refund_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_refund_add(_api::OrderApi, response_stream::Channel, order_refund_add_param::OrderRefundAdd; _mediaType=nothing)
    _ctx = _oacinternal_order_refund_add(_api, order_refund_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_return_add_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderReturnAdd200Response,
)

function _oacinternal_order_return_add(_api::OrderApi, order_return_add_param::OrderReturnAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_order_return_add_OrderApi, "/order.return.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], order_return_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""order.return.add

Create new return request.

Params:
- order_return_add_param::OrderReturnAdd (required)

Return: OrderReturnAdd200Response, OpenAPI.Clients.ApiResponse
"""
function order_return_add(_api::OrderApi, order_return_add_param::OrderReturnAdd; _mediaType=nothing)
    _ctx = _oacinternal_order_return_add(_api, order_return_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_return_add(_api::OrderApi, response_stream::Channel, order_return_add_param::OrderReturnAdd; _mediaType=nothing)
    _ctx = _oacinternal_order_return_add(_api, order_return_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_return_delete_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AttributeValueDelete200Response,
)

function _oacinternal_order_return_delete(_api::OrderApi, return_id::String, order_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_order_return_delete_OrderApi, "/order.return.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "return_id", return_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_id", order_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.return.delete

Delete return.

Params:
- return_id::String (required)
- order_id::String (required)
- store_id::String

Return: AttributeValueDelete200Response, OpenAPI.Clients.ApiResponse
"""
function order_return_delete(_api::OrderApi, return_id::String, order_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_return_delete(_api, return_id, order_id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_return_delete(_api::OrderApi, response_stream::Channel, return_id::String, order_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_return_delete(_api, return_id, order_id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_return_update_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AccountConfigUpdate200Response,
)

function _oacinternal_order_return_update(_api::OrderApi, order_return_update_param::OrderReturnUpdate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_order_return_update_OrderApi, "/order.return.update.json", ["StoreKeyAuth", "ApiKeyAuth", ], order_return_update_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""order.return.update

Update order's shipment information.

Params:
- order_return_update_param::OrderReturnUpdate (required)

Return: AccountConfigUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function order_return_update(_api::OrderApi, order_return_update_param::OrderReturnUpdate; _mediaType=nothing)
    _ctx = _oacinternal_order_return_update(_api, order_return_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_return_update(_api::OrderApi, response_stream::Channel, order_return_update_param::OrderReturnUpdate; _mediaType=nothing)
    _ctx = _oacinternal_order_return_update(_api, order_return_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_shipment_add_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderShipmentAdd200Response,
)

function _oacinternal_order_shipment_add(_api::OrderApi, order_shipment_add_param::OrderShipmentAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_order_shipment_add_OrderApi, "/order.shipment.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], order_shipment_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""order.shipment.add

Add a shipment to the order.

Params:
- order_shipment_add_param::OrderShipmentAdd (required)

Return: OrderShipmentAdd200Response, OpenAPI.Clients.ApiResponse
"""
function order_shipment_add(_api::OrderApi, order_shipment_add_param::OrderShipmentAdd; _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_add(_api, order_shipment_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_shipment_add(_api::OrderApi, response_stream::Channel, order_shipment_add_param::OrderShipmentAdd; _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_add(_api, order_shipment_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_shipment_add_batch_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CategoryAddBatch200Response,
)

function _oacinternal_order_shipment_add_batch(_api::OrderApi, order_shipment_add_batch_param::OrderShipmentAddBatch; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_order_shipment_add_batch_OrderApi, "/order.shipment.add.batch.json", ["StoreKeyAuth", "ApiKeyAuth", ], order_shipment_add_batch_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""order.shipment.add.batch

Add a shipments to the orders.

Params:
- order_shipment_add_batch_param::OrderShipmentAddBatch (required)

Return: CategoryAddBatch200Response, OpenAPI.Clients.ApiResponse
"""
function order_shipment_add_batch(_api::OrderApi, order_shipment_add_batch_param::OrderShipmentAddBatch; _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_add_batch(_api, order_shipment_add_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_shipment_add_batch(_api::OrderApi, response_stream::Channel, order_shipment_add_batch_param::OrderShipmentAddBatch; _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_add_batch(_api, order_shipment_add_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_shipment_delete_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderShipmentDelete200Response,
)

function _oacinternal_order_shipment_delete(_api::OrderApi, shipment_id::String, order_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_order_shipment_delete_OrderApi, "/order.shipment.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "shipment_id", shipment_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_id", order_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.shipment.delete

Delete order's shipment.

Params:
- shipment_id::String (required)
- order_id::String (required)
- store_id::String

Return: OrderShipmentDelete200Response, OpenAPI.Clients.ApiResponse
"""
function order_shipment_delete(_api::OrderApi, shipment_id::String, order_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_delete(_api, shipment_id, order_id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_shipment_delete(_api::OrderApi, response_stream::Channel, shipment_id::String, order_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_delete(_api, shipment_id, order_id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_shipment_info_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderShipmentInfo200Response,
)

function _oacinternal_order_shipment_info(_api::OrderApi, id::String, order_id::String; start=nothing, store_id=nothing, response_fields=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_shipment_info_OrderApi, "/order.shipment.info.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_id", order_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.shipment.info

Get information of shipment.

Params:
- id::String (required)
- order_id::String (required)
- start::Int64
- store_id::String
- response_fields::String
- params::String
- exclude::String

Return: OrderShipmentInfo200Response, OpenAPI.Clients.ApiResponse
"""
function order_shipment_info(_api::OrderApi, id::String, order_id::String; start=nothing, store_id=nothing, response_fields=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_info(_api, id, order_id; start=start, store_id=store_id, response_fields=response_fields, params=params, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_shipment_info(_api::OrderApi, response_stream::Channel, id::String, order_id::String; start=nothing, store_id=nothing, response_fields=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_info(_api, id, order_id; start=start, store_id=store_id, response_fields=response_fields, params=params, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_shipment_list_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseOrderShipmentList,
)

function _oacinternal_order_shipment_list(_api::OrderApi, order_id::String; start=nothing, count=nothing, page_cursor=nothing, store_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, response_fields=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_shipment_list_OrderApi, "/order.shipment.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_id", order_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.shipment.list

Get list of shipments by orders.

Params:
- order_id::String (required)
- start::Int64
- count::Int64
- page_cursor::String
- store_id::String
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String
- response_fields::String
- params::String
- exclude::String

Return: ModelResponseOrderShipmentList, OpenAPI.Clients.ApiResponse
"""
function order_shipment_list(_api::OrderApi, order_id::String; start=nothing, count=nothing, page_cursor=nothing, store_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, response_fields=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_list(_api, order_id; start=start, count=count, page_cursor=page_cursor, store_id=store_id, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, response_fields=response_fields, params=params, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_shipment_list(_api::OrderApi, response_stream::Channel, order_id::String; start=nothing, count=nothing, page_cursor=nothing, store_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, response_fields=nothing, params=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_list(_api, order_id; start=start, count=count, page_cursor=page_cursor, store_id=store_id, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, response_fields=response_fields, params=params, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_shipment_tracking_add_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => OrderShipmentTrackingAdd200Response,
)

function _oacinternal_order_shipment_tracking_add(_api::OrderApi, order_shipment_tracking_add_param::OrderShipmentTrackingAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_order_shipment_tracking_add_OrderApi, "/order.shipment.tracking.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], order_shipment_tracking_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""order.shipment.tracking.add

Add order shipment's tracking info.

Params:
- order_shipment_tracking_add_param::OrderShipmentTrackingAdd (required)

Return: OrderShipmentTrackingAdd200Response, OpenAPI.Clients.ApiResponse
"""
function order_shipment_tracking_add(_api::OrderApi, order_shipment_tracking_add_param::OrderShipmentTrackingAdd; _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_tracking_add(_api, order_shipment_tracking_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_shipment_tracking_add(_api::OrderApi, response_stream::Channel, order_shipment_tracking_add_param::OrderShipmentTrackingAdd; _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_tracking_add(_api, order_shipment_tracking_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_shipment_update_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AccountConfigUpdate200Response,
)

function _oacinternal_order_shipment_update(_api::OrderApi, order_shipment_update_param::OrderShipmentUpdate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_order_shipment_update_OrderApi, "/order.shipment.update.json", ["StoreKeyAuth", "ApiKeyAuth", ], order_shipment_update_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""order.shipment.update

Update order's shipment information.

Params:
- order_shipment_update_param::OrderShipmentUpdate (required)

Return: AccountConfigUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function order_shipment_update(_api::OrderApi, order_shipment_update_param::OrderShipmentUpdate; _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_update(_api, order_shipment_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_shipment_update(_api::OrderApi, response_stream::Channel, order_shipment_update_param::OrderShipmentUpdate; _mediaType=nothing)
    _ctx = _oacinternal_order_shipment_update(_api, order_shipment_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_status_list_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseOrderStatusList,
)

function _oacinternal_order_status_list(_api::OrderApi; store_id=nothing, action=nothing, response_fields=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_status_list_OrderApi, "/order.status.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "action", action; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.status.list

Retrieve list of statuses

Params:
- store_id::String
- action::String
- response_fields::String

Return: ModelResponseOrderStatusList, OpenAPI.Clients.ApiResponse
"""
function order_status_list(_api::OrderApi; store_id=nothing, action=nothing, response_fields=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_status_list(_api; store_id=store_id, action=action, response_fields=response_fields, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_status_list(_api::OrderApi, response_stream::Channel; store_id=nothing, action=nothing, response_fields=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_status_list(_api; store_id=store_id, action=action, response_fields=response_fields, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_transaction_list_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseOrderTransactionList,
)

function _oacinternal_order_transaction_list(_api::OrderApi, order_ids::String; count=nothing, page_cursor=nothing, store_id=nothing, params=nothing, response_fields=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_order_transaction_list_OrderApi, "/order.transaction.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_ids", order_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.transaction.list

Retrieve list of order transaction

Params:
- order_ids::String (required)
- count::Int64
- page_cursor::String
- store_id::String
- params::String
- response_fields::String
- exclude::String

Return: ModelResponseOrderTransactionList, OpenAPI.Clients.ApiResponse
"""
function order_transaction_list(_api::OrderApi, order_ids::String; count=nothing, page_cursor=nothing, store_id=nothing, params=nothing, response_fields=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_transaction_list(_api, order_ids; count=count, page_cursor=page_cursor, store_id=store_id, params=params, response_fields=response_fields, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_transaction_list(_api::OrderApi, response_stream::Channel, order_ids::String; count=nothing, page_cursor=nothing, store_id=nothing, params=nothing, response_fields=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_transaction_list(_api, order_ids; count=count, page_cursor=page_cursor, store_id=store_id, params=params, response_fields=response_fields, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_order_update_OrderApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AccountConfigUpdate200Response,
)

function _oacinternal_order_update(_api::OrderApi, order_id::String; store_id=nothing, order_status=nothing, financial_status=nothing, fulfillment_status=nothing, cancellation_reason=nothing, order_payment_method=nothing, comment=nothing, admin_comment=nothing, admin_private_comment=nothing, invoice_admin_comment=nothing, date_modified=nothing, date_finished=nothing, send_notifications=nothing, create_invoice=nothing, origin=nothing, tags=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_order_update_OrderApi, "/order.update.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "order_id", order_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_status", order_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "financial_status", financial_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "fulfillment_status", fulfillment_status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "cancellation_reason", cancellation_reason; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_payment_method", order_payment_method; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "comment", comment; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "admin_comment", admin_comment; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "admin_private_comment", admin_private_comment; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "invoice_admin_comment", invoice_admin_comment; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "date_modified", date_modified; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "date_finished", date_finished; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "send_notifications", send_notifications; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "create_invoice", create_invoice; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "origin", origin; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "tags", tags; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""order.update

Update existing order.

Params:
- order_id::String (required)
- store_id::String
- order_status::String
- financial_status::String
- fulfillment_status::String
- cancellation_reason::String
- order_payment_method::String
- comment::String
- admin_comment::String
- admin_private_comment::String
- invoice_admin_comment::String
- date_modified::String
- date_finished::String
- send_notifications::Bool
- create_invoice::Bool
- origin::String
- tags::String

Return: AccountConfigUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function order_update(_api::OrderApi, order_id::String; store_id=nothing, order_status=nothing, financial_status=nothing, fulfillment_status=nothing, cancellation_reason=nothing, order_payment_method=nothing, comment=nothing, admin_comment=nothing, admin_private_comment=nothing, invoice_admin_comment=nothing, date_modified=nothing, date_finished=nothing, send_notifications=nothing, create_invoice=nothing, origin=nothing, tags=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_update(_api, order_id; store_id=store_id, order_status=order_status, financial_status=financial_status, fulfillment_status=fulfillment_status, cancellation_reason=cancellation_reason, order_payment_method=order_payment_method, comment=comment, admin_comment=admin_comment, admin_private_comment=admin_private_comment, invoice_admin_comment=invoice_admin_comment, date_modified=date_modified, date_finished=date_finished, send_notifications=send_notifications, create_invoice=create_invoice, origin=origin, tags=tags, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function order_update(_api::OrderApi, response_stream::Channel, order_id::String; store_id=nothing, order_status=nothing, financial_status=nothing, fulfillment_status=nothing, cancellation_reason=nothing, order_payment_method=nothing, comment=nothing, admin_comment=nothing, admin_private_comment=nothing, invoice_admin_comment=nothing, date_modified=nothing, date_finished=nothing, send_notifications=nothing, create_invoice=nothing, origin=nothing, tags=nothing, _mediaType=nothing)
    _ctx = _oacinternal_order_update(_api, order_id; store_id=store_id, order_status=order_status, financial_status=financial_status, fulfillment_status=fulfillment_status, cancellation_reason=cancellation_reason, order_payment_method=order_payment_method, comment=comment, admin_comment=admin_comment, admin_private_comment=admin_private_comment, invoice_admin_comment=invoice_admin_comment, date_modified=date_modified, date_finished=date_finished, send_notifications=send_notifications, create_invoice=create_invoice, origin=origin, tags=tags, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export order_abandoned_list
export order_add
export order_count
export order_financial_status_list
export order_find
export order_fulfillment_status_list
export order_info
export order_list
export order_preestimate_shipping_list
export order_refund_add
export order_return_add
export order_return_delete
export order_return_update
export order_shipment_add
export order_shipment_add_batch
export order_shipment_delete
export order_shipment_info
export order_shipment_list
export order_shipment_tracking_add
export order_shipment_update
export order_status_list
export order_transaction_list
export order_update
