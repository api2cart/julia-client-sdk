# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ReturnApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ReturnApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ReturnApi }) = "https://api.api2cart.com/v1.1"

const _returntypes_return_action_list_ReturnApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ReturnActionList200Response,
)

function _oacinternal_return_action_list(_api::ReturnApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_return_action_list_ReturnApi, "/return.action.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""return.action.list

Retrieve list of return actions

Params:

Return: ReturnActionList200Response, OpenAPI.Clients.ApiResponse
"""
function return_action_list(_api::ReturnApi; _mediaType=nothing)
    _ctx = _oacinternal_return_action_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function return_action_list(_api::ReturnApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_return_action_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_return_count_ReturnApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ReturnCount200Response,
)

function _oacinternal_return_count(_api::ReturnApi; order_ids=nothing, customer_id=nothing, store_id=nothing, status=nothing, return_type=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, report_request_id=nothing, disable_report_cache=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_return_count_ReturnApi, "/return.count.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "order_ids", order_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customer_id", customer_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "status", status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "return_type", return_type; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "report_request_id", report_request_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "disable_report_cache", disable_report_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""return.count

Count returns in store

Params:
- order_ids::String
- customer_id::String
- store_id::String
- status::String
- return_type::String
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String
- report_request_id::String
- disable_report_cache::Bool

Return: ReturnCount200Response, OpenAPI.Clients.ApiResponse
"""
function return_count(_api::ReturnApi; order_ids=nothing, customer_id=nothing, store_id=nothing, status=nothing, return_type=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, report_request_id=nothing, disable_report_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_return_count(_api; order_ids=order_ids, customer_id=customer_id, store_id=store_id, status=status, return_type=return_type, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, report_request_id=report_request_id, disable_report_cache=disable_report_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function return_count(_api::ReturnApi, response_stream::Channel; order_ids=nothing, customer_id=nothing, store_id=nothing, status=nothing, return_type=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, report_request_id=nothing, disable_report_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_return_count(_api; order_ids=order_ids, customer_id=customer_id, store_id=store_id, status=status, return_type=return_type, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, report_request_id=report_request_id, disable_report_cache=disable_report_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_return_info_ReturnApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ReturnInfo200Response,
)

function _oacinternal_return_info(_api::ReturnApi, id::String; order_id=nothing, store_id=nothing, params=nothing, exclude=nothing, response_fields=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_return_info_ReturnApi, "/return.info.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_id", order_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""return.info

Retrieve return information.

Params:
- id::String (required)
- order_id::String
- store_id::String
- params::String
- exclude::String
- response_fields::String

Return: ReturnInfo200Response, OpenAPI.Clients.ApiResponse
"""
function return_info(_api::ReturnApi, id::String; order_id=nothing, store_id=nothing, params=nothing, exclude=nothing, response_fields=nothing, _mediaType=nothing)
    _ctx = _oacinternal_return_info(_api, id; order_id=order_id, store_id=store_id, params=params, exclude=exclude, response_fields=response_fields, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function return_info(_api::ReturnApi, response_stream::Channel, id::String; order_id=nothing, store_id=nothing, params=nothing, exclude=nothing, response_fields=nothing, _mediaType=nothing)
    _ctx = _oacinternal_return_info(_api, id; order_id=order_id, store_id=store_id, params=params, exclude=exclude, response_fields=response_fields, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_return_list_ReturnApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseReturnList,
)

function _oacinternal_return_list(_api::ReturnApi; start=nothing, count=nothing, page_cursor=nothing, params=nothing, exclude=nothing, response_fields=nothing, order_id=nothing, order_ids=nothing, customer_id=nothing, store_id=nothing, status=nothing, return_type=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, report_request_id=nothing, disable_report_cache=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_return_list_ReturnApi, "/return.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_id", order_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "order_ids", order_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "customer_id", customer_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "status", status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "return_type", return_type; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "report_request_id", report_request_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "disable_report_cache", disable_report_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""return.list

Get list of return requests from store.

Params:
- start::Int64
- count::Int64
- page_cursor::String
- params::String
- exclude::String
- response_fields::String
- order_id::String
- order_ids::String
- customer_id::String
- store_id::String
- status::String
- return_type::String
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String
- report_request_id::String
- disable_report_cache::Bool

Return: ModelResponseReturnList, OpenAPI.Clients.ApiResponse
"""
function return_list(_api::ReturnApi; start=nothing, count=nothing, page_cursor=nothing, params=nothing, exclude=nothing, response_fields=nothing, order_id=nothing, order_ids=nothing, customer_id=nothing, store_id=nothing, status=nothing, return_type=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, report_request_id=nothing, disable_report_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_return_list(_api; start=start, count=count, page_cursor=page_cursor, params=params, exclude=exclude, response_fields=response_fields, order_id=order_id, order_ids=order_ids, customer_id=customer_id, store_id=store_id, status=status, return_type=return_type, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, report_request_id=report_request_id, disable_report_cache=disable_report_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function return_list(_api::ReturnApi, response_stream::Channel; start=nothing, count=nothing, page_cursor=nothing, params=nothing, exclude=nothing, response_fields=nothing, order_id=nothing, order_ids=nothing, customer_id=nothing, store_id=nothing, status=nothing, return_type=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, report_request_id=nothing, disable_report_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_return_list(_api; start=start, count=count, page_cursor=page_cursor, params=params, exclude=exclude, response_fields=response_fields, order_id=order_id, order_ids=order_ids, customer_id=customer_id, store_id=store_id, status=status, return_type=return_type, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, report_request_id=report_request_id, disable_report_cache=disable_report_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_return_reason_list_ReturnApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ReturnReasonList200Response,
)

function _oacinternal_return_reason_list(_api::ReturnApi; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_return_reason_list_ReturnApi, "/return.reason.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""return.reason.list

Retrieve list of return reasons

Params:
- store_id::String

Return: ReturnReasonList200Response, OpenAPI.Clients.ApiResponse
"""
function return_reason_list(_api::ReturnApi; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_return_reason_list(_api; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function return_reason_list(_api::ReturnApi, response_stream::Channel; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_return_reason_list(_api; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_return_status_list_ReturnApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ReturnStatusList200Response,
)

function _oacinternal_return_status_list(_api::ReturnApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_return_status_list_ReturnApi, "/return.status.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""return.status.list

Retrieve list of statuses

Params:

Return: ReturnStatusList200Response, OpenAPI.Clients.ApiResponse
"""
function return_status_list(_api::ReturnApi; _mediaType=nothing)
    _ctx = _oacinternal_return_status_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function return_status_list(_api::ReturnApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_return_status_list(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export return_action_list
export return_count
export return_info
export return_list
export return_reason_list
export return_status_list
