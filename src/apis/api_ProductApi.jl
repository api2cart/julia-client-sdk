# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.

struct ProductApi <: OpenAPI.APIClientImpl
    client::OpenAPI.Clients.Client
end

"""
The default API base path for APIs in `ProductApi`.
This can be used to construct the `OpenAPI.Clients.Client` instance.
"""
basepath(::Type{ ProductApi }) = "https://api.api2cart.com/v1.1"

const _returntypes_product_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductAdd200Response,
)

function _oacinternal_product_add(_api::ProductApi, product_add_param::ProductAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_add_ProductApi, "/product.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.add

Add new product to store.

Params:
- product_add_param::ProductAdd (required)

Return: ProductAdd200Response, OpenAPI.Clients.ApiResponse
"""
function product_add(_api::ProductApi, product_add_param::ProductAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_add(_api, product_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_add(_api::ProductApi, response_stream::Channel, product_add_param::ProductAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_add(_api, product_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_add_batch_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CategoryAddBatch200Response,
)

function _oacinternal_product_add_batch(_api::ProductApi, product_add_batch_param::ProductAddBatch; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_add_batch_ProductApi, "/product.add.batch.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_add_batch_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.add.batch

Add new products to the store.

Params:
- product_add_batch_param::ProductAddBatch (required)

Return: CategoryAddBatch200Response, OpenAPI.Clients.ApiResponse
"""
function product_add_batch(_api::ProductApi, product_add_batch_param::ProductAddBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_add_batch(_api, product_add_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_add_batch(_api::ProductApi, response_stream::Channel, product_add_batch_param::ProductAddBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_add_batch(_api, product_add_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_attribute_list_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseProductAttributeList,
)

function _oacinternal_product_attribute_list(_api::ProductApi, product_id::String; attribute_id=nothing, variant_id=nothing, page_cursor=nothing, start=nothing, count=nothing, attribute_group_id=nothing, set_name=nothing, lang_id=nothing, store_id=nothing, sort_by=nothing, sort_direction=nothing, params=nothing, response_fields=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_attribute_list_ProductApi, "/product.attribute.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attribute_id", attribute_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "variant_id", variant_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "attribute_group_id", attribute_group_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "set_name", set_name; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort_by", sort_by; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort_direction", sort_direction; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.attribute.list

Get list of attributes and values.

Params:
- product_id::String (required)
- attribute_id::String
- variant_id::String
- page_cursor::String
- start::Int64
- count::Int64
- attribute_group_id::String
- set_name::String
- lang_id::String
- store_id::String
- sort_by::String
- sort_direction::String
- params::String
- response_fields::String
- exclude::String

Return: ModelResponseProductAttributeList, OpenAPI.Clients.ApiResponse
"""
function product_attribute_list(_api::ProductApi, product_id::String; attribute_id=nothing, variant_id=nothing, page_cursor=nothing, start=nothing, count=nothing, attribute_group_id=nothing, set_name=nothing, lang_id=nothing, store_id=nothing, sort_by=nothing, sort_direction=nothing, params=nothing, response_fields=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_attribute_list(_api, product_id; attribute_id=attribute_id, variant_id=variant_id, page_cursor=page_cursor, start=start, count=count, attribute_group_id=attribute_group_id, set_name=set_name, lang_id=lang_id, store_id=store_id, sort_by=sort_by, sort_direction=sort_direction, params=params, response_fields=response_fields, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_attribute_list(_api::ProductApi, response_stream::Channel, product_id::String; attribute_id=nothing, variant_id=nothing, page_cursor=nothing, start=nothing, count=nothing, attribute_group_id=nothing, set_name=nothing, lang_id=nothing, store_id=nothing, sort_by=nothing, sort_direction=nothing, params=nothing, response_fields=nothing, exclude=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_attribute_list(_api, product_id; attribute_id=attribute_id, variant_id=variant_id, page_cursor=page_cursor, start=start, count=count, attribute_group_id=attribute_group_id, set_name=set_name, lang_id=lang_id, store_id=store_id, sort_by=sort_by, sort_direction=sort_direction, params=params, response_fields=response_fields, exclude=exclude, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_attribute_value_set_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductAttributeValueSet200Response,
)

function _oacinternal_product_attribute_value_set(_api::ProductApi, product_id::String; attribute_id=nothing, attribute_group_id=nothing, attribute_name=nothing, value=nothing, value_id=nothing, lang_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_attribute_value_set_ProductApi, "/product.attribute.value.set.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attribute_id", attribute_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attribute_group_id", attribute_group_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attribute_name", attribute_name; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "value", value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "value_id", value_id; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.attribute.value.set

Set attribute value to product.

Params:
- product_id::String (required)
- attribute_id::String
- attribute_group_id::String
- attribute_name::String
- value::String
- value_id::Int64
- lang_id::String
- store_id::String

Return: ProductAttributeValueSet200Response, OpenAPI.Clients.ApiResponse
"""
function product_attribute_value_set(_api::ProductApi, product_id::String; attribute_id=nothing, attribute_group_id=nothing, attribute_name=nothing, value=nothing, value_id=nothing, lang_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_attribute_value_set(_api, product_id; attribute_id=attribute_id, attribute_group_id=attribute_group_id, attribute_name=attribute_name, value=value, value_id=value_id, lang_id=lang_id, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_attribute_value_set(_api::ProductApi, response_stream::Channel, product_id::String; attribute_id=nothing, attribute_group_id=nothing, attribute_name=nothing, value=nothing, value_id=nothing, lang_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_attribute_value_set(_api, product_id; attribute_id=attribute_id, attribute_group_id=attribute_group_id, attribute_name=attribute_name, value=value, value_id=value_id, lang_id=lang_id, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_attribute_value_unset_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductAttributeValueUnset200Response,
)

function _oacinternal_product_attribute_value_unset(_api::ProductApi, product_id::String, attribute_id::String; store_id=nothing, include_default=nothing, reindex=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_attribute_value_unset_ProductApi, "/product.attribute.value.unset.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "attribute_id", attribute_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "include_default", include_default; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "reindex", reindex; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "clear_cache", clear_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.attribute.value.unset

Removes attribute value for a product.

Params:
- product_id::String (required)
- attribute_id::String (required)
- store_id::String
- include_default::Bool
- reindex::Bool
- clear_cache::Bool

Return: ProductAttributeValueUnset200Response, OpenAPI.Clients.ApiResponse
"""
function product_attribute_value_unset(_api::ProductApi, product_id::String, attribute_id::String; store_id=nothing, include_default=nothing, reindex=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_attribute_value_unset(_api, product_id, attribute_id; store_id=store_id, include_default=include_default, reindex=reindex, clear_cache=clear_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_attribute_value_unset(_api::ProductApi, response_stream::Channel, product_id::String, attribute_id::String; store_id=nothing, include_default=nothing, reindex=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_attribute_value_unset(_api, product_id, attribute_id; store_id=store_id, include_default=include_default, reindex=reindex, clear_cache=clear_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_brand_list_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseProductBrandList,
)

function _oacinternal_product_brand_list(_api::ProductApi; start=nothing, count=nothing, page_cursor=nothing, params=nothing, brand_ids=nothing, exclude=nothing, category_id=nothing, store_id=nothing, lang_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, parent_id=nothing, response_fields=nothing, find_where=nothing, find_value=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_brand_list_ProductApi, "/product.brand.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "brand_ids", brand_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "category_id", category_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "parent_id", parent_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_where", find_where; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_value", find_value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.brand.list

Get list of brands from your store.

Params:
- start::Int64
- count::Int64
- page_cursor::String
- params::String
- brand_ids::String
- exclude::String
- category_id::String
- store_id::String
- lang_id::String
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String
- parent_id::String
- response_fields::String
- find_where::String
- find_value::String

Return: ModelResponseProductBrandList, OpenAPI.Clients.ApiResponse
"""
function product_brand_list(_api::ProductApi; start=nothing, count=nothing, page_cursor=nothing, params=nothing, brand_ids=nothing, exclude=nothing, category_id=nothing, store_id=nothing, lang_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, parent_id=nothing, response_fields=nothing, find_where=nothing, find_value=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_brand_list(_api; start=start, count=count, page_cursor=page_cursor, params=params, brand_ids=brand_ids, exclude=exclude, category_id=category_id, store_id=store_id, lang_id=lang_id, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, parent_id=parent_id, response_fields=response_fields, find_where=find_where, find_value=find_value, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_brand_list(_api::ProductApi, response_stream::Channel; start=nothing, count=nothing, page_cursor=nothing, params=nothing, brand_ids=nothing, exclude=nothing, category_id=nothing, store_id=nothing, lang_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, parent_id=nothing, response_fields=nothing, find_where=nothing, find_value=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_brand_list(_api; start=start, count=count, page_cursor=page_cursor, params=params, brand_ids=brand_ids, exclude=exclude, category_id=category_id, store_id=store_id, lang_id=lang_id, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, parent_id=parent_id, response_fields=response_fields, find_where=find_where, find_value=find_value, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_child_item_find_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductChildItemFind200Response,
)

function _oacinternal_product_child_item_find(_api::ProductApi; find_value=nothing, find_where=nothing, find_params=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_child_item_find_ProductApi, "/product.child_item.find.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "find_value", find_value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_where", find_where; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_params", find_params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.child_item.find

Search product child item (bundled item or configurable product variant) in store catalog.

Params:
- find_value::String
- find_where::String
- find_params::String
- store_id::String

Return: ProductChildItemFind200Response, OpenAPI.Clients.ApiResponse
"""
function product_child_item_find(_api::ProductApi; find_value=nothing, find_where=nothing, find_params=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_child_item_find(_api; find_value=find_value, find_where=find_where, find_params=find_params, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_child_item_find(_api::ProductApi, response_stream::Channel; find_value=nothing, find_where=nothing, find_params=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_child_item_find(_api; find_value=find_value, find_where=find_where, find_params=find_params, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_child_item_info_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductChildItemInfo200Response,
)

function _oacinternal_product_child_item_info(_api::ProductApi, product_id::String, id::String; params=nothing, response_fields=nothing, exclude=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_child_item_info_ProductApi, "/product.child_item.info.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "currency_id", currency_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "use_latest_api_version", use_latest_api_version; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.child_item.info

Get child for specific product.

Params:
- product_id::String (required)
- id::String (required)
- params::String
- response_fields::String
- exclude::String
- store_id::String
- lang_id::String
- currency_id::String
- use_latest_api_version::Bool

Return: ProductChildItemInfo200Response, OpenAPI.Clients.ApiResponse
"""
function product_child_item_info(_api::ProductApi, product_id::String, id::String; params=nothing, response_fields=nothing, exclude=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_child_item_info(_api, product_id, id; params=params, response_fields=response_fields, exclude=exclude, store_id=store_id, lang_id=lang_id, currency_id=currency_id, use_latest_api_version=use_latest_api_version, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_child_item_info(_api::ProductApi, response_stream::Channel, product_id::String, id::String; params=nothing, response_fields=nothing, exclude=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_child_item_info(_api, product_id, id; params=params, response_fields=response_fields, exclude=exclude, store_id=store_id, lang_id=lang_id, currency_id=currency_id, use_latest_api_version=use_latest_api_version, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_child_item_list_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseProductChildItemList,
)

function _oacinternal_product_child_item_list(_api::ProductApi; page_cursor=nothing, start=nothing, count=nothing, params=nothing, response_fields=nothing, exclude=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, product_id=nothing, product_ids=nothing, sku=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, avail_sale=nothing, find_value=nothing, find_where=nothing, report_request_id=nothing, disable_report_cache=nothing, use_latest_api_version=nothing, return_global=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_child_item_list_ProductApi, "/product.child_item.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_ids", product_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sku", sku; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "currency_id", currency_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "avail_sale", avail_sale; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "find_value", find_value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_where", find_where; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "report_request_id", report_request_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "disable_report_cache", disable_report_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "use_latest_api_version", use_latest_api_version; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "return_global", return_global; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.child_item.list

Get a list of a product's child items, such as variants or bundle components. The total_count field in the response indicates the total number of items in the context of the current filter.

Params:
- page_cursor::String
- start::Int64
- count::Int64
- params::String
- response_fields::String
- exclude::String
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String
- product_id::String
- product_ids::String
- sku::String
- store_id::String
- lang_id::String
- currency_id::String
- avail_sale::Bool
- find_value::String
- find_where::String
- report_request_id::String
- disable_report_cache::Bool
- use_latest_api_version::Bool
- return_global::Bool

Return: ModelResponseProductChildItemList, OpenAPI.Clients.ApiResponse
"""
function product_child_item_list(_api::ProductApi; page_cursor=nothing, start=nothing, count=nothing, params=nothing, response_fields=nothing, exclude=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, product_id=nothing, product_ids=nothing, sku=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, avail_sale=nothing, find_value=nothing, find_where=nothing, report_request_id=nothing, disable_report_cache=nothing, use_latest_api_version=nothing, return_global=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_child_item_list(_api; page_cursor=page_cursor, start=start, count=count, params=params, response_fields=response_fields, exclude=exclude, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, product_id=product_id, product_ids=product_ids, sku=sku, store_id=store_id, lang_id=lang_id, currency_id=currency_id, avail_sale=avail_sale, find_value=find_value, find_where=find_where, report_request_id=report_request_id, disable_report_cache=disable_report_cache, use_latest_api_version=use_latest_api_version, return_global=return_global, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_child_item_list(_api::ProductApi, response_stream::Channel; page_cursor=nothing, start=nothing, count=nothing, params=nothing, response_fields=nothing, exclude=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, product_id=nothing, product_ids=nothing, sku=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, avail_sale=nothing, find_value=nothing, find_where=nothing, report_request_id=nothing, disable_report_cache=nothing, use_latest_api_version=nothing, return_global=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_child_item_list(_api; page_cursor=page_cursor, start=start, count=count, params=params, response_fields=response_fields, exclude=exclude, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, product_id=product_id, product_ids=product_ids, sku=sku, store_id=store_id, lang_id=lang_id, currency_id=currency_id, avail_sale=avail_sale, find_value=find_value, find_where=find_where, report_request_id=report_request_id, disable_report_cache=disable_report_cache, use_latest_api_version=use_latest_api_version, return_global=return_global, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_count_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductCount200Response,
)

function _oacinternal_product_count(_api::ProductApi; category_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, avail_view=nothing, avail_sale=nothing, store_id=nothing, lang_id=nothing, product_ids=nothing, since_id=nothing, report_request_id=nothing, disable_report_cache=nothing, brand_name=nothing, product_attributes=nothing, status=nothing, type=nothing, find_value=nothing, find_where=nothing, use_latest_api_version=nothing, return_global=nothing, categories_ids=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_count_ProductApi, "/product.count.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "category_id", category_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "avail_view", avail_view; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "avail_sale", avail_sale; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_ids", product_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "since_id", since_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "report_request_id", report_request_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "disable_report_cache", disable_report_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "brand_name", brand_name; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_attributes", product_attributes; style="form", is_explode=true)  # type Vector{String}
    OpenAPI.Clients.set_param(_ctx.query, "status", status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "type", type; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_value", find_value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_where", find_where; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "use_latest_api_version", use_latest_api_version; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "return_global", return_global; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "categories_ids", categories_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.count

Count products in store.

Params:
- category_id::String
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String
- avail_view::Bool
- avail_sale::Bool
- store_id::String
- lang_id::String
- product_ids::String
- since_id::String
- report_request_id::String
- disable_report_cache::Bool
- brand_name::String
- product_attributes::Vector{String}
- status::String
- type::String
- find_value::String
- find_where::String
- use_latest_api_version::Bool
- return_global::Bool
- categories_ids::String

Return: ProductCount200Response, OpenAPI.Clients.ApiResponse
"""
function product_count(_api::ProductApi; category_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, avail_view=nothing, avail_sale=nothing, store_id=nothing, lang_id=nothing, product_ids=nothing, since_id=nothing, report_request_id=nothing, disable_report_cache=nothing, brand_name=nothing, product_attributes=nothing, status=nothing, type=nothing, find_value=nothing, find_where=nothing, use_latest_api_version=nothing, return_global=nothing, categories_ids=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_count(_api; category_id=category_id, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, avail_view=avail_view, avail_sale=avail_sale, store_id=store_id, lang_id=lang_id, product_ids=product_ids, since_id=since_id, report_request_id=report_request_id, disable_report_cache=disable_report_cache, brand_name=brand_name, product_attributes=product_attributes, status=status, type=type, find_value=find_value, find_where=find_where, use_latest_api_version=use_latest_api_version, return_global=return_global, categories_ids=categories_ids, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_count(_api::ProductApi, response_stream::Channel; category_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, avail_view=nothing, avail_sale=nothing, store_id=nothing, lang_id=nothing, product_ids=nothing, since_id=nothing, report_request_id=nothing, disable_report_cache=nothing, brand_name=nothing, product_attributes=nothing, status=nothing, type=nothing, find_value=nothing, find_where=nothing, use_latest_api_version=nothing, return_global=nothing, categories_ids=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_count(_api; category_id=category_id, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, avail_view=avail_view, avail_sale=avail_sale, store_id=store_id, lang_id=lang_id, product_ids=product_ids, since_id=since_id, report_request_id=report_request_id, disable_report_cache=disable_report_cache, brand_name=brand_name, product_attributes=product_attributes, status=status, type=type, find_value=find_value, find_where=find_where, use_latest_api_version=use_latest_api_version, return_global=return_global, categories_ids=categories_ids, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_currency_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductCurrencyAdd200Response,
)

function _oacinternal_product_currency_add(_api::ProductApi, iso3::String, rate::Float64; name=nothing, avail=nothing, symbol_left=nothing, symbol_right=nothing, default=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_currency_add_ProductApi, "/product.currency.add.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "iso3", iso3; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "rate", rate; style="form", is_explode=true)  # type Float64
    OpenAPI.Clients.set_param(_ctx.query, "name", name; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "avail", avail; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "symbol_left", symbol_left; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "symbol_right", symbol_right; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "default", default; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.currency.add

Add currency and/or set default in store

Params:
- iso3::String (required)
- rate::Float64 (required)
- name::String
- avail::Bool
- symbol_left::String
- symbol_right::String
- default::Bool

Return: ProductCurrencyAdd200Response, OpenAPI.Clients.ApiResponse
"""
function product_currency_add(_api::ProductApi, iso3::String, rate::Float64; name=nothing, avail=nothing, symbol_left=nothing, symbol_right=nothing, default=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_currency_add(_api, iso3, rate; name=name, avail=avail, symbol_left=symbol_left, symbol_right=symbol_right, default=default, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_currency_add(_api::ProductApi, response_stream::Channel, iso3::String, rate::Float64; name=nothing, avail=nothing, symbol_left=nothing, symbol_right=nothing, default=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_currency_add(_api, iso3, rate; name=name, avail=avail, symbol_left=symbol_left, symbol_right=symbol_right, default=default, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_currency_list_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseProductCurrencyList,
)

function _oacinternal_product_currency_list(_api::ProductApi; start=nothing, count=nothing, params=nothing, page_cursor=nothing, exclude=nothing, response_fields=nothing, default=nothing, avail=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_currency_list_ProductApi, "/product.currency.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "default", default; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "avail", avail; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.currency.list

Get list of currencies

Params:
- start::Int64
- count::Int64
- params::String
- page_cursor::String
- exclude::String
- response_fields::String
- default::Bool
- avail::Bool

Return: ModelResponseProductCurrencyList, OpenAPI.Clients.ApiResponse
"""
function product_currency_list(_api::ProductApi; start=nothing, count=nothing, params=nothing, page_cursor=nothing, exclude=nothing, response_fields=nothing, default=nothing, avail=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_currency_list(_api; start=start, count=count, params=params, page_cursor=page_cursor, exclude=exclude, response_fields=response_fields, default=default, avail=avail, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_currency_list(_api::ProductApi, response_stream::Channel; start=nothing, count=nothing, params=nothing, page_cursor=nothing, exclude=nothing, response_fields=nothing, default=nothing, avail=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_currency_list(_api; start=start, count=count, params=params, page_cursor=page_cursor, exclude=exclude, response_fields=response_fields, default=default, avail=avail, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_delete_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CustomerDelete200Response,
)

function _oacinternal_product_delete(_api::ProductApi, id::String; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_product_delete_ProductApi, "/product.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.delete

Product delete

Params:
- id::String (required)
- store_id::String

Return: CustomerDelete200Response, OpenAPI.Clients.ApiResponse
"""
function product_delete(_api::ProductApi, id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_delete(_api, id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_delete(_api::ProductApi, response_stream::Channel, id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_delete(_api, id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_delete_batch_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CategoryAddBatch200Response,
)

function _oacinternal_product_delete_batch(_api::ProductApi, product_delete_batch_param::ProductDeleteBatch; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_delete_batch_ProductApi, "/product.delete.batch.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_delete_batch_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.delete.batch

Remove product from the store.

Params:
- product_delete_batch_param::ProductDeleteBatch (required)

Return: CategoryAddBatch200Response, OpenAPI.Clients.ApiResponse
"""
function product_delete_batch(_api::ProductApi, product_delete_batch_param::ProductDeleteBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_delete_batch(_api, product_delete_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_delete_batch(_api::ProductApi, response_stream::Channel, product_delete_batch_param::ProductDeleteBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_delete_batch(_api, product_delete_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_fields_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CartConfigUpdate200Response,
)

function _oacinternal_product_fields(_api::ProductApi; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_fields_ProductApi, "/product.fields.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.fields

Retrieve all available fields for product item in store.

Params:

Return: CartConfigUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function product_fields(_api::ProductApi; _mediaType=nothing)
    _ctx = _oacinternal_product_fields(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_fields(_api::ProductApi, response_stream::Channel; _mediaType=nothing)
    _ctx = _oacinternal_product_fields(_api; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_find_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductFind200Response,
)

function _oacinternal_product_find(_api::ProductApi, find_value::String; find_where=nothing, find_params=nothing, find_what=nothing, lang_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_find_ProductApi, "/product.find.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "find_value", find_value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_where", find_where; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_params", find_params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_what", find_what; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.find

Search product in store catalog. \"Apple\" is specified here by default.

Params:
- find_value::String (required)
- find_where::String
- find_params::String
- find_what::String
- lang_id::String
- store_id::String

Return: ProductFind200Response, OpenAPI.Clients.ApiResponse
"""
function product_find(_api::ProductApi, find_value::String; find_where=nothing, find_params=nothing, find_what=nothing, lang_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_find(_api, find_value; find_where=find_where, find_params=find_params, find_what=find_what, lang_id=lang_id, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_find(_api::ProductApi, response_stream::Channel, find_value::String; find_where=nothing, find_params=nothing, find_what=nothing, lang_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_find(_api, find_value; find_where=find_where, find_params=find_params, find_what=find_what, lang_id=lang_id, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_image_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductImageAdd200Response,
)

function _oacinternal_product_image_add(_api::ProductApi, product_image_add_param::ProductImageAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_image_add_ProductApi, "/product.image.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_image_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.image.add

Add image to product

Params:
- product_image_add_param::ProductImageAdd (required)

Return: ProductImageAdd200Response, OpenAPI.Clients.ApiResponse
"""
function product_image_add(_api::ProductApi, product_image_add_param::ProductImageAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_image_add(_api, product_image_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_image_add(_api::ProductApi, response_stream::Channel, product_image_add_param::ProductImageAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_image_add(_api, product_image_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_image_delete_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AttributeDelete200Response,
)

function _oacinternal_product_image_delete(_api::ProductApi, product_id::String, id::String; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_product_image_delete_ProductApi, "/product.image.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.image.delete

Delete image

Params:
- product_id::String (required)
- id::String (required)
- store_id::String

Return: AttributeDelete200Response, OpenAPI.Clients.ApiResponse
"""
function product_image_delete(_api::ProductApi, product_id::String, id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_image_delete(_api, product_id, id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_image_delete(_api::ProductApi, response_stream::Channel, product_id::String, id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_image_delete(_api, product_id, id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_image_update_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductImageUpdate200Response,
)

function _oacinternal_product_image_update(_api::ProductApi, product_id::String, id::String; variant_ids=nothing, image_name=nothing, type=nothing, label=nothing, position=nothing, store_id=nothing, lang_id=nothing, hidden=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_product_image_update_ProductApi, "/product.image.update.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "variant_ids", variant_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "image_name", image_name; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "type", type; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "label", label; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "position", position; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "hidden", hidden; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.image.update

Update details of image

Params:
- product_id::String (required)
- id::String (required)
- variant_ids::String
- image_name::String
- type::String
- label::String
- position::Int64
- store_id::String
- lang_id::String
- hidden::Bool

Return: ProductImageUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function product_image_update(_api::ProductApi, product_id::String, id::String; variant_ids=nothing, image_name=nothing, type=nothing, label=nothing, position=nothing, store_id=nothing, lang_id=nothing, hidden=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_image_update(_api, product_id, id; variant_ids=variant_ids, image_name=image_name, type=type, label=label, position=position, store_id=store_id, lang_id=lang_id, hidden=hidden, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_image_update(_api::ProductApi, response_stream::Channel, product_id::String, id::String; variant_ids=nothing, image_name=nothing, type=nothing, label=nothing, position=nothing, store_id=nothing, lang_id=nothing, hidden=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_image_update(_api, product_id, id; variant_ids=variant_ids, image_name=image_name, type=type, label=label, position=position, store_id=store_id, lang_id=lang_id, hidden=hidden, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_info_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductInfo200Response,
)

function _oacinternal_product_info(_api::ProductApi, id::String; params=nothing, response_fields=nothing, exclude=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, report_request_id=nothing, disable_report_cache=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_info_ProductApi, "/product.info.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "currency_id", currency_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "report_request_id", report_request_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "disable_report_cache", disable_report_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "use_latest_api_version", use_latest_api_version; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.info

Get information about a specific product by its ID. In the case of a multistore configuration, use the store_id filter to get a response in the context of a specific store.

Params:
- id::String (required)
- params::String
- response_fields::String
- exclude::String
- store_id::String
- lang_id::String
- currency_id::String
- report_request_id::String
- disable_report_cache::Bool
- use_latest_api_version::Bool

Return: ProductInfo200Response, OpenAPI.Clients.ApiResponse
"""
function product_info(_api::ProductApi, id::String; params=nothing, response_fields=nothing, exclude=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, report_request_id=nothing, disable_report_cache=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_info(_api, id; params=params, response_fields=response_fields, exclude=exclude, store_id=store_id, lang_id=lang_id, currency_id=currency_id, report_request_id=report_request_id, disable_report_cache=disable_report_cache, use_latest_api_version=use_latest_api_version, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_info(_api::ProductApi, response_stream::Channel, id::String; params=nothing, response_fields=nothing, exclude=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, report_request_id=nothing, disable_report_cache=nothing, use_latest_api_version=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_info(_api, id; params=params, response_fields=response_fields, exclude=exclude, store_id=store_id, lang_id=lang_id, currency_id=currency_id, report_request_id=report_request_id, disable_report_cache=disable_report_cache, use_latest_api_version=use_latest_api_version, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_list_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseProductList,
)

function _oacinternal_product_list(_api::ProductApi; page_cursor=nothing, start=nothing, count=nothing, params=nothing, response_fields=nothing, exclude=nothing, category_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, avail_view=nothing, avail_sale=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, product_ids=nothing, since_id=nothing, report_request_id=nothing, disable_report_cache=nothing, sort_by=nothing, sort_direction=nothing, sku=nothing, disable_cache=nothing, brand_name=nothing, product_attributes=nothing, status=nothing, type=nothing, find_value=nothing, find_where=nothing, use_latest_api_version=nothing, return_global=nothing, categories_ids=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_list_ProductApi, "/product.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "category_id", category_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "avail_view", avail_view; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "avail_sale", avail_sale; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "currency_id", currency_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_ids", product_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "since_id", since_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "report_request_id", report_request_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "disable_report_cache", disable_report_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "sort_by", sort_by; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort_direction", sort_direction; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sku", sku; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "disable_cache", disable_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "brand_name", brand_name; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_attributes", product_attributes; style="form", is_explode=true)  # type Vector{String}
    OpenAPI.Clients.set_param(_ctx.query, "status", status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "type", type; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_value", find_value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "find_where", find_where; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "use_latest_api_version", use_latest_api_version; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "return_global", return_global; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "categories_ids", categories_ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.list

Get list of products from your store. Returns 10 products by default.

Params:
- page_cursor::String
- start::Int64
- count::Int64
- params::String
- response_fields::String
- exclude::String
- category_id::String
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String
- avail_view::Bool
- avail_sale::Bool
- store_id::String
- lang_id::String
- currency_id::String
- product_ids::String
- since_id::String
- report_request_id::String
- disable_report_cache::Bool
- sort_by::String
- sort_direction::String
- sku::String
- disable_cache::Bool
- brand_name::String
- product_attributes::Vector{String}
- status::String
- type::String
- find_value::String
- find_where::String
- use_latest_api_version::Bool
- return_global::Bool
- categories_ids::String

Return: ModelResponseProductList, OpenAPI.Clients.ApiResponse
"""
function product_list(_api::ProductApi; page_cursor=nothing, start=nothing, count=nothing, params=nothing, response_fields=nothing, exclude=nothing, category_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, avail_view=nothing, avail_sale=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, product_ids=nothing, since_id=nothing, report_request_id=nothing, disable_report_cache=nothing, sort_by=nothing, sort_direction=nothing, sku=nothing, disable_cache=nothing, brand_name=nothing, product_attributes=nothing, status=nothing, type=nothing, find_value=nothing, find_where=nothing, use_latest_api_version=nothing, return_global=nothing, categories_ids=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_list(_api; page_cursor=page_cursor, start=start, count=count, params=params, response_fields=response_fields, exclude=exclude, category_id=category_id, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, avail_view=avail_view, avail_sale=avail_sale, store_id=store_id, lang_id=lang_id, currency_id=currency_id, product_ids=product_ids, since_id=since_id, report_request_id=report_request_id, disable_report_cache=disable_report_cache, sort_by=sort_by, sort_direction=sort_direction, sku=sku, disable_cache=disable_cache, brand_name=brand_name, product_attributes=product_attributes, status=status, type=type, find_value=find_value, find_where=find_where, use_latest_api_version=use_latest_api_version, return_global=return_global, categories_ids=categories_ids, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_list(_api::ProductApi, response_stream::Channel; page_cursor=nothing, start=nothing, count=nothing, params=nothing, response_fields=nothing, exclude=nothing, category_id=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, avail_view=nothing, avail_sale=nothing, store_id=nothing, lang_id=nothing, currency_id=nothing, product_ids=nothing, since_id=nothing, report_request_id=nothing, disable_report_cache=nothing, sort_by=nothing, sort_direction=nothing, sku=nothing, disable_cache=nothing, brand_name=nothing, product_attributes=nothing, status=nothing, type=nothing, find_value=nothing, find_where=nothing, use_latest_api_version=nothing, return_global=nothing, categories_ids=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_list(_api; page_cursor=page_cursor, start=start, count=count, params=params, response_fields=response_fields, exclude=exclude, category_id=category_id, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, avail_view=avail_view, avail_sale=avail_sale, store_id=store_id, lang_id=lang_id, currency_id=currency_id, product_ids=product_ids, since_id=since_id, report_request_id=report_request_id, disable_report_cache=disable_report_cache, sort_by=sort_by, sort_direction=sort_direction, sku=sku, disable_cache=disable_cache, brand_name=brand_name, product_attributes=product_attributes, status=status, type=type, find_value=find_value, find_where=find_where, use_latest_api_version=use_latest_api_version, return_global=return_global, categories_ids=categories_ids, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_manufacturer_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductManufacturerAdd200Response,
)

function _oacinternal_product_manufacturer_add(_api::ProductApi, product_id::String, manufacturer::String; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_manufacturer_add_ProductApi, "/product.manufacturer.add.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "manufacturer", manufacturer; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.manufacturer.add

Add manufacturer to store and assign to product

Params:
- product_id::String (required)
- manufacturer::String (required)
- store_id::String

Return: ProductManufacturerAdd200Response, OpenAPI.Clients.ApiResponse
"""
function product_manufacturer_add(_api::ProductApi, product_id::String, manufacturer::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_manufacturer_add(_api, product_id, manufacturer; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_manufacturer_add(_api::ProductApi, response_stream::Channel, product_id::String, manufacturer::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_manufacturer_add(_api, product_id, manufacturer; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_option_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductOptionAdd200Response,
)

function _oacinternal_product_option_add(_api::ProductApi, product_option_add_param::ProductOptionAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_option_add_ProductApi, "/product.option.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_option_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.option.add

Add product option from store.

Params:
- product_option_add_param::ProductOptionAdd (required)

Return: ProductOptionAdd200Response, OpenAPI.Clients.ApiResponse
"""
function product_option_add(_api::ProductApi, product_option_add_param::ProductOptionAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_option_add(_api, product_option_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_option_add(_api::ProductApi, response_stream::Channel, product_option_add_param::ProductOptionAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_option_add(_api, product_option_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_option_assign_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductOptionAssign200Response,
)

function _oacinternal_product_option_assign(_api::ProductApi, product_id::String, option_id::String; required=nothing, sort_order=nothing, option_values=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_option_assign_ProductApi, "/product.option.assign.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "option_id", option_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "required", required; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "sort_order", sort_order; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "option_values", option_values; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "clear_cache", clear_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.option.assign

Assign option from product.

Params:
- product_id::String (required)
- option_id::String (required)
- required::Bool
- sort_order::Int64
- option_values::String
- clear_cache::Bool

Return: ProductOptionAssign200Response, OpenAPI.Clients.ApiResponse
"""
function product_option_assign(_api::ProductApi, product_id::String, option_id::String; required=nothing, sort_order=nothing, option_values=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_assign(_api, product_id, option_id; required=required, sort_order=sort_order, option_values=option_values, clear_cache=clear_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_option_assign(_api::ProductApi, response_stream::Channel, product_id::String, option_id::String; required=nothing, sort_order=nothing, option_values=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_assign(_api, product_id, option_id; required=required, sort_order=sort_order, option_values=option_values, clear_cache=clear_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_option_delete_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AttributeDelete200Response,
)

function _oacinternal_product_option_delete(_api::ProductApi, option_id::String, product_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_product_option_delete_ProductApi, "/product.option.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "option_id", option_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.option.delete

Product option delete.

Params:
- option_id::String (required)
- product_id::String (required)
- store_id::String

Return: AttributeDelete200Response, OpenAPI.Clients.ApiResponse
"""
function product_option_delete(_api::ProductApi, option_id::String, product_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_delete(_api, option_id, product_id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_option_delete(_api::ProductApi, response_stream::Channel, option_id::String, product_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_delete(_api, option_id, product_id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_option_list_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseProductOptionList,
)

function _oacinternal_product_option_list(_api::ProductApi; start=nothing, count=nothing, params=nothing, exclude=nothing, response_fields=nothing, product_id=nothing, lang_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_option_list_ProductApi, "/product.option.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "lang_id", lang_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.option.list

Get list of options.

Params:
- start::Int64
- count::Int64
- params::String
- exclude::String
- response_fields::String
- product_id::String
- lang_id::String
- store_id::String

Return: ModelResponseProductOptionList, OpenAPI.Clients.ApiResponse
"""
function product_option_list(_api::ProductApi; start=nothing, count=nothing, params=nothing, exclude=nothing, response_fields=nothing, product_id=nothing, lang_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_list(_api; start=start, count=count, params=params, exclude=exclude, response_fields=response_fields, product_id=product_id, lang_id=lang_id, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_option_list(_api::ProductApi, response_stream::Channel; start=nothing, count=nothing, params=nothing, exclude=nothing, response_fields=nothing, product_id=nothing, lang_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_list(_api; start=start, count=count, params=params, exclude=exclude, response_fields=response_fields, product_id=product_id, lang_id=lang_id, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_option_value_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductOptionValueAdd200Response,
)

function _oacinternal_product_option_value_add(_api::ProductApi, product_id::String, option_id::String; option_value=nothing, sort_order=nothing, display_value=nothing, is_default=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_option_value_add_ProductApi, "/product.option.value.add.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "option_id", option_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "option_value", option_value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "sort_order", sort_order; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "display_value", display_value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "is_default", is_default; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_param(_ctx.query, "clear_cache", clear_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.option.value.add

Add product option item from option.

Params:
- product_id::String (required)
- option_id::String (required)
- option_value::String
- sort_order::Int64
- display_value::String
- is_default::Bool
- clear_cache::Bool

Return: ProductOptionValueAdd200Response, OpenAPI.Clients.ApiResponse
"""
function product_option_value_add(_api::ProductApi, product_id::String, option_id::String; option_value=nothing, sort_order=nothing, display_value=nothing, is_default=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_value_add(_api, product_id, option_id; option_value=option_value, sort_order=sort_order, display_value=display_value, is_default=is_default, clear_cache=clear_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_option_value_add(_api::ProductApi, response_stream::Channel, product_id::String, option_id::String; option_value=nothing, sort_order=nothing, display_value=nothing, is_default=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_value_add(_api, product_id, option_id; option_value=option_value, sort_order=sort_order, display_value=display_value, is_default=is_default, clear_cache=clear_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_option_value_assign_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductOptionValueAssign200Response,
)

function _oacinternal_product_option_value_assign(_api::ProductApi, product_option_id::Int64, option_value_id::String; clear_cache=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_option_value_assign_ProductApi, "/product.option.value.assign.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_option_id", product_option_id; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "option_value_id", option_value_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "clear_cache", clear_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.option.value.assign

Assign product option item from product.

Params:
- product_option_id::Int64 (required)
- option_value_id::String (required)
- clear_cache::Bool

Return: ProductOptionValueAssign200Response, OpenAPI.Clients.ApiResponse
"""
function product_option_value_assign(_api::ProductApi, product_option_id::Int64, option_value_id::String; clear_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_value_assign(_api, product_option_id, option_value_id; clear_cache=clear_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_option_value_assign(_api::ProductApi, response_stream::Channel, product_option_id::Int64, option_value_id::String; clear_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_value_assign(_api, product_option_id, option_value_id; clear_cache=clear_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_option_value_delete_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AttributeDelete200Response,
)

function _oacinternal_product_option_value_delete(_api::ProductApi, option_id::String, option_value_id::String, product_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_product_option_value_delete_ProductApi, "/product.option.value.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "option_id", option_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "option_value_id", option_value_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.option.value.delete

Product option value delete.

Params:
- option_id::String (required)
- option_value_id::String (required)
- product_id::String (required)
- store_id::String

Return: AttributeDelete200Response, OpenAPI.Clients.ApiResponse
"""
function product_option_value_delete(_api::ProductApi, option_id::String, option_value_id::String, product_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_value_delete(_api, option_id, option_value_id, product_id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_option_value_delete(_api::ProductApi, response_stream::Channel, option_id::String, option_value_id::String, product_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_value_delete(_api, option_id, option_value_id, product_id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_option_value_update_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AccountConfigUpdate200Response,
)

function _oacinternal_product_option_value_update(_api::ProductApi, product_id::String, option_id::String, option_value_id::String; option_value=nothing, price=nothing, quantity=nothing, display_value=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_product_option_value_update_ProductApi, "/product.option.value.update.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "option_id", option_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "option_value_id", option_value_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "option_value", option_value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "price", price; style="form", is_explode=true)  # type Float64
    OpenAPI.Clients.set_param(_ctx.query, "quantity", quantity; style="form", is_explode=true)  # type Float64
    OpenAPI.Clients.set_param(_ctx.query, "display_value", display_value; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "clear_cache", clear_cache; style="form", is_explode=true)  # type Bool
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.option.value.update

Update product option item from option.

Params:
- product_id::String (required)
- option_id::String (required)
- option_value_id::String (required)
- option_value::String
- price::Float64
- quantity::Float64
- display_value::String
- clear_cache::Bool

Return: AccountConfigUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function product_option_value_update(_api::ProductApi, product_id::String, option_id::String, option_value_id::String; option_value=nothing, price=nothing, quantity=nothing, display_value=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_value_update(_api, product_id, option_id, option_value_id; option_value=option_value, price=price, quantity=quantity, display_value=display_value, clear_cache=clear_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_option_value_update(_api::ProductApi, response_stream::Channel, product_id::String, option_id::String, option_value_id::String; option_value=nothing, price=nothing, quantity=nothing, display_value=nothing, clear_cache=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_option_value_update(_api, product_id, option_id, option_value_id; option_value=option_value, price=price, quantity=quantity, display_value=display_value, clear_cache=clear_cache, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_price_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CartValidate200Response,
)

function _oacinternal_product_price_add(_api::ProductApi, product_price_add_param::ProductPriceAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_price_add_ProductApi, "/product.price.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_price_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.price.add

Add some prices to the product.

Params:
- product_price_add_param::ProductPriceAdd (required)

Return: CartValidate200Response, OpenAPI.Clients.ApiResponse
"""
function product_price_add(_api::ProductApi, product_price_add_param::ProductPriceAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_price_add(_api, product_price_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_price_add(_api::ProductApi, response_stream::Channel, product_price_add_param::ProductPriceAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_price_add(_api, product_price_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_price_delete_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AttributeDelete200Response,
)

function _oacinternal_product_price_delete(_api::ProductApi, product_id::String; group_prices=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_product_price_delete_ProductApi, "/product.price.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "group_prices", group_prices; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.price.delete

Delete some prices of the product

Params:
- product_id::String (required)
- group_prices::String
- store_id::String

Return: AttributeDelete200Response, OpenAPI.Clients.ApiResponse
"""
function product_price_delete(_api::ProductApi, product_id::String; group_prices=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_price_delete(_api, product_id; group_prices=group_prices, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_price_delete(_api::ProductApi, response_stream::Channel, product_id::String; group_prices=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_price_delete(_api, product_id; group_prices=group_prices, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_price_update_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AccountConfigUpdate200Response,
)

function _oacinternal_product_price_update(_api::ProductApi, product_price_update_param::ProductPriceUpdate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_product_price_update_ProductApi, "/product.price.update.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_price_update_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.price.update

Update some prices of the product.

Params:
- product_price_update_param::ProductPriceUpdate (required)

Return: AccountConfigUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function product_price_update(_api::ProductApi, product_price_update_param::ProductPriceUpdate; _mediaType=nothing)
    _ctx = _oacinternal_product_price_update(_api, product_price_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_price_update(_api::ProductApi, response_stream::Channel, product_price_update_param::ProductPriceUpdate; _mediaType=nothing)
    _ctx = _oacinternal_product_price_update(_api, product_price_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_review_list_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ModelResponseProductReviewList,
)

function _oacinternal_product_review_list(_api::ProductApi, product_id::String; start=nothing, page_cursor=nothing, count=nothing, ids=nothing, store_id=nothing, status=nothing, params=nothing, exclude=nothing, response_fields=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_review_list_ProductApi, "/product.review.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "page_cursor", page_cursor; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "ids", ids; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "status", status; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "response_fields", response_fields; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.review.list

Get reviews of a specific product.

Params:
- product_id::String (required)
- start::Int64
- page_cursor::String
- count::Int64
- ids::String
- store_id::String
- status::String
- params::String
- exclude::String
- response_fields::String

Return: ModelResponseProductReviewList, OpenAPI.Clients.ApiResponse
"""
function product_review_list(_api::ProductApi, product_id::String; start=nothing, page_cursor=nothing, count=nothing, ids=nothing, store_id=nothing, status=nothing, params=nothing, exclude=nothing, response_fields=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_review_list(_api, product_id; start=start, page_cursor=page_cursor, count=count, ids=ids, store_id=store_id, status=status, params=params, exclude=exclude, response_fields=response_fields, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_review_list(_api::ProductApi, response_stream::Channel, product_id::String; start=nothing, page_cursor=nothing, count=nothing, ids=nothing, store_id=nothing, status=nothing, params=nothing, exclude=nothing, response_fields=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_review_list(_api, product_id; start=start, page_cursor=page_cursor, count=count, ids=ids, store_id=store_id, status=status, params=params, exclude=exclude, response_fields=response_fields, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_store_assign_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AccountConfigUpdate200Response,
)

function _oacinternal_product_store_assign(_api::ProductApi, product_id::String, store_id::String; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_store_assign_ProductApi, "/product.store.assign.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.store.assign

Assign product to store

Params:
- product_id::String (required)
- store_id::String (required)

Return: AccountConfigUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function product_store_assign(_api::ProductApi, product_id::String, store_id::String; _mediaType=nothing)
    _ctx = _oacinternal_product_store_assign(_api, product_id, store_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_store_assign(_api::ProductApi, response_stream::Channel, product_id::String, store_id::String; _mediaType=nothing)
    _ctx = _oacinternal_product_store_assign(_api, product_id, store_id; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_tax_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductTaxAdd200Response,
)

function _oacinternal_product_tax_add(_api::ProductApi, product_tax_add_param::ProductTaxAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_tax_add_ProductApi, "/product.tax.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_tax_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.tax.add

Add tax class and tax rate to store and assign to product.

Params:
- product_tax_add_param::ProductTaxAdd (required)

Return: ProductTaxAdd200Response, OpenAPI.Clients.ApiResponse
"""
function product_tax_add(_api::ProductApi, product_tax_add_param::ProductTaxAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_tax_add(_api, product_tax_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_tax_add(_api::ProductApi, response_stream::Channel, product_tax_add_param::ProductTaxAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_tax_add(_api, product_tax_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_update_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AccountConfigUpdate200Response,
)

function _oacinternal_product_update(_api::ProductApi, product_update_param::ProductUpdate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_product_update_ProductApi, "/product.update.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_update_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.update

This method can be used to update certain product data. The list of supported parameters depends on the specific platform. Please transmit only those parameters that are supported by the particular platform. Please note that to update the product quantity, it is recommended to use relative parameters (increase_quantity or reduce_quantity) to avoid unexpected overwrites on heavily loaded stores.

Params:
- product_update_param::ProductUpdate (required)

Return: AccountConfigUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function product_update(_api::ProductApi, product_update_param::ProductUpdate; _mediaType=nothing)
    _ctx = _oacinternal_product_update(_api, product_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_update(_api::ProductApi, response_stream::Channel, product_update_param::ProductUpdate; _mediaType=nothing)
    _ctx = _oacinternal_product_update(_api, product_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_update_batch_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CategoryAddBatch200Response,
)

function _oacinternal_product_update_batch(_api::ProductApi, product_update_batch_param::ProductUpdateBatch; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_update_batch_ProductApi, "/product.update.batch.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_update_batch_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.update.batch

Update products on the store.

Params:
- product_update_batch_param::ProductUpdateBatch (required)

Return: CategoryAddBatch200Response, OpenAPI.Clients.ApiResponse
"""
function product_update_batch(_api::ProductApi, product_update_batch_param::ProductUpdateBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_update_batch(_api, product_update_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_update_batch(_api::ProductApi, response_stream::Channel, product_update_batch_param::ProductUpdateBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_update_batch(_api, product_update_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductVariantAdd200Response,
)

function _oacinternal_product_variant_add(_api::ProductApi, product_variant_add_param::ProductVariantAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_variant_add_ProductApi, "/product.variant.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_variant_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.add

Add variant to product.

Params:
- product_variant_add_param::ProductVariantAdd (required)

Return: ProductVariantAdd200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_add(_api::ProductApi, product_variant_add_param::ProductVariantAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_add(_api, product_variant_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_add(_api::ProductApi, response_stream::Channel, product_variant_add_param::ProductVariantAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_add(_api, product_variant_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_add_batch_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CategoryAddBatch200Response,
)

function _oacinternal_product_variant_add_batch(_api::ProductApi, product_variant_add_batch_param::ProductVariantAddBatch; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_variant_add_batch_ProductApi, "/product.variant.add.batch.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_variant_add_batch_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.add.batch

Add new product variants to the store.

Params:
- product_variant_add_batch_param::ProductVariantAddBatch (required)

Return: CategoryAddBatch200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_add_batch(_api::ProductApi, product_variant_add_batch_param::ProductVariantAddBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_add_batch(_api, product_variant_add_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_add_batch(_api::ProductApi, response_stream::Channel, product_variant_add_batch_param::ProductVariantAddBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_add_batch(_api, product_variant_add_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_count_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductVariantCount200Response,
)

function _oacinternal_product_variant_count(_api::ProductApi, product_id::String; created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, category_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_variant_count_ProductApi, "/product.variant.count.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "category_id", category_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.count

Get count variants.

Params:
- product_id::String (required)
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String
- category_id::String
- store_id::String

Return: ProductVariantCount200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_count(_api::ProductApi, product_id::String; created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, category_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_count(_api, product_id; created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, category_id=category_id, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_count(_api::ProductApi, response_stream::Channel, product_id::String; created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, category_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_count(_api, product_id; created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, category_id=category_id, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_delete_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AttributeValueDelete200Response,
)

function _oacinternal_product_variant_delete(_api::ProductApi, id::String, product_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_product_variant_delete_ProductApi, "/product.variant.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.delete

Delete variant.

Params:
- id::String (required)
- product_id::String (required)
- store_id::String

Return: AttributeValueDelete200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_delete(_api::ProductApi, id::String, product_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_delete(_api, id, product_id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_delete(_api::ProductApi, response_stream::Channel, id::String, product_id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_delete(_api, id, product_id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_delete_batch_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CategoryAddBatch200Response,
)

function _oacinternal_product_variant_delete_batch(_api::ProductApi, product_variant_delete_batch_param::ProductVariantDeleteBatch; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_variant_delete_batch_ProductApi, "/product.variant.delete.batch.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_variant_delete_batch_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.delete.batch

Remove product variants from the store.

Params:
- product_variant_delete_batch_param::ProductVariantDeleteBatch (required)

Return: CategoryAddBatch200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_delete_batch(_api::ProductApi, product_variant_delete_batch_param::ProductVariantDeleteBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_delete_batch(_api, product_variant_delete_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_delete_batch(_api::ProductApi, response_stream::Channel, product_variant_delete_batch_param::ProductVariantDeleteBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_delete_batch(_api, product_variant_delete_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_image_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductVariantImageAdd200Response,
)

function _oacinternal_product_variant_image_add(_api::ProductApi, product_variant_image_add_param::ProductVariantImageAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_variant_image_add_ProductApi, "/product.variant.image.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_variant_image_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.image.add

Add image to product

Params:
- product_variant_image_add_param::ProductVariantImageAdd (required)

Return: ProductVariantImageAdd200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_image_add(_api::ProductApi, product_variant_image_add_param::ProductVariantImageAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_image_add(_api, product_variant_image_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_image_add(_api::ProductApi, response_stream::Channel, product_variant_image_add_param::ProductVariantImageAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_image_add(_api, product_variant_image_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_image_delete_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AttributeDelete200Response,
)

function _oacinternal_product_variant_image_delete(_api::ProductApi, product_id::String, product_variant_id::String, id::String; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_product_variant_image_delete_ProductApi, "/product.variant.image.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_variant_id", product_variant_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.image.delete

Delete  image to product

Params:
- product_id::String (required)
- product_variant_id::String (required)
- id::String (required)
- store_id::String

Return: AttributeDelete200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_image_delete(_api::ProductApi, product_id::String, product_variant_id::String, id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_image_delete(_api, product_id, product_variant_id, id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_image_delete(_api::ProductApi, response_stream::Channel, product_id::String, product_variant_id::String, id::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_image_delete(_api, product_id, product_variant_id, id; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_info_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductInfo200Response,
)

function _oacinternal_product_variant_info(_api::ProductApi, id::String; params=nothing, exclude=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_variant_info_ProductApi, "/product.variant.info.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.info

Get variant info. This method is deprecated, and its development is stopped. Please use \"product.child_item.info\" instead.

Params:
- id::String (required)
- params::String
- exclude::String
- store_id::String

Return: ProductInfo200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_info(_api::ProductApi, id::String; params=nothing, exclude=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_info(_api, id; params=params, exclude=exclude, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_info(_api::ProductApi, response_stream::Channel, id::String; params=nothing, exclude=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_info(_api, id; params=params, exclude=exclude, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_list_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => ProductVariantList200Response,
)

function _oacinternal_product_variant_list(_api::ProductApi; start=nothing, count=nothing, params=nothing, exclude=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, category_id=nothing, product_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "GET", _returntypes_product_variant_list_ProductApi, "/product.variant.list.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "start", start; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "count", count; style="form", is_explode=true)  # type Int64
    OpenAPI.Clients.set_param(_ctx.query, "params", params; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "exclude", exclude; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_from", created_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "created_to", created_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_from", modified_from; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "modified_to", modified_to; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "category_id", category_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.list

Get a list of variants. This method is deprecated, and its development is stopped. Please use \"product.child_item.list\" instead.

Params:
- start::Int64
- count::Int64
- params::String
- exclude::String
- created_from::String
- created_to::String
- modified_from::String
- modified_to::String
- category_id::String
- product_id::String
- store_id::String

Return: ProductVariantList200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_list(_api::ProductApi; start=nothing, count=nothing, params=nothing, exclude=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, category_id=nothing, product_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_list(_api; start=start, count=count, params=params, exclude=exclude, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, category_id=category_id, product_id=product_id, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_list(_api::ProductApi, response_stream::Channel; start=nothing, count=nothing, params=nothing, exclude=nothing, created_from=nothing, created_to=nothing, modified_from=nothing, modified_to=nothing, category_id=nothing, product_id=nothing, store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_list(_api; start=start, count=count, params=params, exclude=exclude, created_from=created_from, created_to=created_to, modified_from=modified_from, modified_to=modified_to, category_id=category_id, product_id=product_id, store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_price_add_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CartValidate200Response,
)

function _oacinternal_product_variant_price_add(_api::ProductApi, product_variant_price_add_param::ProductVariantPriceAdd; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_variant_price_add_ProductApi, "/product.variant.price.add.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_variant_price_add_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.price.add

Add some prices to the product variant.

Params:
- product_variant_price_add_param::ProductVariantPriceAdd (required)

Return: CartValidate200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_price_add(_api::ProductApi, product_variant_price_add_param::ProductVariantPriceAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_price_add(_api, product_variant_price_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_price_add(_api::ProductApi, response_stream::Channel, product_variant_price_add_param::ProductVariantPriceAdd; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_price_add(_api, product_variant_price_add_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_price_delete_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AttributeDelete200Response,
)

function _oacinternal_product_variant_price_delete(_api::ProductApi, id::String, product_id::String, group_prices::String; store_id=nothing, _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "DELETE", _returntypes_product_variant_price_delete_ProductApi, "/product.variant.price.delete.json", ["StoreKeyAuth", "ApiKeyAuth", ])
    OpenAPI.Clients.set_param(_ctx.query, "id", id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "product_id", product_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "group_prices", group_prices; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_param(_ctx.query, "store_id", store_id; style="form", is_explode=true)  # type String
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? [] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.price.delete

Delete some prices of the product variant.

Params:
- id::String (required)
- product_id::String (required)
- group_prices::String (required)
- store_id::String

Return: AttributeDelete200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_price_delete(_api::ProductApi, id::String, product_id::String, group_prices::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_price_delete(_api, id, product_id, group_prices; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_price_delete(_api::ProductApi, response_stream::Channel, id::String, product_id::String, group_prices::String; store_id=nothing, _mediaType=nothing)
    _ctx = _oacinternal_product_variant_price_delete(_api, id, product_id, group_prices; store_id=store_id, _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_price_update_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AccountConfigUpdate200Response,
)

function _oacinternal_product_variant_price_update(_api::ProductApi, product_variant_price_update_param::ProductVariantPriceUpdate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_product_variant_price_update_ProductApi, "/product.variant.price.update.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_variant_price_update_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.price.update

Update some prices of the product variant.

Params:
- product_variant_price_update_param::ProductVariantPriceUpdate (required)

Return: AccountConfigUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_price_update(_api::ProductApi, product_variant_price_update_param::ProductVariantPriceUpdate; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_price_update(_api, product_variant_price_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_price_update(_api::ProductApi, response_stream::Channel, product_variant_price_update_param::ProductVariantPriceUpdate; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_price_update(_api, product_variant_price_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_update_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => AccountConfigUpdate200Response,
)

function _oacinternal_product_variant_update(_api::ProductApi, product_variant_update_param::ProductVariantUpdate; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "PUT", _returntypes_product_variant_update_ProductApi, "/product.variant.update.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_variant_update_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.update

Update variant.

Params:
- product_variant_update_param::ProductVariantUpdate (required)

Return: AccountConfigUpdate200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_update(_api::ProductApi, product_variant_update_param::ProductVariantUpdate; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_update(_api, product_variant_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_update(_api::ProductApi, response_stream::Channel, product_variant_update_param::ProductVariantUpdate; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_update(_api, product_variant_update_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

const _returntypes_product_variant_update_batch_ProductApi = Dict{Regex,Type}(
    Regex("^" * replace("200", "x"=>".") * "\$") => CategoryAddBatch200Response,
)

function _oacinternal_product_variant_update_batch(_api::ProductApi, product_variant_update_batch_param::ProductVariantUpdateBatch; _mediaType=nothing)
    _ctx = OpenAPI.Clients.Ctx(_api.client, "POST", _returntypes_product_variant_update_batch_ProductApi, "/product.variant.update.batch.json", ["StoreKeyAuth", "ApiKeyAuth", ], product_variant_update_batch_param)
    OpenAPI.Clients.set_header_accept(_ctx, ["application/json", ])
    OpenAPI.Clients.set_header_content_type(_ctx, (_mediaType === nothing) ? ["application/json", ] : [_mediaType])
    return _ctx
end

@doc raw"""product.variant.update.batch

Update products variants on the store.

Params:
- product_variant_update_batch_param::ProductVariantUpdateBatch (required)

Return: CategoryAddBatch200Response, OpenAPI.Clients.ApiResponse
"""
function product_variant_update_batch(_api::ProductApi, product_variant_update_batch_param::ProductVariantUpdateBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_update_batch(_api, product_variant_update_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx)
end

function product_variant_update_batch(_api::ProductApi, response_stream::Channel, product_variant_update_batch_param::ProductVariantUpdateBatch; _mediaType=nothing)
    _ctx = _oacinternal_product_variant_update_batch(_api, product_variant_update_batch_param; _mediaType=_mediaType)
    return OpenAPI.Clients.exec(_ctx, response_stream)
end

export product_add
export product_add_batch
export product_attribute_list
export product_attribute_value_set
export product_attribute_value_unset
export product_brand_list
export product_child_item_find
export product_child_item_info
export product_child_item_list
export product_count
export product_currency_add
export product_currency_list
export product_delete
export product_delete_batch
export product_fields
export product_find
export product_image_add
export product_image_delete
export product_image_update
export product_info
export product_list
export product_manufacturer_add
export product_option_add
export product_option_assign
export product_option_delete
export product_option_list
export product_option_value_add
export product_option_value_assign
export product_option_value_delete
export product_option_value_update
export product_price_add
export product_price_delete
export product_price_update
export product_review_list
export product_store_assign
export product_tax_add
export product_update
export product_update_batch
export product_variant_add
export product_variant_add_batch
export product_variant_count
export product_variant_delete
export product_variant_delete_batch
export product_variant_image_add
export product_variant_image_delete
export product_variant_info
export product_variant_list
export product_variant_price_add
export product_variant_price_delete
export product_variant_price_update
export product_variant_update
export product_variant_update_batch
