# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductAdd_best_offer
The price at which Best Offers are automatically accepted.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;best_offer[&lt;b&gt;minimum_offer_price&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;best_offer[&lt;b&gt;auto_accept_price&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;

    ProductAddBestOffer(;
        minimum_offer_price=nothing,
        auto_accept_price=nothing,
    )

    - minimum_offer_price::Float64
    - auto_accept_price::Float64
"""
Base.@kwdef mutable struct ProductAddBestOffer <: OpenAPI.APIModel
    minimum_offer_price::Union{Nothing, Float64} = nothing
    auto_accept_price::Union{Nothing, Float64} = nothing

    function ProductAddBestOffer(minimum_offer_price, auto_accept_price, )
        OpenAPI.validate_property(ProductAddBestOffer, Symbol("minimum_offer_price"), minimum_offer_price)
        OpenAPI.validate_property(ProductAddBestOffer, Symbol("auto_accept_price"), auto_accept_price)
        return new(minimum_offer_price, auto_accept_price, )
    end
end # type ProductAddBestOffer

const _property_types_ProductAddBestOffer = Dict{Symbol,String}(Symbol("minimum_offer_price")=>"Float64", Symbol("auto_accept_price")=>"Float64", )
OpenAPI.property_type(::Type{ ProductAddBestOffer }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductAddBestOffer[name]))}

function check_required(o::ProductAddBestOffer)
    true
end

function OpenAPI.validate_property(::Type{ ProductAddBestOffer }, name::Symbol, val)


end
