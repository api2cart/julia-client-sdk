# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Product_GroupPrice

    ProductGroupPrice(;
        id=nothing,
        group_id=nothing,
        price=nothing,
        store_id=nothing,
        quantity=nothing,
        start_time=nothing,
        expire_time=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - group_id::String
    - price::Float64
    - store_id::String
    - quantity::Float64
    - start_time::String
    - expire_time::String
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct ProductGroupPrice <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    group_id::Union{Nothing, String} = nothing
    price::Union{Nothing, Float64} = nothing
    store_id::Union{Nothing, String} = nothing
    quantity::Union{Nothing, Float64} = nothing
    start_time::Union{Nothing, String} = nothing
    expire_time::Union{Nothing, String} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function ProductGroupPrice(id, group_id, price, store_id, quantity, start_time, expire_time, additional_fields, custom_fields, )
        OpenAPI.validate_property(ProductGroupPrice, Symbol("id"), id)
        OpenAPI.validate_property(ProductGroupPrice, Symbol("group_id"), group_id)
        OpenAPI.validate_property(ProductGroupPrice, Symbol("price"), price)
        OpenAPI.validate_property(ProductGroupPrice, Symbol("store_id"), store_id)
        OpenAPI.validate_property(ProductGroupPrice, Symbol("quantity"), quantity)
        OpenAPI.validate_property(ProductGroupPrice, Symbol("start_time"), start_time)
        OpenAPI.validate_property(ProductGroupPrice, Symbol("expire_time"), expire_time)
        OpenAPI.validate_property(ProductGroupPrice, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(ProductGroupPrice, Symbol("custom_fields"), custom_fields)
        return new(id, group_id, price, store_id, quantity, start_time, expire_time, additional_fields, custom_fields, )
    end
end # type ProductGroupPrice

const _property_types_ProductGroupPrice = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("group_id")=>"String", Symbol("price")=>"Float64", Symbol("store_id")=>"String", Symbol("quantity")=>"Float64", Symbol("start_time")=>"String", Symbol("expire_time")=>"String", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ ProductGroupPrice }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductGroupPrice[name]))}

function check_required(o::ProductGroupPrice)
    true
end

function OpenAPI.validate_property(::Type{ ProductGroupPrice }, name::Symbol, val)









end
