# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Shipment_TrackingNumber

    ShipmentTrackingNumber(;
        carrier_id=nothing,
        tracking_number=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - carrier_id::String
    - tracking_number::String
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct ShipmentTrackingNumber <: OpenAPI.APIModel
    carrier_id::Union{Nothing, String} = nothing
    tracking_number::Union{Nothing, String} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function ShipmentTrackingNumber(carrier_id, tracking_number, additional_fields, custom_fields, )
        OpenAPI.validate_property(ShipmentTrackingNumber, Symbol("carrier_id"), carrier_id)
        OpenAPI.validate_property(ShipmentTrackingNumber, Symbol("tracking_number"), tracking_number)
        OpenAPI.validate_property(ShipmentTrackingNumber, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(ShipmentTrackingNumber, Symbol("custom_fields"), custom_fields)
        return new(carrier_id, tracking_number, additional_fields, custom_fields, )
    end
end # type ShipmentTrackingNumber

const _property_types_ShipmentTrackingNumber = Dict{Symbol,String}(Symbol("carrier_id")=>"String", Symbol("tracking_number")=>"String", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ ShipmentTrackingNumber }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ShipmentTrackingNumber[name]))}

function check_required(o::ShipmentTrackingNumber)
    true
end

function OpenAPI.validate_property(::Type{ ShipmentTrackingNumber }, name::Symbol, val)




end
