# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderShipmentAddBatch_payload_inner

    OrderShipmentAddBatchPayloadInner(;
        order_id=nothing,
        store_id=nothing,
        warehouse_id=nothing,
        carrier_id=nothing,
        carrier_name=nothing,
        tracking_number=nothing,
        tracking_link=nothing,
        shipment_provider=nothing,
        items=nothing,
        send_notifications=nothing,
    )

    - order_id::String
    - store_id::String
    - warehouse_id::String
    - carrier_id::String
    - carrier_name::String
    - tracking_number::String
    - tracking_link::String
    - shipment_provider::String
    - items::Vector{OrderShipmentAddBatchPayloadInnerItemsInner}
    - send_notifications::Bool
"""
Base.@kwdef mutable struct OrderShipmentAddBatchPayloadInner <: OpenAPI.APIModel
    order_id::Union{Nothing, String} = nothing
    store_id::Union{Nothing, String} = nothing
    warehouse_id::Union{Nothing, String} = nothing
    carrier_id::Union{Nothing, String} = nothing
    carrier_name::Union{Nothing, String} = nothing
    tracking_number::Union{Nothing, String} = nothing
    tracking_link::Union{Nothing, String} = nothing
    shipment_provider::Union{Nothing, String} = nothing
    items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OrderShipmentAddBatchPayloadInnerItemsInner} }
    send_notifications::Union{Nothing, Bool} = nothing

    function OrderShipmentAddBatchPayloadInner(order_id, store_id, warehouse_id, carrier_id, carrier_name, tracking_number, tracking_link, shipment_provider, items, send_notifications, )
        OpenAPI.validate_property(OrderShipmentAddBatchPayloadInner, Symbol("order_id"), order_id)
        OpenAPI.validate_property(OrderShipmentAddBatchPayloadInner, Symbol("store_id"), store_id)
        OpenAPI.validate_property(OrderShipmentAddBatchPayloadInner, Symbol("warehouse_id"), warehouse_id)
        OpenAPI.validate_property(OrderShipmentAddBatchPayloadInner, Symbol("carrier_id"), carrier_id)
        OpenAPI.validate_property(OrderShipmentAddBatchPayloadInner, Symbol("carrier_name"), carrier_name)
        OpenAPI.validate_property(OrderShipmentAddBatchPayloadInner, Symbol("tracking_number"), tracking_number)
        OpenAPI.validate_property(OrderShipmentAddBatchPayloadInner, Symbol("tracking_link"), tracking_link)
        OpenAPI.validate_property(OrderShipmentAddBatchPayloadInner, Symbol("shipment_provider"), shipment_provider)
        OpenAPI.validate_property(OrderShipmentAddBatchPayloadInner, Symbol("items"), items)
        OpenAPI.validate_property(OrderShipmentAddBatchPayloadInner, Symbol("send_notifications"), send_notifications)
        return new(order_id, store_id, warehouse_id, carrier_id, carrier_name, tracking_number, tracking_link, shipment_provider, items, send_notifications, )
    end
end # type OrderShipmentAddBatchPayloadInner

const _property_types_OrderShipmentAddBatchPayloadInner = Dict{Symbol,String}(Symbol("order_id")=>"String", Symbol("store_id")=>"String", Symbol("warehouse_id")=>"String", Symbol("carrier_id")=>"String", Symbol("carrier_name")=>"String", Symbol("tracking_number")=>"String", Symbol("tracking_link")=>"String", Symbol("shipment_provider")=>"String", Symbol("items")=>"Vector{OrderShipmentAddBatchPayloadInnerItemsInner}", Symbol("send_notifications")=>"Bool", )
OpenAPI.property_type(::Type{ OrderShipmentAddBatchPayloadInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderShipmentAddBatchPayloadInner[name]))}

function check_required(o::OrderShipmentAddBatchPayloadInner)
    o.order_id === nothing && (return false)
    o.tracking_number === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OrderShipmentAddBatchPayloadInner }, name::Symbol, val)









    if name === Symbol("items")
        OpenAPI.validate_param(name, "OrderShipmentAddBatchPayloadInner", :minItems, val, 1)
    end

end
