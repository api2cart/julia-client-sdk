# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Product_AdvancedPrice

    ProductAdvancedPrice(;
        id=nothing,
        value=nothing,
        avail=nothing,
        group_id=nothing,
        quantity_from=nothing,
        start_time=nothing,
        expire_time=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - value::Float64
    - avail::Bool
    - group_id::String
    - quantity_from::Float64
    - start_time::A2CDateTime
    - expire_time::A2CDateTime
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct ProductAdvancedPrice <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    value::Union{Nothing, Float64} = nothing
    avail::Union{Nothing, Bool} = nothing
    group_id::Union{Nothing, String} = nothing
    quantity_from::Union{Nothing, Float64} = nothing
    start_time = nothing # spec type: Union{ Nothing, A2CDateTime }
    expire_time = nothing # spec type: Union{ Nothing, A2CDateTime }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function ProductAdvancedPrice(id, value, avail, group_id, quantity_from, start_time, expire_time, additional_fields, custom_fields, )
        OpenAPI.validate_property(ProductAdvancedPrice, Symbol("id"), id)
        OpenAPI.validate_property(ProductAdvancedPrice, Symbol("value"), value)
        OpenAPI.validate_property(ProductAdvancedPrice, Symbol("avail"), avail)
        OpenAPI.validate_property(ProductAdvancedPrice, Symbol("group_id"), group_id)
        OpenAPI.validate_property(ProductAdvancedPrice, Symbol("quantity_from"), quantity_from)
        OpenAPI.validate_property(ProductAdvancedPrice, Symbol("start_time"), start_time)
        OpenAPI.validate_property(ProductAdvancedPrice, Symbol("expire_time"), expire_time)
        OpenAPI.validate_property(ProductAdvancedPrice, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(ProductAdvancedPrice, Symbol("custom_fields"), custom_fields)
        return new(id, value, avail, group_id, quantity_from, start_time, expire_time, additional_fields, custom_fields, )
    end
end # type ProductAdvancedPrice

const _property_types_ProductAdvancedPrice = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("value")=>"Float64", Symbol("avail")=>"Bool", Symbol("group_id")=>"String", Symbol("quantity_from")=>"Float64", Symbol("start_time")=>"A2CDateTime", Symbol("expire_time")=>"A2CDateTime", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ ProductAdvancedPrice }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductAdvancedPrice[name]))}

function check_required(o::ProductAdvancedPrice)
    true
end

function OpenAPI.validate_property(::Type{ ProductAdvancedPrice }, name::Symbol, val)









end
