# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CartConfigUpdate

    CartConfigUpdate(;
        db_tables_prefix=nothing,
        custom_fields=nothing,
        store_id=nothing,
        user_agent=nothing,
    )

    - db_tables_prefix::String : This parameter is deprecated for this method. Please, use this parameter in method account.config.update
    - custom_fields::Any : This parameter sets the list of params to the shopping cart.
    - store_id::String : Store Id
    - user_agent::String : This parameter allows you to set your custom user agent, which will be used in requests to the store. Please use it cautiously, as the store&#39;s firewall may block specific values.
"""
Base.@kwdef mutable struct CartConfigUpdate <: OpenAPI.APIModel
    db_tables_prefix::Union{Nothing, String} = nothing
    custom_fields::Union{Nothing, Any} = nothing
    store_id::Union{Nothing, String} = nothing
    user_agent::Union{Nothing, String} = nothing

    function CartConfigUpdate(db_tables_prefix, custom_fields, store_id, user_agent, )
        OpenAPI.validate_property(CartConfigUpdate, Symbol("db_tables_prefix"), db_tables_prefix)
        OpenAPI.validate_property(CartConfigUpdate, Symbol("custom_fields"), custom_fields)
        OpenAPI.validate_property(CartConfigUpdate, Symbol("store_id"), store_id)
        OpenAPI.validate_property(CartConfigUpdate, Symbol("user_agent"), user_agent)
        return new(db_tables_prefix, custom_fields, store_id, user_agent, )
    end
end # type CartConfigUpdate

const _property_types_CartConfigUpdate = Dict{Symbol,String}(Symbol("db_tables_prefix")=>"String", Symbol("custom_fields")=>"Any", Symbol("store_id")=>"String", Symbol("user_agent")=>"String", )
OpenAPI.property_type(::Type{ CartConfigUpdate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CartConfigUpdate[name]))}

function check_required(o::CartConfigUpdate)
    true
end

function OpenAPI.validate_property(::Type{ CartConfigUpdate }, name::Symbol, val)




end
