# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Script

    Script(;
        id=nothing,
        name=nothing,
        description=nothing,
        src=nothing,
        scope=nothing,
        event=nothing,
        load_method=nothing,
        html=nothing,
        created_time=nothing,
        modified_time=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - name::String
    - description::String
    - src::String
    - scope::String
    - event::String
    - load_method::String
    - html::String
    - created_time::A2CDateTime
    - modified_time::A2CDateTime
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct Script <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    src::Union{Nothing, String} = nothing
    scope::Union{Nothing, String} = nothing
    event::Union{Nothing, String} = nothing
    load_method::Union{Nothing, String} = nothing
    html::Union{Nothing, String} = nothing
    created_time = nothing # spec type: Union{ Nothing, A2CDateTime }
    modified_time = nothing # spec type: Union{ Nothing, A2CDateTime }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function Script(id, name, description, src, scope, event, load_method, html, created_time, modified_time, additional_fields, custom_fields, )
        OpenAPI.validate_property(Script, Symbol("id"), id)
        OpenAPI.validate_property(Script, Symbol("name"), name)
        OpenAPI.validate_property(Script, Symbol("description"), description)
        OpenAPI.validate_property(Script, Symbol("src"), src)
        OpenAPI.validate_property(Script, Symbol("scope"), scope)
        OpenAPI.validate_property(Script, Symbol("event"), event)
        OpenAPI.validate_property(Script, Symbol("load_method"), load_method)
        OpenAPI.validate_property(Script, Symbol("html"), html)
        OpenAPI.validate_property(Script, Symbol("created_time"), created_time)
        OpenAPI.validate_property(Script, Symbol("modified_time"), modified_time)
        OpenAPI.validate_property(Script, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(Script, Symbol("custom_fields"), custom_fields)
        return new(id, name, description, src, scope, event, load_method, html, created_time, modified_time, additional_fields, custom_fields, )
    end
end # type Script

const _property_types_Script = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("src")=>"String", Symbol("scope")=>"String", Symbol("event")=>"String", Symbol("load_method")=>"String", Symbol("html")=>"String", Symbol("created_time")=>"A2CDateTime", Symbol("modified_time")=>"A2CDateTime", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ Script }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Script[name]))}

function check_required(o::Script)
    true
end

function OpenAPI.validate_property(::Type{ Script }, name::Symbol, val)












end
