# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Response_Order_List_Result

    ResponseOrderListResult(;
        orders_count=nothing,
        order=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - orders_count::Int64
    - order::Vector{Order}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct ResponseOrderListResult <: OpenAPI.APIModel
    orders_count::Union{Nothing, Int64} = nothing
    order::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Order} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function ResponseOrderListResult(orders_count, order, additional_fields, custom_fields, )
        OpenAPI.validate_property(ResponseOrderListResult, Symbol("orders_count"), orders_count)
        OpenAPI.validate_property(ResponseOrderListResult, Symbol("order"), order)
        OpenAPI.validate_property(ResponseOrderListResult, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(ResponseOrderListResult, Symbol("custom_fields"), custom_fields)
        return new(orders_count, order, additional_fields, custom_fields, )
    end
end # type ResponseOrderListResult

const _property_types_ResponseOrderListResult = Dict{Symbol,String}(Symbol("orders_count")=>"Int64", Symbol("order")=>"Vector{Order}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ ResponseOrderListResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ResponseOrderListResult[name]))}

function check_required(o::ResponseOrderListResult)
    true
end

function OpenAPI.validate_property(::Type{ ResponseOrderListResult }, name::Symbol, val)




end
