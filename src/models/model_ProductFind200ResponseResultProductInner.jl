# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductFind_200_response_result_product_inner

    ProductFind200ResponseResultProductInner(;
        id=nothing,
        name=nothing,
        description=nothing,
        price=nothing,
    )

    - id::String
    - name::String
    - description::String
    - price::Float64
"""
Base.@kwdef mutable struct ProductFind200ResponseResultProductInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    price::Union{Nothing, Float64} = nothing

    function ProductFind200ResponseResultProductInner(id, name, description, price, )
        OpenAPI.validate_property(ProductFind200ResponseResultProductInner, Symbol("id"), id)
        OpenAPI.validate_property(ProductFind200ResponseResultProductInner, Symbol("name"), name)
        OpenAPI.validate_property(ProductFind200ResponseResultProductInner, Symbol("description"), description)
        OpenAPI.validate_property(ProductFind200ResponseResultProductInner, Symbol("price"), price)
        return new(id, name, description, price, )
    end
end # type ProductFind200ResponseResultProductInner

const _property_types_ProductFind200ResponseResultProductInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("price")=>"Float64", )
OpenAPI.property_type(::Type{ ProductFind200ResponseResultProductInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductFind200ResponseResultProductInner[name]))}

function check_required(o::ProductFind200ResponseResultProductInner)
    true
end

function OpenAPI.validate_property(::Type{ ProductFind200ResponseResultProductInner }, name::Symbol, val)




end
