# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderReturnAdd

    OrderReturnAdd(;
        order_id=nothing,
        store_id=nothing,
        return_status_id=nothing,
        return_action_id=nothing,
        return_reason_id=nothing,
        return_reason=nothing,
        item_restock=false,
        staff_note=nothing,
        comment=nothing,
        send_notifications=false,
        reject_reason=nothing,
        order_products=nothing,
    )

    - order_id::String : Defines the order id
    - store_id::String : Store Id
    - return_status_id::String : Defines return request status
    - return_action_id::String : Defines return request action
    - return_reason_id::String : Defines return request reason
    - return_reason::String : Defines return request reason
    - item_restock::Bool : Boolean, whether or not to add the line items back to the store inventory.
    - staff_note::String : Specifies staff note
    - comment::String : Specifies return comment
    - send_notifications::Bool : Send notifications to customer after order was created
    - reject_reason::String : Defines return reject reason
    - order_products::Vector{OrderReturnAddOrderProductsInner}
"""
Base.@kwdef mutable struct OrderReturnAdd <: OpenAPI.APIModel
    order_id::Union{Nothing, String} = nothing
    store_id::Union{Nothing, String} = nothing
    return_status_id::Union{Nothing, String} = nothing
    return_action_id::Union{Nothing, String} = nothing
    return_reason_id::Union{Nothing, String} = nothing
    return_reason::Union{Nothing, String} = nothing
    item_restock::Union{Nothing, Bool} = false
    staff_note::Union{Nothing, String} = nothing
    comment::Union{Nothing, String} = nothing
    send_notifications::Union{Nothing, Bool} = false
    reject_reason::Union{Nothing, String} = nothing
    order_products::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OrderReturnAddOrderProductsInner} }

    function OrderReturnAdd(order_id, store_id, return_status_id, return_action_id, return_reason_id, return_reason, item_restock, staff_note, comment, send_notifications, reject_reason, order_products, )
        OpenAPI.validate_property(OrderReturnAdd, Symbol("order_id"), order_id)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("store_id"), store_id)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("return_status_id"), return_status_id)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("return_action_id"), return_action_id)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("return_reason_id"), return_reason_id)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("return_reason"), return_reason)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("item_restock"), item_restock)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("staff_note"), staff_note)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("comment"), comment)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("send_notifications"), send_notifications)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("reject_reason"), reject_reason)
        OpenAPI.validate_property(OrderReturnAdd, Symbol("order_products"), order_products)
        return new(order_id, store_id, return_status_id, return_action_id, return_reason_id, return_reason, item_restock, staff_note, comment, send_notifications, reject_reason, order_products, )
    end
end # type OrderReturnAdd

const _property_types_OrderReturnAdd = Dict{Symbol,String}(Symbol("order_id")=>"String", Symbol("store_id")=>"String", Symbol("return_status_id")=>"String", Symbol("return_action_id")=>"String", Symbol("return_reason_id")=>"String", Symbol("return_reason")=>"String", Symbol("item_restock")=>"Bool", Symbol("staff_note")=>"String", Symbol("comment")=>"String", Symbol("send_notifications")=>"Bool", Symbol("reject_reason")=>"String", Symbol("order_products")=>"Vector{OrderReturnAddOrderProductsInner}", )
OpenAPI.property_type(::Type{ OrderReturnAdd }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderReturnAdd[name]))}

function check_required(o::OrderReturnAdd)
    o.return_status_id === nothing && (return false)
    o.return_action_id === nothing && (return false)
    o.return_reason_id === nothing && (return false)
    o.order_products === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OrderReturnAdd }, name::Symbol, val)












end
