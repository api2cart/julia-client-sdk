# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Basket_Item

    BasketItem(;
        id=nothing,
        parent_id=nothing,
        product_id=nothing,
        variant_id=nothing,
        sku=nothing,
        name=nothing,
        price=nothing,
        tax=nothing,
        quantity=nothing,
        weight_unit=nothing,
        weight=nothing,
        options=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - parent_id::String
    - product_id::String
    - variant_id::String
    - sku::String
    - name::String
    - price::Float64
    - tax::Float64
    - quantity::Float64
    - weight_unit::String
    - weight::Float64
    - options::Vector{BasketItemOption}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct BasketItem <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    parent_id::Union{Nothing, String} = nothing
    product_id::Union{Nothing, String} = nothing
    variant_id::Union{Nothing, String} = nothing
    sku::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    price::Union{Nothing, Float64} = nothing
    tax::Union{Nothing, Float64} = nothing
    quantity::Union{Nothing, Float64} = nothing
    weight_unit::Union{Nothing, String} = nothing
    weight::Union{Nothing, Float64} = nothing
    options::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{BasketItemOption} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function BasketItem(id, parent_id, product_id, variant_id, sku, name, price, tax, quantity, weight_unit, weight, options, additional_fields, custom_fields, )
        OpenAPI.validate_property(BasketItem, Symbol("id"), id)
        OpenAPI.validate_property(BasketItem, Symbol("parent_id"), parent_id)
        OpenAPI.validate_property(BasketItem, Symbol("product_id"), product_id)
        OpenAPI.validate_property(BasketItem, Symbol("variant_id"), variant_id)
        OpenAPI.validate_property(BasketItem, Symbol("sku"), sku)
        OpenAPI.validate_property(BasketItem, Symbol("name"), name)
        OpenAPI.validate_property(BasketItem, Symbol("price"), price)
        OpenAPI.validate_property(BasketItem, Symbol("tax"), tax)
        OpenAPI.validate_property(BasketItem, Symbol("quantity"), quantity)
        OpenAPI.validate_property(BasketItem, Symbol("weight_unit"), weight_unit)
        OpenAPI.validate_property(BasketItem, Symbol("weight"), weight)
        OpenAPI.validate_property(BasketItem, Symbol("options"), options)
        OpenAPI.validate_property(BasketItem, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(BasketItem, Symbol("custom_fields"), custom_fields)
        return new(id, parent_id, product_id, variant_id, sku, name, price, tax, quantity, weight_unit, weight, options, additional_fields, custom_fields, )
    end
end # type BasketItem

const _property_types_BasketItem = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("parent_id")=>"String", Symbol("product_id")=>"String", Symbol("variant_id")=>"String", Symbol("sku")=>"String", Symbol("name")=>"String", Symbol("price")=>"Float64", Symbol("tax")=>"Float64", Symbol("quantity")=>"Float64", Symbol("weight_unit")=>"String", Symbol("weight")=>"Float64", Symbol("options")=>"Vector{BasketItemOption}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ BasketItem }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_BasketItem[name]))}

function check_required(o::BasketItem)
    true
end

function OpenAPI.validate_property(::Type{ BasketItem }, name::Symbol, val)














end
