# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Image

    Image(;
        id=nothing,
        http_path=nothing,
        file_name=nothing,
        var"mime-type"=nothing,
        size=nothing,
        create_at=nothing,
        modified_at=nothing,
        alt=nothing,
        avail=nothing,
        sort_order=nothing,
        type=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - http_path::String
    - file_name::String
    - var"mime-type"::String
    - size::Int64
    - create_at::A2CDateTime
    - modified_at::A2CDateTime
    - alt::String
    - avail::Bool
    - sort_order::Int64
    - type::String
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct Image <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    http_path::Union{Nothing, String} = nothing
    file_name::Union{Nothing, String} = nothing
    var"mime-type"::Union{Nothing, String} = nothing
    size::Union{Nothing, Int64} = nothing
    create_at = nothing # spec type: Union{ Nothing, A2CDateTime }
    modified_at = nothing # spec type: Union{ Nothing, A2CDateTime }
    alt::Union{Nothing, String} = nothing
    avail::Union{Nothing, Bool} = nothing
    sort_order::Union{Nothing, Int64} = nothing
    type::Union{Nothing, String} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function Image(id, http_path, file_name, var"mime-type", size, create_at, modified_at, alt, avail, sort_order, type, additional_fields, custom_fields, )
        OpenAPI.validate_property(Image, Symbol("id"), id)
        OpenAPI.validate_property(Image, Symbol("http_path"), http_path)
        OpenAPI.validate_property(Image, Symbol("file_name"), file_name)
        OpenAPI.validate_property(Image, Symbol("mime-type"), var"mime-type")
        OpenAPI.validate_property(Image, Symbol("size"), size)
        OpenAPI.validate_property(Image, Symbol("create_at"), create_at)
        OpenAPI.validate_property(Image, Symbol("modified_at"), modified_at)
        OpenAPI.validate_property(Image, Symbol("alt"), alt)
        OpenAPI.validate_property(Image, Symbol("avail"), avail)
        OpenAPI.validate_property(Image, Symbol("sort_order"), sort_order)
        OpenAPI.validate_property(Image, Symbol("type"), type)
        OpenAPI.validate_property(Image, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(Image, Symbol("custom_fields"), custom_fields)
        return new(id, http_path, file_name, var"mime-type", size, create_at, modified_at, alt, avail, sort_order, type, additional_fields, custom_fields, )
    end
end # type Image

const _property_types_Image = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("http_path")=>"String", Symbol("file_name")=>"String", Symbol("mime-type")=>"String", Symbol("size")=>"Int64", Symbol("create_at")=>"A2CDateTime", Symbol("modified_at")=>"A2CDateTime", Symbol("alt")=>"String", Symbol("avail")=>"Bool", Symbol("sort_order")=>"Int64", Symbol("type")=>"String", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ Image }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Image[name]))}

function check_required(o::Image)
    true
end

function OpenAPI.validate_property(::Type{ Image }, name::Symbol, val)













end
