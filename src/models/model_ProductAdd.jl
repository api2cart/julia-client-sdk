# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductAdd

    ProductAdd(;
        name=nothing,
        model=nothing,
        sku=nothing,
        description=nothing,
        price=nothing,
        old_price=nothing,
        special_price=nothing,
        cost_price=nothing,
        fixed_cost_shipping_price=nothing,
        sprice_create=nothing,
        sprice_modified=nothing,
        sprice_expire=nothing,
        tier_prices=nothing,
        group_prices=nothing,
        available_for_view=true,
        available_for_sale=true,
        weight=0,
        width=nothing,
        height=nothing,
        length=nothing,
        weight_unit=nothing,
        dimensions_unit=nothing,
        short_description=nothing,
        warehouse_id=nothing,
        backorder_status=nothing,
        quantity=0,
        downloadable=false,
        wholesale_price=nothing,
        created_at=nothing,
        manufacturer=nothing,
        manufacturer_id=nothing,
        categories_ids=nothing,
        related_products_ids=nothing,
        up_sell_products_ids=nothing,
        cross_sell_products_ids=nothing,
        tax_class_id=nothing,
        type="simple",
        meta_title=nothing,
        meta_keywords=nothing,
        meta_description=nothing,
        url=nothing,
        lang_id=nothing,
        stores_ids=nothing,
        category_id=nothing,
        viewed_count=0,
        ordered_count=0,
        attribute_set_name="Default",
        attribute_name=nothing,
        shipping_template_id=0,
        production_partner_ids=nothing,
        condition=nothing,
        listing_duration=nothing,
        listing_type="FixedPrice",
        payment_methods=nothing,
        return_accepted=nothing,
        shipping_details=nothing,
        paypal_email=nothing,
        seller_profiles=nothing,
        package_details=nothing,
        best_offer=nothing,
        sales_tax=nothing,
        barcode=nothing,
        upc=nothing,
        ean=nothing,
        isbn=nothing,
        specifics=nothing,
        image_url=nothing,
        image_name=nothing,
        additional_image_urls=nothing,
        reserve_price=nothing,
        buyitnow_price=nothing,
        condition_description=nothing,
        auction_confidentiality_level=nothing,
        logistic_info=nothing,
        avail_from=nothing,
        tags=nothing,
        clear_cache=true,
        asin=nothing,
        gtin=nothing,
        mpn=nothing,
        taxable=true,
        visible=nothing,
        status=nothing,
        seo_url=nothing,
        product_class=nothing,
        product_type=nothing,
        marketplace_item_properties=nothing,
        manage_stock=nothing,
        harmonized_system_code=nothing,
        country_of_origin=nothing,
        files=nothing,
        search_keywords=nothing,
        store_id=nothing,
        brand_name=nothing,
        is_virtual=false,
        is_free_shipping=nothing,
        in_stock=nothing,
        delivery_code=nothing,
        product_reference=nothing,
        delivery_type=nothing,
        delivery_time=nothing,
        size_chart=nothing,
        certifications=nothing,
        delivery_option_ids=nothing,
        manufacturer_info=nothing,
        when_made="made_to_order",
        is_supply=true,
        materials=nothing,
        auto_renew=false,
        allow_display_condition=nothing,
        min_order_quantity=nothing,
        max_order_quantity=nothing,
    )

    - name::String : Defines product&#39;s name that has to be added
    - model::String : Defines product&#39;s model that has to be added
    - sku::String : Defines product&#39;s sku that has to be added
    - description::String : Defines product&#39;s description that has to be added
    - price::Float64 : Defines product&#39;s price that has to be added
    - old_price::Float64 : Defines product&#39;s old price
    - special_price::Float64 : Defines product&#39;s model that has to be added
    - cost_price::Float64 : Defines new product&#39;s cost price
    - fixed_cost_shipping_price::Float64 : Specifies product&#39;s fixed cost shipping price
    - sprice_create::String : Defines the date of special price creation
    - sprice_modified::String : Defines the date of special price modification
    - sprice_expire::String : Defines the term of special price offer duration
    - tier_prices::Vector{ProductAddTierPricesInner} : Defines product&#39;s tier prices
    - group_prices::Vector{ProductAddGroupPricesInner} : Defines product&#39;s group prices
    - available_for_view::Bool : Specifies the set of visible/invisible products for users
    - available_for_sale::Bool : Specifies the set of visible/invisible products for sale
    - weight::Float64 : Weight
    - width::Float64 : Defines product&#39;s width
    - height::Float64 : Defines product&#39;s height
    - length::Float64 : Defines product&#39;s length
    - weight_unit::String : Weight Unit
    - dimensions_unit::String : Weight Unit
    - short_description::String : Defines short description
    - warehouse_id::String : This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
    - backorder_status::String : Set backorder status
    - quantity::Float64 : Defines product&#39;s quantity that has to be added
    - downloadable::Bool : Defines whether the product is downloadable
    - wholesale_price::Float64 : Defines product&#39;s sale price
    - created_at::String : Defines the date of entity creation
    - manufacturer::String : Defines product&#39;s manufacturer
    - manufacturer_id::String : Defines product&#39;s manufacturer by manufacturer_id
    - categories_ids::String : Defines product add that is specified by comma-separated categories id
    - related_products_ids::String : Defines product&#39;s related products ids that has to be added
    - up_sell_products_ids::String : Defines product&#39;s up-sell products ids that has to be added
    - cross_sell_products_ids::String : Defines product&#39;s cross-sell products ids that has to be added
    - tax_class_id::String : Defines tax classes where entity has to be added
    - type::String : Defines product&#39;s type
    - meta_title::String : Defines unique meta title for each entity
    - meta_keywords::String : Defines unique meta keywords for each entity
    - meta_description::String : Defines unique meta description of a entity
    - url::String : Defines unique product&#39;s URL
    - lang_id::String : Language id
    - stores_ids::String : Assign product to the stores that is specified by comma-separated stores&#39; id
    - category_id::String : Defines product add that is specified by category id
    - viewed_count::Int64 : Specifies the number of product&#39;s reviews
    - ordered_count::Int64 : Defines how many times the product was ordered
    - attribute_set_name::String : Defines product’s attribute set name in Magento
    - attribute_name::String : Defines product’s attribute name separated with a comma in Magento
    - shipping_template_id::Int64 : The numeric ID of the shipping template associated with the products in Etsy. You can find possible values in the \&quot;cart.info\&quot; API method response, in the field shipping_zones[]-&gt;id.
    - production_partner_ids::String : Defines product&#39;s production partner ids that has to be added
    - condition::String : The human-readable label for the condition (e.g., \&quot;New\&quot;).
    - listing_duration::String : Describes the number of days the seller wants the listing to be active. Look at cart.info method response for allowed values.
    - listing_type::String : Indicates the selling format of the marketplace listing.
    - payment_methods::Vector{String} : Identifies the payment method (such as PayPal) that the seller will accept when the buyer pays for the item. Look at cart.info method response for allowed values.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;payment_methods[0] &#x3D; string&lt;/br&gt;payment_methods[1] &#x3D; string&lt;/br&gt;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;
    - return_accepted::Bool : Indicates whether the seller allows the buyer to return the item.
    - shipping_details::Vector{ProductAddShippingDetailsInner} : The shipping details, including flat and calculated shipping costs and shipping insurance costs. Look at cart.info method response for allowed values.&lt;hr&gt;&lt;div style&#x3D;\&quot;font-style:normal\&quot;&gt;Param structure:&lt;div style&#x3D;\&quot;margin-left: 2%;\&quot;&gt;&lt;code style&#x3D;\&quot;padding:0; background-color:#ffffff;font-size:85%;font-family:monospace;\&quot;&gt;shipping_details[0][&lt;b&gt;shipping_type&lt;/b&gt;] &#x3D; string &lt;/br&gt;shipping_details[0][&lt;b&gt;shipping_service&lt;/b&gt;] &#x3D; string&lt;/br&gt;shipping_details[0][&lt;b&gt;shipping_cost&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;shipping_details[1][&lt;b&gt;shipping_type&lt;/b&gt;] &#x3D; string &lt;/br&gt;shipping_details[1][&lt;b&gt;shipping_service&lt;/b&gt;] &#x3D; string&lt;/br&gt;shipping_details[1][&lt;b&gt;shipping_cost&lt;/b&gt;] &#x3D; decimal&lt;/br&gt;&lt;/code&gt;&lt;/div&gt;&lt;/div&gt;
    - paypal_email::String : Valid PayPal email address for the PayPal account that the seller will use if they offer PayPal as a payment method for the listing.
    - seller_profiles::ProductAddSellerProfiles
    - package_details::ProductAddPackageDetails
    - best_offer::ProductAddBestOffer
    - sales_tax::ProductAddSalesTax
    - barcode::String : A barcode is a unique code composed of numbers used as a product identifier.
    - upc::String : Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.
    - ean::String : European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.
    - isbn::String : International Standard Book Number. An ISBN is a unique identifier for books.
    - specifics::Vector{ProductAddSpecificsInner} : An array of Item Specific Name/Value pairs used by the seller to provide descriptive details of an item in a structured manner.         The list of possible specifications can be obtained using the category.info method (additional_fields-&gt;product_specifics).         &lt;b&gt;The structure of the parameter is different for specific platforms.&lt;/b&gt;
    - image_url::String : Image Url
    - image_name::String : Defines image&#39;s name
    - additional_image_urls::Vector{String} : Image Url
    - reserve_price::Float64 : Defines reserve price value
    - buyitnow_price::Float64 : Defines buy it now value
    - condition_description::String : Detailed description of the product condition.
    - auction_confidentiality_level::String : This allows buyers to remain anonymous when the bid or buy an item.
    - logistic_info::Vector{ProductAddLogisticInfoInner} : Defines product&#39;s logistic channel settings
    - avail_from::String : Allows to schedule a time in the future that the item becomes available. The value should be greater than the current date and time.
    - tags::String : Product tags
    - clear_cache::Bool : Is cache clear required
    - asin::String : Amazon Standard Identification Number.
    - gtin::String : Global Trade Item Number. An GTIN is an identifier for trade items.
    - mpn::String : Manufacturer Part Number. A MPN is an identifier of a particular part design or material used.
    - taxable::Bool : Specifies whether a tax is charged
    - visible::String : Set visibility status
    - status::String : Defines product&#39;s status
    - seo_url::String : Defines unique URL for SEO
    - product_class::String : A categorization for the product
    - product_type::String : A categorization for the product
    - marketplace_item_properties::String : String containing the JSON representation of the supplied data
    - manage_stock::Bool : Defines inventory tracking for product
    - harmonized_system_code::String : Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes
    - country_of_origin::String : The country where the inventory item was made
    - files::Vector{ProductAddFilesInner} : File Url
    - search_keywords::String : Defines unique search keywords
    - store_id::String : Store Id
    - brand_name::String : Defines product brand name
    - is_virtual::Bool : Defines whether the product is virtual
    - is_free_shipping::Bool : Specifies product&#39;s free shipping flag that has to be added
    - in_stock::Bool : Set stock status
    - delivery_code::String : The delivery promise that applies to offer
    - product_reference::String : Groups all variations, that you want to combine into one product.
    - delivery_type::String : Defines the type of the delivery.
    - delivery_time::Int64 : Defines delivery time in days.
    - size_chart::ProductAddSizeChart
    - certifications::Vector{ProductAddCertificationsInner} : An array of product certifications. The list of possible certifications can be obtained using the \&quot;&lt;i&gt;category.info&lt;/i&gt;\&quot; method (&lt;i&gt;additional_fields-&gt;rules-&gt;product_certifications&lt;/i&gt;).
    - delivery_option_ids::String : Defines delivery options for product by ids.
    - manufacturer_info::ProductAddManufacturerInfo
    - when_made::String : An enumerated string for the era in which the maker made the product.
    - is_supply::Bool : If true, it indicates the product as a supply, otherwise it indicates that it is a finished product.
    - materials::Vector{String} : A list of material strings for materials used in the product.
    - auto_renew::Bool : When true, automatically renews a listing upon its expiration.
    - allow_display_condition::Bool : Flag used to determine whether the product condition is shown to the customer on the product page.
    - min_order_quantity::Float64 : The minimum quantity an order must contain, to be eligible to purchase this product.
    - max_order_quantity::Float64 : The maximum quantity an order can contain when purchasing the product.
"""
Base.@kwdef mutable struct ProductAdd <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    model::Union{Nothing, String} = nothing
    sku::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    price::Union{Nothing, Float64} = nothing
    old_price::Union{Nothing, Float64} = nothing
    special_price::Union{Nothing, Float64} = nothing
    cost_price::Union{Nothing, Float64} = nothing
    fixed_cost_shipping_price::Union{Nothing, Float64} = nothing
    sprice_create::Union{Nothing, String} = nothing
    sprice_modified::Union{Nothing, String} = nothing
    sprice_expire::Union{Nothing, String} = nothing
    tier_prices::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddTierPricesInner} }
    group_prices::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddGroupPricesInner} }
    available_for_view::Union{Nothing, Bool} = true
    available_for_sale::Union{Nothing, Bool} = true
    weight::Union{Nothing, Float64} = 0
    width::Union{Nothing, Float64} = nothing
    height::Union{Nothing, Float64} = nothing
    length::Union{Nothing, Float64} = nothing
    weight_unit::Union{Nothing, String} = nothing
    dimensions_unit::Union{Nothing, String} = nothing
    short_description::Union{Nothing, String} = nothing
    warehouse_id::Union{Nothing, String} = nothing
    backorder_status::Union{Nothing, String} = nothing
    quantity::Union{Nothing, Float64} = 0
    downloadable::Union{Nothing, Bool} = false
    wholesale_price::Union{Nothing, Float64} = nothing
    created_at::Union{Nothing, String} = nothing
    manufacturer::Union{Nothing, String} = nothing
    manufacturer_id::Union{Nothing, String} = nothing
    categories_ids::Union{Nothing, String} = nothing
    related_products_ids::Union{Nothing, String} = nothing
    up_sell_products_ids::Union{Nothing, String} = nothing
    cross_sell_products_ids::Union{Nothing, String} = nothing
    tax_class_id::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = "simple"
    meta_title::Union{Nothing, String} = nothing
    meta_keywords::Union{Nothing, String} = nothing
    meta_description::Union{Nothing, String} = nothing
    url::Union{Nothing, String} = nothing
    lang_id::Union{Nothing, String} = nothing
    stores_ids::Union{Nothing, String} = nothing
    category_id::Union{Nothing, String} = nothing
    viewed_count::Union{Nothing, Int64} = 0
    ordered_count::Union{Nothing, Int64} = 0
    attribute_set_name::Union{Nothing, String} = "Default"
    attribute_name::Union{Nothing, String} = nothing
    shipping_template_id::Union{Nothing, Int64} = 0
    production_partner_ids::Union{Nothing, String} = nothing
    condition::Union{Nothing, String} = nothing
    listing_duration::Union{Nothing, String} = nothing
    listing_type::Union{Nothing, String} = "FixedPrice"
    payment_methods::Union{Nothing, Vector{String}} = nothing
    return_accepted::Union{Nothing, Bool} = nothing
    shipping_details::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddShippingDetailsInner} }
    paypal_email::Union{Nothing, String} = nothing
    seller_profiles = nothing # spec type: Union{ Nothing, ProductAddSellerProfiles }
    package_details = nothing # spec type: Union{ Nothing, ProductAddPackageDetails }
    best_offer = nothing # spec type: Union{ Nothing, ProductAddBestOffer }
    sales_tax = nothing # spec type: Union{ Nothing, ProductAddSalesTax }
    barcode::Union{Nothing, String} = nothing
    upc::Union{Nothing, String} = nothing
    ean::Union{Nothing, String} = nothing
    isbn::Union{Nothing, String} = nothing
    specifics::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddSpecificsInner} }
    image_url::Union{Nothing, String} = nothing
    image_name::Union{Nothing, String} = nothing
    additional_image_urls::Union{Nothing, Vector{String}} = nothing
    reserve_price::Union{Nothing, Float64} = nothing
    buyitnow_price::Union{Nothing, Float64} = nothing
    condition_description::Union{Nothing, String} = nothing
    auction_confidentiality_level::Union{Nothing, String} = nothing
    logistic_info::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddLogisticInfoInner} }
    avail_from::Union{Nothing, String} = nothing
    tags::Union{Nothing, String} = nothing
    clear_cache::Union{Nothing, Bool} = true
    asin::Union{Nothing, String} = nothing
    gtin::Union{Nothing, String} = nothing
    mpn::Union{Nothing, String} = nothing
    taxable::Union{Nothing, Bool} = true
    visible::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    seo_url::Union{Nothing, String} = nothing
    product_class::Union{Nothing, String} = nothing
    product_type::Union{Nothing, String} = nothing
    marketplace_item_properties::Union{Nothing, String} = nothing
    manage_stock::Union{Nothing, Bool} = nothing
    harmonized_system_code::Union{Nothing, String} = nothing
    country_of_origin::Union{Nothing, String} = nothing
    files::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddFilesInner} }
    search_keywords::Union{Nothing, String} = nothing
    store_id::Union{Nothing, String} = nothing
    brand_name::Union{Nothing, String} = nothing
    is_virtual::Union{Nothing, Bool} = false
    is_free_shipping::Union{Nothing, Bool} = nothing
    in_stock::Union{Nothing, Bool} = nothing
    delivery_code::Union{Nothing, String} = nothing
    product_reference::Union{Nothing, String} = nothing
    delivery_type::Union{Nothing, String} = nothing
    delivery_time::Union{Nothing, Int64} = nothing
    size_chart = nothing # spec type: Union{ Nothing, ProductAddSizeChart }
    certifications::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddCertificationsInner} }
    delivery_option_ids::Union{Nothing, String} = nothing
    manufacturer_info = nothing # spec type: Union{ Nothing, ProductAddManufacturerInfo }
    when_made::Union{Nothing, String} = "made_to_order"
    is_supply::Union{Nothing, Bool} = true
    materials::Union{Nothing, Vector{String}} = nothing
    auto_renew::Union{Nothing, Bool} = false
    allow_display_condition::Union{Nothing, Bool} = nothing
    min_order_quantity::Union{Nothing, Float64} = nothing
    max_order_quantity::Union{Nothing, Float64} = nothing

    function ProductAdd(name, model, sku, description, price, old_price, special_price, cost_price, fixed_cost_shipping_price, sprice_create, sprice_modified, sprice_expire, tier_prices, group_prices, available_for_view, available_for_sale, weight, width, height, length, weight_unit, dimensions_unit, short_description, warehouse_id, backorder_status, quantity, downloadable, wholesale_price, created_at, manufacturer, manufacturer_id, categories_ids, related_products_ids, up_sell_products_ids, cross_sell_products_ids, tax_class_id, type, meta_title, meta_keywords, meta_description, url, lang_id, stores_ids, category_id, viewed_count, ordered_count, attribute_set_name, attribute_name, shipping_template_id, production_partner_ids, condition, listing_duration, listing_type, payment_methods, return_accepted, shipping_details, paypal_email, seller_profiles, package_details, best_offer, sales_tax, barcode, upc, ean, isbn, specifics, image_url, image_name, additional_image_urls, reserve_price, buyitnow_price, condition_description, auction_confidentiality_level, logistic_info, avail_from, tags, clear_cache, asin, gtin, mpn, taxable, visible, status, seo_url, product_class, product_type, marketplace_item_properties, manage_stock, harmonized_system_code, country_of_origin, files, search_keywords, store_id, brand_name, is_virtual, is_free_shipping, in_stock, delivery_code, product_reference, delivery_type, delivery_time, size_chart, certifications, delivery_option_ids, manufacturer_info, when_made, is_supply, materials, auto_renew, allow_display_condition, min_order_quantity, max_order_quantity, )
        OpenAPI.validate_property(ProductAdd, Symbol("name"), name)
        OpenAPI.validate_property(ProductAdd, Symbol("model"), model)
        OpenAPI.validate_property(ProductAdd, Symbol("sku"), sku)
        OpenAPI.validate_property(ProductAdd, Symbol("description"), description)
        OpenAPI.validate_property(ProductAdd, Symbol("price"), price)
        OpenAPI.validate_property(ProductAdd, Symbol("old_price"), old_price)
        OpenAPI.validate_property(ProductAdd, Symbol("special_price"), special_price)
        OpenAPI.validate_property(ProductAdd, Symbol("cost_price"), cost_price)
        OpenAPI.validate_property(ProductAdd, Symbol("fixed_cost_shipping_price"), fixed_cost_shipping_price)
        OpenAPI.validate_property(ProductAdd, Symbol("sprice_create"), sprice_create)
        OpenAPI.validate_property(ProductAdd, Symbol("sprice_modified"), sprice_modified)
        OpenAPI.validate_property(ProductAdd, Symbol("sprice_expire"), sprice_expire)
        OpenAPI.validate_property(ProductAdd, Symbol("tier_prices"), tier_prices)
        OpenAPI.validate_property(ProductAdd, Symbol("group_prices"), group_prices)
        OpenAPI.validate_property(ProductAdd, Symbol("available_for_view"), available_for_view)
        OpenAPI.validate_property(ProductAdd, Symbol("available_for_sale"), available_for_sale)
        OpenAPI.validate_property(ProductAdd, Symbol("weight"), weight)
        OpenAPI.validate_property(ProductAdd, Symbol("width"), width)
        OpenAPI.validate_property(ProductAdd, Symbol("height"), height)
        OpenAPI.validate_property(ProductAdd, Symbol("length"), length)
        OpenAPI.validate_property(ProductAdd, Symbol("weight_unit"), weight_unit)
        OpenAPI.validate_property(ProductAdd, Symbol("dimensions_unit"), dimensions_unit)
        OpenAPI.validate_property(ProductAdd, Symbol("short_description"), short_description)
        OpenAPI.validate_property(ProductAdd, Symbol("warehouse_id"), warehouse_id)
        OpenAPI.validate_property(ProductAdd, Symbol("backorder_status"), backorder_status)
        OpenAPI.validate_property(ProductAdd, Symbol("quantity"), quantity)
        OpenAPI.validate_property(ProductAdd, Symbol("downloadable"), downloadable)
        OpenAPI.validate_property(ProductAdd, Symbol("wholesale_price"), wholesale_price)
        OpenAPI.validate_property(ProductAdd, Symbol("created_at"), created_at)
        OpenAPI.validate_property(ProductAdd, Symbol("manufacturer"), manufacturer)
        OpenAPI.validate_property(ProductAdd, Symbol("manufacturer_id"), manufacturer_id)
        OpenAPI.validate_property(ProductAdd, Symbol("categories_ids"), categories_ids)
        OpenAPI.validate_property(ProductAdd, Symbol("related_products_ids"), related_products_ids)
        OpenAPI.validate_property(ProductAdd, Symbol("up_sell_products_ids"), up_sell_products_ids)
        OpenAPI.validate_property(ProductAdd, Symbol("cross_sell_products_ids"), cross_sell_products_ids)
        OpenAPI.validate_property(ProductAdd, Symbol("tax_class_id"), tax_class_id)
        OpenAPI.validate_property(ProductAdd, Symbol("type"), type)
        OpenAPI.validate_property(ProductAdd, Symbol("meta_title"), meta_title)
        OpenAPI.validate_property(ProductAdd, Symbol("meta_keywords"), meta_keywords)
        OpenAPI.validate_property(ProductAdd, Symbol("meta_description"), meta_description)
        OpenAPI.validate_property(ProductAdd, Symbol("url"), url)
        OpenAPI.validate_property(ProductAdd, Symbol("lang_id"), lang_id)
        OpenAPI.validate_property(ProductAdd, Symbol("stores_ids"), stores_ids)
        OpenAPI.validate_property(ProductAdd, Symbol("category_id"), category_id)
        OpenAPI.validate_property(ProductAdd, Symbol("viewed_count"), viewed_count)
        OpenAPI.validate_property(ProductAdd, Symbol("ordered_count"), ordered_count)
        OpenAPI.validate_property(ProductAdd, Symbol("attribute_set_name"), attribute_set_name)
        OpenAPI.validate_property(ProductAdd, Symbol("attribute_name"), attribute_name)
        OpenAPI.validate_property(ProductAdd, Symbol("shipping_template_id"), shipping_template_id)
        OpenAPI.validate_property(ProductAdd, Symbol("production_partner_ids"), production_partner_ids)
        OpenAPI.validate_property(ProductAdd, Symbol("condition"), condition)
        OpenAPI.validate_property(ProductAdd, Symbol("listing_duration"), listing_duration)
        OpenAPI.validate_property(ProductAdd, Symbol("listing_type"), listing_type)
        OpenAPI.validate_property(ProductAdd, Symbol("payment_methods"), payment_methods)
        OpenAPI.validate_property(ProductAdd, Symbol("return_accepted"), return_accepted)
        OpenAPI.validate_property(ProductAdd, Symbol("shipping_details"), shipping_details)
        OpenAPI.validate_property(ProductAdd, Symbol("paypal_email"), paypal_email)
        OpenAPI.validate_property(ProductAdd, Symbol("seller_profiles"), seller_profiles)
        OpenAPI.validate_property(ProductAdd, Symbol("package_details"), package_details)
        OpenAPI.validate_property(ProductAdd, Symbol("best_offer"), best_offer)
        OpenAPI.validate_property(ProductAdd, Symbol("sales_tax"), sales_tax)
        OpenAPI.validate_property(ProductAdd, Symbol("barcode"), barcode)
        OpenAPI.validate_property(ProductAdd, Symbol("upc"), upc)
        OpenAPI.validate_property(ProductAdd, Symbol("ean"), ean)
        OpenAPI.validate_property(ProductAdd, Symbol("isbn"), isbn)
        OpenAPI.validate_property(ProductAdd, Symbol("specifics"), specifics)
        OpenAPI.validate_property(ProductAdd, Symbol("image_url"), image_url)
        OpenAPI.validate_property(ProductAdd, Symbol("image_name"), image_name)
        OpenAPI.validate_property(ProductAdd, Symbol("additional_image_urls"), additional_image_urls)
        OpenAPI.validate_property(ProductAdd, Symbol("reserve_price"), reserve_price)
        OpenAPI.validate_property(ProductAdd, Symbol("buyitnow_price"), buyitnow_price)
        OpenAPI.validate_property(ProductAdd, Symbol("condition_description"), condition_description)
        OpenAPI.validate_property(ProductAdd, Symbol("auction_confidentiality_level"), auction_confidentiality_level)
        OpenAPI.validate_property(ProductAdd, Symbol("logistic_info"), logistic_info)
        OpenAPI.validate_property(ProductAdd, Symbol("avail_from"), avail_from)
        OpenAPI.validate_property(ProductAdd, Symbol("tags"), tags)
        OpenAPI.validate_property(ProductAdd, Symbol("clear_cache"), clear_cache)
        OpenAPI.validate_property(ProductAdd, Symbol("asin"), asin)
        OpenAPI.validate_property(ProductAdd, Symbol("gtin"), gtin)
        OpenAPI.validate_property(ProductAdd, Symbol("mpn"), mpn)
        OpenAPI.validate_property(ProductAdd, Symbol("taxable"), taxable)
        OpenAPI.validate_property(ProductAdd, Symbol("visible"), visible)
        OpenAPI.validate_property(ProductAdd, Symbol("status"), status)
        OpenAPI.validate_property(ProductAdd, Symbol("seo_url"), seo_url)
        OpenAPI.validate_property(ProductAdd, Symbol("product_class"), product_class)
        OpenAPI.validate_property(ProductAdd, Symbol("product_type"), product_type)
        OpenAPI.validate_property(ProductAdd, Symbol("marketplace_item_properties"), marketplace_item_properties)
        OpenAPI.validate_property(ProductAdd, Symbol("manage_stock"), manage_stock)
        OpenAPI.validate_property(ProductAdd, Symbol("harmonized_system_code"), harmonized_system_code)
        OpenAPI.validate_property(ProductAdd, Symbol("country_of_origin"), country_of_origin)
        OpenAPI.validate_property(ProductAdd, Symbol("files"), files)
        OpenAPI.validate_property(ProductAdd, Symbol("search_keywords"), search_keywords)
        OpenAPI.validate_property(ProductAdd, Symbol("store_id"), store_id)
        OpenAPI.validate_property(ProductAdd, Symbol("brand_name"), brand_name)
        OpenAPI.validate_property(ProductAdd, Symbol("is_virtual"), is_virtual)
        OpenAPI.validate_property(ProductAdd, Symbol("is_free_shipping"), is_free_shipping)
        OpenAPI.validate_property(ProductAdd, Symbol("in_stock"), in_stock)
        OpenAPI.validate_property(ProductAdd, Symbol("delivery_code"), delivery_code)
        OpenAPI.validate_property(ProductAdd, Symbol("product_reference"), product_reference)
        OpenAPI.validate_property(ProductAdd, Symbol("delivery_type"), delivery_type)
        OpenAPI.validate_property(ProductAdd, Symbol("delivery_time"), delivery_time)
        OpenAPI.validate_property(ProductAdd, Symbol("size_chart"), size_chart)
        OpenAPI.validate_property(ProductAdd, Symbol("certifications"), certifications)
        OpenAPI.validate_property(ProductAdd, Symbol("delivery_option_ids"), delivery_option_ids)
        OpenAPI.validate_property(ProductAdd, Symbol("manufacturer_info"), manufacturer_info)
        OpenAPI.validate_property(ProductAdd, Symbol("when_made"), when_made)
        OpenAPI.validate_property(ProductAdd, Symbol("is_supply"), is_supply)
        OpenAPI.validate_property(ProductAdd, Symbol("materials"), materials)
        OpenAPI.validate_property(ProductAdd, Symbol("auto_renew"), auto_renew)
        OpenAPI.validate_property(ProductAdd, Symbol("allow_display_condition"), allow_display_condition)
        OpenAPI.validate_property(ProductAdd, Symbol("min_order_quantity"), min_order_quantity)
        OpenAPI.validate_property(ProductAdd, Symbol("max_order_quantity"), max_order_quantity)
        return new(name, model, sku, description, price, old_price, special_price, cost_price, fixed_cost_shipping_price, sprice_create, sprice_modified, sprice_expire, tier_prices, group_prices, available_for_view, available_for_sale, weight, width, height, length, weight_unit, dimensions_unit, short_description, warehouse_id, backorder_status, quantity, downloadable, wholesale_price, created_at, manufacturer, manufacturer_id, categories_ids, related_products_ids, up_sell_products_ids, cross_sell_products_ids, tax_class_id, type, meta_title, meta_keywords, meta_description, url, lang_id, stores_ids, category_id, viewed_count, ordered_count, attribute_set_name, attribute_name, shipping_template_id, production_partner_ids, condition, listing_duration, listing_type, payment_methods, return_accepted, shipping_details, paypal_email, seller_profiles, package_details, best_offer, sales_tax, barcode, upc, ean, isbn, specifics, image_url, image_name, additional_image_urls, reserve_price, buyitnow_price, condition_description, auction_confidentiality_level, logistic_info, avail_from, tags, clear_cache, asin, gtin, mpn, taxable, visible, status, seo_url, product_class, product_type, marketplace_item_properties, manage_stock, harmonized_system_code, country_of_origin, files, search_keywords, store_id, brand_name, is_virtual, is_free_shipping, in_stock, delivery_code, product_reference, delivery_type, delivery_time, size_chart, certifications, delivery_option_ids, manufacturer_info, when_made, is_supply, materials, auto_renew, allow_display_condition, min_order_quantity, max_order_quantity, )
    end
end # type ProductAdd

const _property_types_ProductAdd = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("model")=>"String", Symbol("sku")=>"String", Symbol("description")=>"String", Symbol("price")=>"Float64", Symbol("old_price")=>"Float64", Symbol("special_price")=>"Float64", Symbol("cost_price")=>"Float64", Symbol("fixed_cost_shipping_price")=>"Float64", Symbol("sprice_create")=>"String", Symbol("sprice_modified")=>"String", Symbol("sprice_expire")=>"String", Symbol("tier_prices")=>"Vector{ProductAddTierPricesInner}", Symbol("group_prices")=>"Vector{ProductAddGroupPricesInner}", Symbol("available_for_view")=>"Bool", Symbol("available_for_sale")=>"Bool", Symbol("weight")=>"Float64", Symbol("width")=>"Float64", Symbol("height")=>"Float64", Symbol("length")=>"Float64", Symbol("weight_unit")=>"String", Symbol("dimensions_unit")=>"String", Symbol("short_description")=>"String", Symbol("warehouse_id")=>"String", Symbol("backorder_status")=>"String", Symbol("quantity")=>"Float64", Symbol("downloadable")=>"Bool", Symbol("wholesale_price")=>"Float64", Symbol("created_at")=>"String", Symbol("manufacturer")=>"String", Symbol("manufacturer_id")=>"String", Symbol("categories_ids")=>"String", Symbol("related_products_ids")=>"String", Symbol("up_sell_products_ids")=>"String", Symbol("cross_sell_products_ids")=>"String", Symbol("tax_class_id")=>"String", Symbol("type")=>"String", Symbol("meta_title")=>"String", Symbol("meta_keywords")=>"String", Symbol("meta_description")=>"String", Symbol("url")=>"String", Symbol("lang_id")=>"String", Symbol("stores_ids")=>"String", Symbol("category_id")=>"String", Symbol("viewed_count")=>"Int64", Symbol("ordered_count")=>"Int64", Symbol("attribute_set_name")=>"String", Symbol("attribute_name")=>"String", Symbol("shipping_template_id")=>"Int64", Symbol("production_partner_ids")=>"String", Symbol("condition")=>"String", Symbol("listing_duration")=>"String", Symbol("listing_type")=>"String", Symbol("payment_methods")=>"Vector{String}", Symbol("return_accepted")=>"Bool", Symbol("shipping_details")=>"Vector{ProductAddShippingDetailsInner}", Symbol("paypal_email")=>"String", Symbol("seller_profiles")=>"ProductAddSellerProfiles", Symbol("package_details")=>"ProductAddPackageDetails", Symbol("best_offer")=>"ProductAddBestOffer", Symbol("sales_tax")=>"ProductAddSalesTax", Symbol("barcode")=>"String", Symbol("upc")=>"String", Symbol("ean")=>"String", Symbol("isbn")=>"String", Symbol("specifics")=>"Vector{ProductAddSpecificsInner}", Symbol("image_url")=>"String", Symbol("image_name")=>"String", Symbol("additional_image_urls")=>"Vector{String}", Symbol("reserve_price")=>"Float64", Symbol("buyitnow_price")=>"Float64", Symbol("condition_description")=>"String", Symbol("auction_confidentiality_level")=>"String", Symbol("logistic_info")=>"Vector{ProductAddLogisticInfoInner}", Symbol("avail_from")=>"String", Symbol("tags")=>"String", Symbol("clear_cache")=>"Bool", Symbol("asin")=>"String", Symbol("gtin")=>"String", Symbol("mpn")=>"String", Symbol("taxable")=>"Bool", Symbol("visible")=>"String", Symbol("status")=>"String", Symbol("seo_url")=>"String", Symbol("product_class")=>"String", Symbol("product_type")=>"String", Symbol("marketplace_item_properties")=>"String", Symbol("manage_stock")=>"Bool", Symbol("harmonized_system_code")=>"String", Symbol("country_of_origin")=>"String", Symbol("files")=>"Vector{ProductAddFilesInner}", Symbol("search_keywords")=>"String", Symbol("store_id")=>"String", Symbol("brand_name")=>"String", Symbol("is_virtual")=>"Bool", Symbol("is_free_shipping")=>"Bool", Symbol("in_stock")=>"Bool", Symbol("delivery_code")=>"String", Symbol("product_reference")=>"String", Symbol("delivery_type")=>"String", Symbol("delivery_time")=>"Int64", Symbol("size_chart")=>"ProductAddSizeChart", Symbol("certifications")=>"Vector{ProductAddCertificationsInner}", Symbol("delivery_option_ids")=>"String", Symbol("manufacturer_info")=>"ProductAddManufacturerInfo", Symbol("when_made")=>"String", Symbol("is_supply")=>"Bool", Symbol("materials")=>"Vector{String}", Symbol("auto_renew")=>"Bool", Symbol("allow_display_condition")=>"Bool", Symbol("min_order_quantity")=>"Float64", Symbol("max_order_quantity")=>"Float64", )
OpenAPI.property_type(::Type{ ProductAdd }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductAdd[name]))}

function check_required(o::ProductAdd)
    o.name === nothing && (return false)
    o.model === nothing && (return false)
    o.description === nothing && (return false)
    o.price === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ProductAdd }, name::Symbol, val)
















































































































end
