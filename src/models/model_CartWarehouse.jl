# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Cart_Warehouse

    CartWarehouse(;
        id=nothing,
        name=nothing,
        description=nothing,
        avail=nothing,
        address=nothing,
        carriers_ids=nothing,
        stores_ids=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - name::String
    - description::String
    - avail::Bool
    - address::CustomerAddress
    - carriers_ids::Vector{String}
    - stores_ids::Vector{String}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct CartWarehouse <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    avail::Union{Nothing, Bool} = nothing
    address = nothing # spec type: Union{ Nothing, CustomerAddress }
    carriers_ids::Union{Nothing, Vector{String}} = nothing
    stores_ids::Union{Nothing, Vector{String}} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function CartWarehouse(id, name, description, avail, address, carriers_ids, stores_ids, additional_fields, custom_fields, )
        OpenAPI.validate_property(CartWarehouse, Symbol("id"), id)
        OpenAPI.validate_property(CartWarehouse, Symbol("name"), name)
        OpenAPI.validate_property(CartWarehouse, Symbol("description"), description)
        OpenAPI.validate_property(CartWarehouse, Symbol("avail"), avail)
        OpenAPI.validate_property(CartWarehouse, Symbol("address"), address)
        OpenAPI.validate_property(CartWarehouse, Symbol("carriers_ids"), carriers_ids)
        OpenAPI.validate_property(CartWarehouse, Symbol("stores_ids"), stores_ids)
        OpenAPI.validate_property(CartWarehouse, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(CartWarehouse, Symbol("custom_fields"), custom_fields)
        return new(id, name, description, avail, address, carriers_ids, stores_ids, additional_fields, custom_fields, )
    end
end # type CartWarehouse

const _property_types_CartWarehouse = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("avail")=>"Bool", Symbol("address")=>"CustomerAddress", Symbol("carriers_ids")=>"Vector{String}", Symbol("stores_ids")=>"Vector{String}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ CartWarehouse }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CartWarehouse[name]))}

function check_required(o::CartWarehouse)
    true
end

function OpenAPI.validate_property(::Type{ CartWarehouse }, name::Symbol, val)









end
