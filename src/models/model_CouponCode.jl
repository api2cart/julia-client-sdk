# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Coupon_Code

    CouponCode(;
        id=nothing,
        code=nothing,
        used_times=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - code::String
    - used_times::Int64
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct CouponCode <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    code::Union{Nothing, String} = nothing
    used_times::Union{Nothing, Int64} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function CouponCode(id, code, used_times, additional_fields, custom_fields, )
        OpenAPI.validate_property(CouponCode, Symbol("id"), id)
        OpenAPI.validate_property(CouponCode, Symbol("code"), code)
        OpenAPI.validate_property(CouponCode, Symbol("used_times"), used_times)
        OpenAPI.validate_property(CouponCode, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(CouponCode, Symbol("custom_fields"), custom_fields)
        return new(id, code, used_times, additional_fields, custom_fields, )
    end
end # type CouponCode

const _property_types_CouponCode = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("code")=>"String", Symbol("used_times")=>"Int64", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ CouponCode }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CouponCode[name]))}

function check_required(o::CouponCode)
    true
end

function OpenAPI.validate_property(::Type{ CouponCode }, name::Symbol, val)





end
