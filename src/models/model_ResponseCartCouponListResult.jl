# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Response_Cart_Coupon_List_Result

    ResponseCartCouponListResult(;
        coupon_count=nothing,
        coupon=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - coupon_count::Int64
    - coupon::Vector{Coupon}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct ResponseCartCouponListResult <: OpenAPI.APIModel
    coupon_count::Union{Nothing, Int64} = nothing
    coupon::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Coupon} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function ResponseCartCouponListResult(coupon_count, coupon, additional_fields, custom_fields, )
        OpenAPI.validate_property(ResponseCartCouponListResult, Symbol("coupon_count"), coupon_count)
        OpenAPI.validate_property(ResponseCartCouponListResult, Symbol("coupon"), coupon)
        OpenAPI.validate_property(ResponseCartCouponListResult, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(ResponseCartCouponListResult, Symbol("custom_fields"), custom_fields)
        return new(coupon_count, coupon, additional_fields, custom_fields, )
    end
end # type ResponseCartCouponListResult

const _property_types_ResponseCartCouponListResult = Dict{Symbol,String}(Symbol("coupon_count")=>"Int64", Symbol("coupon")=>"Vector{Coupon}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ ResponseCartCouponListResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ResponseCartCouponListResult[name]))}

function check_required(o::ResponseCartCouponListResult)
    true
end

function OpenAPI.validate_property(::Type{ ResponseCartCouponListResult }, name::Symbol, val)




end
