# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Cart

    Cart(;
        name=nothing,
        url=nothing,
        version=nothing,
        db_prefix=nothing,
        stores_info=nothing,
        warehouses=nothing,
        shipping_zones=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - name::String
    - url::String
    - version::String
    - db_prefix::String
    - stores_info::Vector{CartStoreInfo}
    - warehouses::Vector{CartWarehouse}
    - shipping_zones::Vector{CartShippingZone}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct Cart <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    url::Union{Nothing, String} = nothing
    version::Union{Nothing, String} = nothing
    db_prefix::Union{Nothing, String} = nothing
    stores_info::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CartStoreInfo} }
    warehouses::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CartWarehouse} }
    shipping_zones::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CartShippingZone} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function Cart(name, url, version, db_prefix, stores_info, warehouses, shipping_zones, additional_fields, custom_fields, )
        OpenAPI.validate_property(Cart, Symbol("name"), name)
        OpenAPI.validate_property(Cart, Symbol("url"), url)
        OpenAPI.validate_property(Cart, Symbol("version"), version)
        OpenAPI.validate_property(Cart, Symbol("db_prefix"), db_prefix)
        OpenAPI.validate_property(Cart, Symbol("stores_info"), stores_info)
        OpenAPI.validate_property(Cart, Symbol("warehouses"), warehouses)
        OpenAPI.validate_property(Cart, Symbol("shipping_zones"), shipping_zones)
        OpenAPI.validate_property(Cart, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(Cart, Symbol("custom_fields"), custom_fields)
        return new(name, url, version, db_prefix, stores_info, warehouses, shipping_zones, additional_fields, custom_fields, )
    end
end # type Cart

const _property_types_Cart = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("url")=>"String", Symbol("version")=>"String", Symbol("db_prefix")=>"String", Symbol("stores_info")=>"Vector{CartStoreInfo}", Symbol("warehouses")=>"Vector{CartWarehouse}", Symbol("shipping_zones")=>"Vector{CartShippingZone}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ Cart }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Cart[name]))}

function check_required(o::Cart)
    true
end

function OpenAPI.validate_property(::Type{ Cart }, name::Symbol, val)









end
