# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Product_TierPrice

    ProductTierPrice(;
        qty=nothing,
        price=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - qty::Float64
    - price::Float64
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct ProductTierPrice <: OpenAPI.APIModel
    qty::Union{Nothing, Float64} = nothing
    price::Union{Nothing, Float64} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function ProductTierPrice(qty, price, additional_fields, custom_fields, )
        OpenAPI.validate_property(ProductTierPrice, Symbol("qty"), qty)
        OpenAPI.validate_property(ProductTierPrice, Symbol("price"), price)
        OpenAPI.validate_property(ProductTierPrice, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(ProductTierPrice, Symbol("custom_fields"), custom_fields)
        return new(qty, price, additional_fields, custom_fields, )
    end
end # type ProductTierPrice

const _property_types_ProductTierPrice = Dict{Symbol,String}(Symbol("qty")=>"Float64", Symbol("price")=>"Float64", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ ProductTierPrice }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductTierPrice[name]))}

function check_required(o::ProductTierPrice)
    true
end

function OpenAPI.validate_property(::Type{ ProductTierPrice }, name::Symbol, val)




end
