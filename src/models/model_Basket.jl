# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Basket

    Basket(;
        id=nothing,
        customer=nothing,
        basket_url=nothing,
        created_at=nothing,
        modified_at=nothing,
        currency=nothing,
        basket_products=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - customer::BaseCustomer
    - basket_url::String
    - created_at::A2CDateTime
    - modified_at::A2CDateTime
    - currency::Currency
    - basket_products::Vector{BasketItem}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct Basket <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    customer = nothing # spec type: Union{ Nothing, BaseCustomer }
    basket_url::Union{Nothing, String} = nothing
    created_at = nothing # spec type: Union{ Nothing, A2CDateTime }
    modified_at = nothing # spec type: Union{ Nothing, A2CDateTime }
    currency = nothing # spec type: Union{ Nothing, Currency }
    basket_products::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{BasketItem} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function Basket(id, customer, basket_url, created_at, modified_at, currency, basket_products, additional_fields, custom_fields, )
        OpenAPI.validate_property(Basket, Symbol("id"), id)
        OpenAPI.validate_property(Basket, Symbol("customer"), customer)
        OpenAPI.validate_property(Basket, Symbol("basket_url"), basket_url)
        OpenAPI.validate_property(Basket, Symbol("created_at"), created_at)
        OpenAPI.validate_property(Basket, Symbol("modified_at"), modified_at)
        OpenAPI.validate_property(Basket, Symbol("currency"), currency)
        OpenAPI.validate_property(Basket, Symbol("basket_products"), basket_products)
        OpenAPI.validate_property(Basket, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(Basket, Symbol("custom_fields"), custom_fields)
        return new(id, customer, basket_url, created_at, modified_at, currency, basket_products, additional_fields, custom_fields, )
    end
end # type Basket

const _property_types_Basket = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("customer")=>"BaseCustomer", Symbol("basket_url")=>"String", Symbol("created_at")=>"A2CDateTime", Symbol("modified_at")=>"A2CDateTime", Symbol("currency")=>"Currency", Symbol("basket_products")=>"Vector{BasketItem}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ Basket }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Basket[name]))}

function check_required(o::Basket)
    true
end

function OpenAPI.validate_property(::Type{ Basket }, name::Symbol, val)









end
