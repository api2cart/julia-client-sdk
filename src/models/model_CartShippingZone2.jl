# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Cart_ShippingZone2

    CartShippingZone2(;
        id=nothing,
        name=nothing,
        enabled=nothing,
        countries=nothing,
        shipping_methods=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - name::String
    - enabled::Bool
    - countries::Vector{Country}
    - shipping_methods::Vector{CartShippingMethod}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct CartShippingZone2 <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    enabled::Union{Nothing, Bool} = nothing
    countries::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Country} }
    shipping_methods::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CartShippingMethod} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function CartShippingZone2(id, name, enabled, countries, shipping_methods, additional_fields, custom_fields, )
        OpenAPI.validate_property(CartShippingZone2, Symbol("id"), id)
        OpenAPI.validate_property(CartShippingZone2, Symbol("name"), name)
        OpenAPI.validate_property(CartShippingZone2, Symbol("enabled"), enabled)
        OpenAPI.validate_property(CartShippingZone2, Symbol("countries"), countries)
        OpenAPI.validate_property(CartShippingZone2, Symbol("shipping_methods"), shipping_methods)
        OpenAPI.validate_property(CartShippingZone2, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(CartShippingZone2, Symbol("custom_fields"), custom_fields)
        return new(id, name, enabled, countries, shipping_methods, additional_fields, custom_fields, )
    end
end # type CartShippingZone2

const _property_types_CartShippingZone2 = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("enabled")=>"Bool", Symbol("countries")=>"Vector{Country}", Symbol("shipping_methods")=>"Vector{CartShippingMethod}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ CartShippingZone2 }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CartShippingZone2[name]))}

function check_required(o::CartShippingZone2)
    true
end

function OpenAPI.validate_property(::Type{ CartShippingZone2 }, name::Symbol, val)







end
