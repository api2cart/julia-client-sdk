# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Product

    Product(;
        id=nothing,
        type=nothing,
        u_model=nothing,
        u_sku=nothing,
        name=nothing,
        description=nothing,
        short_description=nothing,
        price=nothing,
        advanced_price=nothing,
        cost_price=nothing,
        quantity=nothing,
        inventory=nothing,
        group_items=nothing,
        u_brand_id=nothing,
        u_brand=nothing,
        categories_ids=nothing,
        stores_ids=nothing,
        url=nothing,
        seo_url=nothing,
        meta_title=nothing,
        meta_keywords=nothing,
        meta_description=nothing,
        avail_sale=nothing,
        avail_view=nothing,
        is_virtual=nothing,
        is_downloadable=nothing,
        weight=nothing,
        weight_unit=nothing,
        sort_order=nothing,
        in_stock=nothing,
        on_sale=nothing,
        backorders=nothing,
        manage_stock=nothing,
        is_stock_managed=nothing,
        create_at=nothing,
        modified_at=nothing,
        tax_class_id=nothing,
        special_price=nothing,
        tier_price=nothing,
        group_price=nothing,
        images=nothing,
        product_options=nothing,
        u_upc=nothing,
        u_mpn=nothing,
        u_gtin=nothing,
        u_isbn=nothing,
        u_ean=nothing,
        related_products_ids=nothing,
        up_sell_products_ids=nothing,
        cross_sell_products_ids=nothing,
        dimensions_unit=nothing,
        width=nothing,
        height=nothing,
        length=nothing,
        discounts=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - type::String
    - u_model::String
    - u_sku::String
    - name::String
    - description::String
    - short_description::String
    - price::Float64
    - advanced_price::Vector{ProductAdvancedPrice}
    - cost_price::Float64
    - quantity::Float64
    - inventory::Vector{ProductInventory}
    - group_items::Vector{ProductGroupItem}
    - u_brand_id::String
    - u_brand::String
    - categories_ids::Vector{String}
    - stores_ids::Vector{String}
    - url::String
    - seo_url::String
    - meta_title::String
    - meta_keywords::String
    - meta_description::String
    - avail_sale::Bool
    - avail_view::Bool
    - is_virtual::Bool
    - is_downloadable::Bool
    - weight::Float64
    - weight_unit::String
    - sort_order::Int64
    - in_stock::Bool
    - on_sale::Bool
    - backorders::String
    - manage_stock::String
    - is_stock_managed::Bool
    - create_at::A2CDateTime
    - modified_at::A2CDateTime
    - tax_class_id::String
    - special_price::SpecialPrice
    - tier_price::Vector{ProductTierPrice}
    - group_price::Vector{ProductGroupPrice}
    - images::Vector{Image}
    - product_options::Vector{ProductOption}
    - u_upc::String
    - u_mpn::String
    - u_gtin::String
    - u_isbn::String
    - u_ean::String
    - related_products_ids::Vector{String}
    - up_sell_products_ids::Vector{String}
    - cross_sell_products_ids::Vector{String}
    - dimensions_unit::String
    - width::Float64
    - height::Float64
    - length::Float64
    - discounts::Vector{Discount}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct Product <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    u_model::Union{Nothing, String} = nothing
    u_sku::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    short_description::Union{Nothing, String} = nothing
    price::Union{Nothing, Float64} = nothing
    advanced_price::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAdvancedPrice} }
    cost_price::Union{Nothing, Float64} = nothing
    quantity::Union{Nothing, Float64} = nothing
    inventory::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductInventory} }
    group_items::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductGroupItem} }
    u_brand_id::Union{Nothing, String} = nothing
    u_brand::Union{Nothing, String} = nothing
    categories_ids::Union{Nothing, Vector{String}} = nothing
    stores_ids::Union{Nothing, Vector{String}} = nothing
    url::Union{Nothing, String} = nothing
    seo_url::Union{Nothing, String} = nothing
    meta_title::Union{Nothing, String} = nothing
    meta_keywords::Union{Nothing, String} = nothing
    meta_description::Union{Nothing, String} = nothing
    avail_sale::Union{Nothing, Bool} = nothing
    avail_view::Union{Nothing, Bool} = nothing
    is_virtual::Union{Nothing, Bool} = nothing
    is_downloadable::Union{Nothing, Bool} = nothing
    weight::Union{Nothing, Float64} = nothing
    weight_unit::Union{Nothing, String} = nothing
    sort_order::Union{Nothing, Int64} = nothing
    in_stock::Union{Nothing, Bool} = nothing
    on_sale::Union{Nothing, Bool} = nothing
    backorders::Union{Nothing, String} = nothing
    manage_stock::Union{Nothing, String} = nothing
    is_stock_managed::Union{Nothing, Bool} = nothing
    create_at = nothing # spec type: Union{ Nothing, A2CDateTime }
    modified_at = nothing # spec type: Union{ Nothing, A2CDateTime }
    tax_class_id::Union{Nothing, String} = nothing
    special_price = nothing # spec type: Union{ Nothing, SpecialPrice }
    tier_price::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductTierPrice} }
    group_price::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductGroupPrice} }
    images::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Image} }
    product_options::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductOption} }
    u_upc::Union{Nothing, String} = nothing
    u_mpn::Union{Nothing, String} = nothing
    u_gtin::Union{Nothing, String} = nothing
    u_isbn::Union{Nothing, String} = nothing
    u_ean::Union{Nothing, String} = nothing
    related_products_ids::Union{Nothing, Vector{String}} = nothing
    up_sell_products_ids::Union{Nothing, Vector{String}} = nothing
    cross_sell_products_ids::Union{Nothing, Vector{String}} = nothing
    dimensions_unit::Union{Nothing, String} = nothing
    width::Union{Nothing, Float64} = nothing
    height::Union{Nothing, Float64} = nothing
    length::Union{Nothing, Float64} = nothing
    discounts::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Discount} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function Product(id, type, u_model, u_sku, name, description, short_description, price, advanced_price, cost_price, quantity, inventory, group_items, u_brand_id, u_brand, categories_ids, stores_ids, url, seo_url, meta_title, meta_keywords, meta_description, avail_sale, avail_view, is_virtual, is_downloadable, weight, weight_unit, sort_order, in_stock, on_sale, backorders, manage_stock, is_stock_managed, create_at, modified_at, tax_class_id, special_price, tier_price, group_price, images, product_options, u_upc, u_mpn, u_gtin, u_isbn, u_ean, related_products_ids, up_sell_products_ids, cross_sell_products_ids, dimensions_unit, width, height, length, discounts, additional_fields, custom_fields, )
        OpenAPI.validate_property(Product, Symbol("id"), id)
        OpenAPI.validate_property(Product, Symbol("type"), type)
        OpenAPI.validate_property(Product, Symbol("u_model"), u_model)
        OpenAPI.validate_property(Product, Symbol("u_sku"), u_sku)
        OpenAPI.validate_property(Product, Symbol("name"), name)
        OpenAPI.validate_property(Product, Symbol("description"), description)
        OpenAPI.validate_property(Product, Symbol("short_description"), short_description)
        OpenAPI.validate_property(Product, Symbol("price"), price)
        OpenAPI.validate_property(Product, Symbol("advanced_price"), advanced_price)
        OpenAPI.validate_property(Product, Symbol("cost_price"), cost_price)
        OpenAPI.validate_property(Product, Symbol("quantity"), quantity)
        OpenAPI.validate_property(Product, Symbol("inventory"), inventory)
        OpenAPI.validate_property(Product, Symbol("group_items"), group_items)
        OpenAPI.validate_property(Product, Symbol("u_brand_id"), u_brand_id)
        OpenAPI.validate_property(Product, Symbol("u_brand"), u_brand)
        OpenAPI.validate_property(Product, Symbol("categories_ids"), categories_ids)
        OpenAPI.validate_property(Product, Symbol("stores_ids"), stores_ids)
        OpenAPI.validate_property(Product, Symbol("url"), url)
        OpenAPI.validate_property(Product, Symbol("seo_url"), seo_url)
        OpenAPI.validate_property(Product, Symbol("meta_title"), meta_title)
        OpenAPI.validate_property(Product, Symbol("meta_keywords"), meta_keywords)
        OpenAPI.validate_property(Product, Symbol("meta_description"), meta_description)
        OpenAPI.validate_property(Product, Symbol("avail_sale"), avail_sale)
        OpenAPI.validate_property(Product, Symbol("avail_view"), avail_view)
        OpenAPI.validate_property(Product, Symbol("is_virtual"), is_virtual)
        OpenAPI.validate_property(Product, Symbol("is_downloadable"), is_downloadable)
        OpenAPI.validate_property(Product, Symbol("weight"), weight)
        OpenAPI.validate_property(Product, Symbol("weight_unit"), weight_unit)
        OpenAPI.validate_property(Product, Symbol("sort_order"), sort_order)
        OpenAPI.validate_property(Product, Symbol("in_stock"), in_stock)
        OpenAPI.validate_property(Product, Symbol("on_sale"), on_sale)
        OpenAPI.validate_property(Product, Symbol("backorders"), backorders)
        OpenAPI.validate_property(Product, Symbol("manage_stock"), manage_stock)
        OpenAPI.validate_property(Product, Symbol("is_stock_managed"), is_stock_managed)
        OpenAPI.validate_property(Product, Symbol("create_at"), create_at)
        OpenAPI.validate_property(Product, Symbol("modified_at"), modified_at)
        OpenAPI.validate_property(Product, Symbol("tax_class_id"), tax_class_id)
        OpenAPI.validate_property(Product, Symbol("special_price"), special_price)
        OpenAPI.validate_property(Product, Symbol("tier_price"), tier_price)
        OpenAPI.validate_property(Product, Symbol("group_price"), group_price)
        OpenAPI.validate_property(Product, Symbol("images"), images)
        OpenAPI.validate_property(Product, Symbol("product_options"), product_options)
        OpenAPI.validate_property(Product, Symbol("u_upc"), u_upc)
        OpenAPI.validate_property(Product, Symbol("u_mpn"), u_mpn)
        OpenAPI.validate_property(Product, Symbol("u_gtin"), u_gtin)
        OpenAPI.validate_property(Product, Symbol("u_isbn"), u_isbn)
        OpenAPI.validate_property(Product, Symbol("u_ean"), u_ean)
        OpenAPI.validate_property(Product, Symbol("related_products_ids"), related_products_ids)
        OpenAPI.validate_property(Product, Symbol("up_sell_products_ids"), up_sell_products_ids)
        OpenAPI.validate_property(Product, Symbol("cross_sell_products_ids"), cross_sell_products_ids)
        OpenAPI.validate_property(Product, Symbol("dimensions_unit"), dimensions_unit)
        OpenAPI.validate_property(Product, Symbol("width"), width)
        OpenAPI.validate_property(Product, Symbol("height"), height)
        OpenAPI.validate_property(Product, Symbol("length"), length)
        OpenAPI.validate_property(Product, Symbol("discounts"), discounts)
        OpenAPI.validate_property(Product, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(Product, Symbol("custom_fields"), custom_fields)
        return new(id, type, u_model, u_sku, name, description, short_description, price, advanced_price, cost_price, quantity, inventory, group_items, u_brand_id, u_brand, categories_ids, stores_ids, url, seo_url, meta_title, meta_keywords, meta_description, avail_sale, avail_view, is_virtual, is_downloadable, weight, weight_unit, sort_order, in_stock, on_sale, backorders, manage_stock, is_stock_managed, create_at, modified_at, tax_class_id, special_price, tier_price, group_price, images, product_options, u_upc, u_mpn, u_gtin, u_isbn, u_ean, related_products_ids, up_sell_products_ids, cross_sell_products_ids, dimensions_unit, width, height, length, discounts, additional_fields, custom_fields, )
    end
end # type Product

const _property_types_Product = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("type")=>"String", Symbol("u_model")=>"String", Symbol("u_sku")=>"String", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("short_description")=>"String", Symbol("price")=>"Float64", Symbol("advanced_price")=>"Vector{ProductAdvancedPrice}", Symbol("cost_price")=>"Float64", Symbol("quantity")=>"Float64", Symbol("inventory")=>"Vector{ProductInventory}", Symbol("group_items")=>"Vector{ProductGroupItem}", Symbol("u_brand_id")=>"String", Symbol("u_brand")=>"String", Symbol("categories_ids")=>"Vector{String}", Symbol("stores_ids")=>"Vector{String}", Symbol("url")=>"String", Symbol("seo_url")=>"String", Symbol("meta_title")=>"String", Symbol("meta_keywords")=>"String", Symbol("meta_description")=>"String", Symbol("avail_sale")=>"Bool", Symbol("avail_view")=>"Bool", Symbol("is_virtual")=>"Bool", Symbol("is_downloadable")=>"Bool", Symbol("weight")=>"Float64", Symbol("weight_unit")=>"String", Symbol("sort_order")=>"Int64", Symbol("in_stock")=>"Bool", Symbol("on_sale")=>"Bool", Symbol("backorders")=>"String", Symbol("manage_stock")=>"String", Symbol("is_stock_managed")=>"Bool", Symbol("create_at")=>"A2CDateTime", Symbol("modified_at")=>"A2CDateTime", Symbol("tax_class_id")=>"String", Symbol("special_price")=>"SpecialPrice", Symbol("tier_price")=>"Vector{ProductTierPrice}", Symbol("group_price")=>"Vector{ProductGroupPrice}", Symbol("images")=>"Vector{Image}", Symbol("product_options")=>"Vector{ProductOption}", Symbol("u_upc")=>"String", Symbol("u_mpn")=>"String", Symbol("u_gtin")=>"String", Symbol("u_isbn")=>"String", Symbol("u_ean")=>"String", Symbol("related_products_ids")=>"Vector{String}", Symbol("up_sell_products_ids")=>"Vector{String}", Symbol("cross_sell_products_ids")=>"Vector{String}", Symbol("dimensions_unit")=>"String", Symbol("width")=>"Float64", Symbol("height")=>"Float64", Symbol("length")=>"Float64", Symbol("discounts")=>"Vector{Discount}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ Product }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Product[name]))}

function check_required(o::Product)
    true
end

function OpenAPI.validate_property(::Type{ Product }, name::Symbol, val)

























































end
