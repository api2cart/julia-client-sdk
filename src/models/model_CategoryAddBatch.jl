# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CategoryAddBatch

    CategoryAddBatch(;
        payload=nothing,
    )

    - payload::Vector{CategoryAddBatchPayloadInner} : Contains an array of categories objects. The list of properties may vary depending on the specific platform.
"""
Base.@kwdef mutable struct CategoryAddBatch <: OpenAPI.APIModel
    payload::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CategoryAddBatchPayloadInner} }

    function CategoryAddBatch(payload, )
        OpenAPI.validate_property(CategoryAddBatch, Symbol("payload"), payload)
        return new(payload, )
    end
end # type CategoryAddBatch

const _property_types_CategoryAddBatch = Dict{Symbol,String}(Symbol("payload")=>"Vector{CategoryAddBatchPayloadInner}", )
OpenAPI.property_type(::Type{ CategoryAddBatch }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CategoryAddBatch[name]))}

function check_required(o::CategoryAddBatch)
    o.payload === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ CategoryAddBatch }, name::Symbol, val)

    if name === Symbol("payload")
        OpenAPI.validate_param(name, "CategoryAddBatch", :maxItems, val, 250)
        OpenAPI.validate_param(name, "CategoryAddBatch", :minItems, val, 1)
    end
end
