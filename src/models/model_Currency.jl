# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Currency

    Currency(;
        id=nothing,
        name=nothing,
        iso3=nothing,
        symbol_left=nothing,
        symbol_right=nothing,
        rate=nothing,
        avail=nothing,
        default=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - name::String
    - iso3::String
    - symbol_left::String
    - symbol_right::String
    - rate::Float64
    - avail::Bool
    - default::Bool
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct Currency <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    iso3::Union{Nothing, String} = nothing
    symbol_left::Union{Nothing, String} = nothing
    symbol_right::Union{Nothing, String} = nothing
    rate::Union{Nothing, Float64} = nothing
    avail::Union{Nothing, Bool} = nothing
    default::Union{Nothing, Bool} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function Currency(id, name, iso3, symbol_left, symbol_right, rate, avail, default, additional_fields, custom_fields, )
        OpenAPI.validate_property(Currency, Symbol("id"), id)
        OpenAPI.validate_property(Currency, Symbol("name"), name)
        OpenAPI.validate_property(Currency, Symbol("iso3"), iso3)
        OpenAPI.validate_property(Currency, Symbol("symbol_left"), symbol_left)
        OpenAPI.validate_property(Currency, Symbol("symbol_right"), symbol_right)
        OpenAPI.validate_property(Currency, Symbol("rate"), rate)
        OpenAPI.validate_property(Currency, Symbol("avail"), avail)
        OpenAPI.validate_property(Currency, Symbol("default"), default)
        OpenAPI.validate_property(Currency, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(Currency, Symbol("custom_fields"), custom_fields)
        return new(id, name, iso3, symbol_left, symbol_right, rate, avail, default, additional_fields, custom_fields, )
    end
end # type Currency

const _property_types_Currency = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("iso3")=>"String", Symbol("symbol_left")=>"String", Symbol("symbol_right")=>"String", Symbol("rate")=>"Float64", Symbol("avail")=>"Bool", Symbol("default")=>"Bool", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ Currency }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Currency[name]))}

function check_required(o::Currency)
    true
end

function OpenAPI.validate_property(::Type{ Currency }, name::Symbol, val)










end
