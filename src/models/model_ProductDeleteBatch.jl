# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductDeleteBatch

    ProductDeleteBatch(;
        payload=nothing,
    )

    - payload::Vector{ProductDeleteBatchPayloadInner} : Contains an array of product deletion requests, each including the product ID.
"""
Base.@kwdef mutable struct ProductDeleteBatch <: OpenAPI.APIModel
    payload::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductDeleteBatchPayloadInner} }

    function ProductDeleteBatch(payload, )
        OpenAPI.validate_property(ProductDeleteBatch, Symbol("payload"), payload)
        return new(payload, )
    end
end # type ProductDeleteBatch

const _property_types_ProductDeleteBatch = Dict{Symbol,String}(Symbol("payload")=>"Vector{ProductDeleteBatchPayloadInner}", )
OpenAPI.property_type(::Type{ ProductDeleteBatch }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductDeleteBatch[name]))}

function check_required(o::ProductDeleteBatch)
    o.payload === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ProductDeleteBatch }, name::Symbol, val)

    if name === Symbol("payload")
        OpenAPI.validate_param(name, "ProductDeleteBatch", :maxItems, val, 250)
        OpenAPI.validate_param(name, "ProductDeleteBatch", :minItems, val, 1)
    end
end
