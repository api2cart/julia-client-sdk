# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductPriceAdd

    ProductPriceAdd(;
        product_id=nothing,
        group_prices=nothing,
        store_id=nothing,
    )

    - product_id::String : Defines the product to which the price has to be added
    - group_prices::Vector{ProductAddGroupPricesInner} : Defines product&#39;s group prices
    - store_id::String : Store Id
"""
Base.@kwdef mutable struct ProductPriceAdd <: OpenAPI.APIModel
    product_id::Union{Nothing, String} = nothing
    group_prices::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddGroupPricesInner} }
    store_id::Union{Nothing, String} = nothing

    function ProductPriceAdd(product_id, group_prices, store_id, )
        OpenAPI.validate_property(ProductPriceAdd, Symbol("product_id"), product_id)
        OpenAPI.validate_property(ProductPriceAdd, Symbol("group_prices"), group_prices)
        OpenAPI.validate_property(ProductPriceAdd, Symbol("store_id"), store_id)
        return new(product_id, group_prices, store_id, )
    end
end # type ProductPriceAdd

const _property_types_ProductPriceAdd = Dict{Symbol,String}(Symbol("product_id")=>"String", Symbol("group_prices")=>"Vector{ProductAddGroupPricesInner}", Symbol("store_id")=>"String", )
OpenAPI.property_type(::Type{ ProductPriceAdd }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductPriceAdd[name]))}

function check_required(o::ProductPriceAdd)
    true
end

function OpenAPI.validate_property(::Type{ ProductPriceAdd }, name::Symbol, val)



end
