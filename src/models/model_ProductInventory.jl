# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Product_Inventory

    ProductInventory(;
        warehouse_id=nothing,
        quantity=nothing,
        in_stock=nothing,
        priority=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - warehouse_id::String
    - quantity::Float64
    - in_stock::Bool
    - priority::Int64
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct ProductInventory <: OpenAPI.APIModel
    warehouse_id::Union{Nothing, String} = nothing
    quantity::Union{Nothing, Float64} = nothing
    in_stock::Union{Nothing, Bool} = nothing
    priority::Union{Nothing, Int64} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function ProductInventory(warehouse_id, quantity, in_stock, priority, additional_fields, custom_fields, )
        OpenAPI.validate_property(ProductInventory, Symbol("warehouse_id"), warehouse_id)
        OpenAPI.validate_property(ProductInventory, Symbol("quantity"), quantity)
        OpenAPI.validate_property(ProductInventory, Symbol("in_stock"), in_stock)
        OpenAPI.validate_property(ProductInventory, Symbol("priority"), priority)
        OpenAPI.validate_property(ProductInventory, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(ProductInventory, Symbol("custom_fields"), custom_fields)
        return new(warehouse_id, quantity, in_stock, priority, additional_fields, custom_fields, )
    end
end # type ProductInventory

const _property_types_ProductInventory = Dict{Symbol,String}(Symbol("warehouse_id")=>"String", Symbol("quantity")=>"Float64", Symbol("in_stock")=>"Bool", Symbol("priority")=>"Int64", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ ProductInventory }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductInventory[name]))}

function check_required(o::ProductInventory)
    true
end

function OpenAPI.validate_property(::Type{ ProductInventory }, name::Symbol, val)






end
