# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderAdd_200_response_result

    OrderAdd200ResponseResult(;
        order_id=nothing,
        id=nothing,
        customer_id=nothing,
    )

    - order_id::String
    - id::String
    - customer_id::String
"""
Base.@kwdef mutable struct OrderAdd200ResponseResult <: OpenAPI.APIModel
    order_id::Union{Nothing, String} = nothing
    id::Union{Nothing, String} = nothing
    customer_id::Union{Nothing, String} = nothing

    function OrderAdd200ResponseResult(order_id, id, customer_id, )
        OpenAPI.validate_property(OrderAdd200ResponseResult, Symbol("order_id"), order_id)
        OpenAPI.validate_property(OrderAdd200ResponseResult, Symbol("id"), id)
        OpenAPI.validate_property(OrderAdd200ResponseResult, Symbol("customer_id"), customer_id)
        return new(order_id, id, customer_id, )
    end
end # type OrderAdd200ResponseResult

const _property_types_OrderAdd200ResponseResult = Dict{Symbol,String}(Symbol("order_id")=>"String", Symbol("id")=>"String", Symbol("customer_id")=>"String", )
OpenAPI.property_type(::Type{ OrderAdd200ResponseResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderAdd200ResponseResult[name]))}

function check_required(o::OrderAdd200ResponseResult)
    true
end

function OpenAPI.validate_property(::Type{ OrderAdd200ResponseResult }, name::Symbol, val)



end
