# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Response_Product_Attribute_List_Result

    ResponseProductAttributeListResult(;
        attribute=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - attribute::Vector{ProductAttribute}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct ResponseProductAttributeListResult <: OpenAPI.APIModel
    attribute::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAttribute} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function ResponseProductAttributeListResult(attribute, additional_fields, custom_fields, )
        OpenAPI.validate_property(ResponseProductAttributeListResult, Symbol("attribute"), attribute)
        OpenAPI.validate_property(ResponseProductAttributeListResult, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(ResponseProductAttributeListResult, Symbol("custom_fields"), custom_fields)
        return new(attribute, additional_fields, custom_fields, )
    end
end # type ResponseProductAttributeListResult

const _property_types_ResponseProductAttributeListResult = Dict{Symbol,String}(Symbol("attribute")=>"Vector{ProductAttribute}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ ResponseProductAttributeListResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ResponseProductAttributeListResult[name]))}

function check_required(o::ResponseProductAttributeListResult)
    true
end

function OpenAPI.validate_property(::Type{ ResponseProductAttributeListResult }, name::Symbol, val)



end
