# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Customer

    Customer(;
        id=nothing,
        email=nothing,
        first_name=nothing,
        last_name=nothing,
        phone=nothing,
        created_time=nothing,
        modified_time=nothing,
        group=nothing,
        login=nothing,
        last_login=nothing,
        birth_day=nothing,
        status=nothing,
        news_letter_subscription=nothing,
        consents=nothing,
        gender=nothing,
        stores_ids=nothing,
        website=nothing,
        fax=nothing,
        company=nothing,
        ip_address=nothing,
        address_book=nothing,
        lang_id=nothing,
        orders_count=nothing,
        last_order_id=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - email::String
    - first_name::String
    - last_name::String
    - phone::String
    - created_time::A2CDateTime
    - modified_time::A2CDateTime
    - group::Vector{CustomerGroup}
    - login::String
    - last_login::A2CDateTime
    - birth_day::A2CDateTime
    - status::String
    - news_letter_subscription::Bool
    - consents::Vector{CustomerConsent}
    - gender::String
    - stores_ids::Vector{String}
    - website::String
    - fax::String
    - company::String
    - ip_address::String
    - address_book::Vector{CustomerAddress}
    - lang_id::String
    - orders_count::Int64
    - last_order_id::String
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct Customer <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    email::Union{Nothing, String} = nothing
    first_name::Union{Nothing, String} = nothing
    last_name::Union{Nothing, String} = nothing
    phone::Union{Nothing, String} = nothing
    created_time = nothing # spec type: Union{ Nothing, A2CDateTime }
    modified_time = nothing # spec type: Union{ Nothing, A2CDateTime }
    group::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CustomerGroup} }
    login::Union{Nothing, String} = nothing
    last_login = nothing # spec type: Union{ Nothing, A2CDateTime }
    birth_day = nothing # spec type: Union{ Nothing, A2CDateTime }
    status::Union{Nothing, String} = nothing
    news_letter_subscription::Union{Nothing, Bool} = nothing
    consents::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CustomerConsent} }
    gender::Union{Nothing, String} = nothing
    stores_ids::Union{Nothing, Vector{String}} = nothing
    website::Union{Nothing, String} = nothing
    fax::Union{Nothing, String} = nothing
    company::Union{Nothing, String} = nothing
    ip_address::Union{Nothing, String} = nothing
    address_book::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CustomerAddress} }
    lang_id::Union{Nothing, String} = nothing
    orders_count::Union{Nothing, Int64} = nothing
    last_order_id::Union{Nothing, String} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function Customer(id, email, first_name, last_name, phone, created_time, modified_time, group, login, last_login, birth_day, status, news_letter_subscription, consents, gender, stores_ids, website, fax, company, ip_address, address_book, lang_id, orders_count, last_order_id, additional_fields, custom_fields, )
        OpenAPI.validate_property(Customer, Symbol("id"), id)
        OpenAPI.validate_property(Customer, Symbol("email"), email)
        OpenAPI.validate_property(Customer, Symbol("first_name"), first_name)
        OpenAPI.validate_property(Customer, Symbol("last_name"), last_name)
        OpenAPI.validate_property(Customer, Symbol("phone"), phone)
        OpenAPI.validate_property(Customer, Symbol("created_time"), created_time)
        OpenAPI.validate_property(Customer, Symbol("modified_time"), modified_time)
        OpenAPI.validate_property(Customer, Symbol("group"), group)
        OpenAPI.validate_property(Customer, Symbol("login"), login)
        OpenAPI.validate_property(Customer, Symbol("last_login"), last_login)
        OpenAPI.validate_property(Customer, Symbol("birth_day"), birth_day)
        OpenAPI.validate_property(Customer, Symbol("status"), status)
        OpenAPI.validate_property(Customer, Symbol("news_letter_subscription"), news_letter_subscription)
        OpenAPI.validate_property(Customer, Symbol("consents"), consents)
        OpenAPI.validate_property(Customer, Symbol("gender"), gender)
        OpenAPI.validate_property(Customer, Symbol("stores_ids"), stores_ids)
        OpenAPI.validate_property(Customer, Symbol("website"), website)
        OpenAPI.validate_property(Customer, Symbol("fax"), fax)
        OpenAPI.validate_property(Customer, Symbol("company"), company)
        OpenAPI.validate_property(Customer, Symbol("ip_address"), ip_address)
        OpenAPI.validate_property(Customer, Symbol("address_book"), address_book)
        OpenAPI.validate_property(Customer, Symbol("lang_id"), lang_id)
        OpenAPI.validate_property(Customer, Symbol("orders_count"), orders_count)
        OpenAPI.validate_property(Customer, Symbol("last_order_id"), last_order_id)
        OpenAPI.validate_property(Customer, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(Customer, Symbol("custom_fields"), custom_fields)
        return new(id, email, first_name, last_name, phone, created_time, modified_time, group, login, last_login, birth_day, status, news_letter_subscription, consents, gender, stores_ids, website, fax, company, ip_address, address_book, lang_id, orders_count, last_order_id, additional_fields, custom_fields, )
    end
end # type Customer

const _property_types_Customer = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("email")=>"String", Symbol("first_name")=>"String", Symbol("last_name")=>"String", Symbol("phone")=>"String", Symbol("created_time")=>"A2CDateTime", Symbol("modified_time")=>"A2CDateTime", Symbol("group")=>"Vector{CustomerGroup}", Symbol("login")=>"String", Symbol("last_login")=>"A2CDateTime", Symbol("birth_day")=>"A2CDateTime", Symbol("status")=>"String", Symbol("news_letter_subscription")=>"Bool", Symbol("consents")=>"Vector{CustomerConsent}", Symbol("gender")=>"String", Symbol("stores_ids")=>"Vector{String}", Symbol("website")=>"String", Symbol("fax")=>"String", Symbol("company")=>"String", Symbol("ip_address")=>"String", Symbol("address_book")=>"Vector{CustomerAddress}", Symbol("lang_id")=>"String", Symbol("orders_count")=>"Int64", Symbol("last_order_id")=>"String", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ Customer }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Customer[name]))}

function check_required(o::Customer)
    true
end

function OpenAPI.validate_property(::Type{ Customer }, name::Symbol, val)


























end
