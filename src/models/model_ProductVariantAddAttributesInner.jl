# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductVariantAdd_attributes_inner

    ProductVariantAddAttributesInner(;
        attribute_name=nothing,
        attribute_value=nothing,
        attribute_price=nothing,
    )

    - attribute_name::String
    - attribute_value::String
    - attribute_price::Float64
"""
Base.@kwdef mutable struct ProductVariantAddAttributesInner <: OpenAPI.APIModel
    attribute_name::Union{Nothing, String} = nothing
    attribute_value::Union{Nothing, String} = nothing
    attribute_price::Union{Nothing, Float64} = nothing

    function ProductVariantAddAttributesInner(attribute_name, attribute_value, attribute_price, )
        OpenAPI.validate_property(ProductVariantAddAttributesInner, Symbol("attribute_name"), attribute_name)
        OpenAPI.validate_property(ProductVariantAddAttributesInner, Symbol("attribute_value"), attribute_value)
        OpenAPI.validate_property(ProductVariantAddAttributesInner, Symbol("attribute_price"), attribute_price)
        return new(attribute_name, attribute_value, attribute_price, )
    end
end # type ProductVariantAddAttributesInner

const _property_types_ProductVariantAddAttributesInner = Dict{Symbol,String}(Symbol("attribute_name")=>"String", Symbol("attribute_value")=>"String", Symbol("attribute_price")=>"Float64", )
OpenAPI.property_type(::Type{ ProductVariantAddAttributesInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductVariantAddAttributesInner[name]))}

function check_required(o::ProductVariantAddAttributesInner)
    true
end

function OpenAPI.validate_property(::Type{ ProductVariantAddAttributesInner }, name::Symbol, val)



end
