# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Cart_ShippingZone

    CartShippingZone(;
        id=nothing,
        code=nothing,
        name=nothing,
        country=nothing,
        country_iso2_codes=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - code::String
    - name::String
    - country::String
    - country_iso2_codes::Vector{String}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct CartShippingZone <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    code::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    country::Union{Nothing, String} = nothing
    country_iso2_codes::Union{Nothing, Vector{String}} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function CartShippingZone(id, code, name, country, country_iso2_codes, additional_fields, custom_fields, )
        OpenAPI.validate_property(CartShippingZone, Symbol("id"), id)
        OpenAPI.validate_property(CartShippingZone, Symbol("code"), code)
        OpenAPI.validate_property(CartShippingZone, Symbol("name"), name)
        OpenAPI.validate_property(CartShippingZone, Symbol("country"), country)
        OpenAPI.validate_property(CartShippingZone, Symbol("country_iso2_codes"), country_iso2_codes)
        OpenAPI.validate_property(CartShippingZone, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(CartShippingZone, Symbol("custom_fields"), custom_fields)
        return new(id, code, name, country, country_iso2_codes, additional_fields, custom_fields, )
    end
end # type CartShippingZone

const _property_types_CartShippingZone = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("code")=>"String", Symbol("name")=>"String", Symbol("country")=>"String", Symbol("country_iso2_codes")=>"Vector{String}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ CartShippingZone }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CartShippingZone[name]))}

function check_required(o::CartShippingZone)
    true
end

function OpenAPI.validate_property(::Type{ CartShippingZone }, name::Symbol, val)







end
