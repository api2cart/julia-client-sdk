# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Marketplace_Product

    MarketplaceProduct(;
        id=nothing,
        type=nothing,
        u_asin=nothing,
        u_ean=nothing,
        u_gtin=nothing,
        u_isbn=nothing,
        u_mpn=nothing,
        u_upc=nothing,
        name=nothing,
        description=nothing,
        url=nothing,
        price=nothing,
        images=nothing,
        product_options=nothing,
        manufacturer=nothing,
        brand=nothing,
        weight=nothing,
        weight_unit=nothing,
        dimensions_unit=nothing,
        width=nothing,
        height=nothing,
        length=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - type::String
    - u_asin::String
    - u_ean::String
    - u_gtin::String
    - u_isbn::String
    - u_mpn::String
    - u_upc::String
    - name::String
    - description::String
    - url::String
    - price::Float64
    - images::Vector{Image}
    - product_options::Vector{ProductOption}
    - manufacturer::String
    - brand::String
    - weight::Float64
    - weight_unit::String
    - dimensions_unit::String
    - width::Float64
    - height::Float64
    - length::Float64
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct MarketplaceProduct <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    u_asin::Union{Nothing, String} = nothing
    u_ean::Union{Nothing, String} = nothing
    u_gtin::Union{Nothing, String} = nothing
    u_isbn::Union{Nothing, String} = nothing
    u_mpn::Union{Nothing, String} = nothing
    u_upc::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    url::Union{Nothing, String} = nothing
    price::Union{Nothing, Float64} = nothing
    images::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Image} }
    product_options::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductOption} }
    manufacturer::Union{Nothing, String} = nothing
    brand::Union{Nothing, String} = nothing
    weight::Union{Nothing, Float64} = nothing
    weight_unit::Union{Nothing, String} = nothing
    dimensions_unit::Union{Nothing, String} = nothing
    width::Union{Nothing, Float64} = nothing
    height::Union{Nothing, Float64} = nothing
    length::Union{Nothing, Float64} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function MarketplaceProduct(id, type, u_asin, u_ean, u_gtin, u_isbn, u_mpn, u_upc, name, description, url, price, images, product_options, manufacturer, brand, weight, weight_unit, dimensions_unit, width, height, length, additional_fields, custom_fields, )
        OpenAPI.validate_property(MarketplaceProduct, Symbol("id"), id)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("type"), type)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("u_asin"), u_asin)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("u_ean"), u_ean)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("u_gtin"), u_gtin)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("u_isbn"), u_isbn)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("u_mpn"), u_mpn)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("u_upc"), u_upc)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("name"), name)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("description"), description)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("url"), url)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("price"), price)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("images"), images)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("product_options"), product_options)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("manufacturer"), manufacturer)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("brand"), brand)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("weight"), weight)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("weight_unit"), weight_unit)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("dimensions_unit"), dimensions_unit)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("width"), width)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("height"), height)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("length"), length)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(MarketplaceProduct, Symbol("custom_fields"), custom_fields)
        return new(id, type, u_asin, u_ean, u_gtin, u_isbn, u_mpn, u_upc, name, description, url, price, images, product_options, manufacturer, brand, weight, weight_unit, dimensions_unit, width, height, length, additional_fields, custom_fields, )
    end
end # type MarketplaceProduct

const _property_types_MarketplaceProduct = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("type")=>"String", Symbol("u_asin")=>"String", Symbol("u_ean")=>"String", Symbol("u_gtin")=>"String", Symbol("u_isbn")=>"String", Symbol("u_mpn")=>"String", Symbol("u_upc")=>"String", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("url")=>"String", Symbol("price")=>"Float64", Symbol("images")=>"Vector{Image}", Symbol("product_options")=>"Vector{ProductOption}", Symbol("manufacturer")=>"String", Symbol("brand")=>"String", Symbol("weight")=>"Float64", Symbol("weight_unit")=>"String", Symbol("dimensions_unit")=>"String", Symbol("width")=>"Float64", Symbol("height")=>"Float64", Symbol("length")=>"Float64", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ MarketplaceProduct }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_MarketplaceProduct[name]))}

function check_required(o::MarketplaceProduct)
    true
end

function OpenAPI.validate_property(::Type{ MarketplaceProduct }, name::Symbol, val)
























end
