# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductUpdate

    ProductUpdate(;
        id=nothing,
        model=nothing,
        sku=nothing,
        name=nothing,
        description=nothing,
        short_description=nothing,
        price=nothing,
        old_price=nothing,
        special_price=nothing,
        sprice_create=nothing,
        sprice_expire=nothing,
        cost_price=nothing,
        fixed_cost_shipping_price=nothing,
        retail_price=nothing,
        tier_prices=nothing,
        reserve_price=nothing,
        buyitnow_price=nothing,
        taxable=true,
        tax_class_id=nothing,
        type=nothing,
        status=nothing,
        condition=nothing,
        visible=nothing,
        in_stock=nothing,
        avail=true,
        avail_from=nothing,
        product_class=nothing,
        brand_name=nothing,
        available_for_view=nothing,
        stores_ids=nothing,
        store_id=nothing,
        lang_id=nothing,
        quantity=nothing,
        reserve_quantity=nothing,
        manage_stock=nothing,
        backorder_status=nothing,
        increase_quantity=nothing,
        reduce_quantity=nothing,
        low_stock_threshold=nothing,
        warehouse_id=nothing,
        weight=nothing,
        weight_unit=nothing,
        height=nothing,
        length=nothing,
        width=nothing,
        dimensions_unit=nothing,
        is_virtual=false,
        is_free_shipping=nothing,
        gtin=nothing,
        upc=nothing,
        mpn=nothing,
        ean=nothing,
        isbn=nothing,
        barcode=nothing,
        manufacturer=nothing,
        manufacturer_id=nothing,
        categories_ids=nothing,
        related_products_ids=nothing,
        up_sell_products_ids=nothing,
        cross_sell_products_ids=nothing,
        meta_title=nothing,
        meta_keywords=nothing,
        meta_description=nothing,
        seo_url=nothing,
        search_keywords=nothing,
        tags=nothing,
        delivery_code=nothing,
        package_details=nothing,
        country_of_origin=nothing,
        harmonized_system_code=nothing,
        shipping_template_id=0,
        when_made="made_to_order",
        is_supply=true,
        downloadable=false,
        materials=nothing,
        auto_renew=false,
        on_sale=false,
        production_partner_ids=nothing,
        manufacturer_info=nothing,
        report_request_id=nothing,
        disable_report_cache=false,
        reindex=true,
        clear_cache=true,
        check_process_status=false,
        specifics=nothing,
        shop_section_id=nothing,
        personalization_details=nothing,
        external_product_link=nothing,
        marketplace_item_properties=nothing,
        min_order_quantity=nothing,
    )

    - id::String : Defines product id that has to be updated
    - model::String : Defines product model that has to be updated
    - sku::String : Defines new product&#39;s sku
    - name::String : Defines product&#39;s name that has to be updated
    - description::String : Defines new product&#39;s description
    - short_description::String : Defines short description
    - price::Float64 : Defines new product&#39;s price
    - old_price::Float64 : Defines product&#39;s old price
    - special_price::Float64 : Defines new product&#39;s special price
    - sprice_create::String : Defines the date of special price creation
    - sprice_expire::String : Defines the term of special price offer duration
    - cost_price::Float64 : Defines new product&#39;s cost price
    - fixed_cost_shipping_price::Float64 : Specifies product&#39;s fixed cost shipping price
    - retail_price::Float64 : Defines new product&#39;s retail price
    - tier_prices::Vector{ProductAddTierPricesInner} : Defines product&#39;s tier prices
    - reserve_price::Float64 : Defines reserve price value
    - buyitnow_price::Float64 : Defines buy it now value
    - taxable::Bool : Specifies whether a tax is charged
    - tax_class_id::String : Defines tax classes where entity has to be added
    - type::String : Defines product&#39;s type
    - status::String : Defines product&#39;s status
    - condition::String : The human-readable label for the condition (e.g., \&quot;New\&quot;).
    - visible::String : Set visibility status
    - in_stock::Bool : Set stock status
    - avail::Bool : Defines category&#39;s visibility status
    - avail_from::String : Allows to schedule a time in the future that the item becomes available. The value should be greater than the current date and time.
    - product_class::String : A categorization for the product
    - brand_name::String : Retrieves brands specified by brand name
    - available_for_view::Bool : Specifies the set of visible/invisible products for users
    - stores_ids::String : Assign product to the stores that is specified by comma-separated stores&#39; id
    - store_id::String : Defines store id where the product should be found
    - lang_id::String : Language id
    - quantity::Float64 : Defines new product&#39;s quantity
    - reserve_quantity::Float64 : This parameter allows to reserve/unreserve product quantity.
    - manage_stock::Bool : Defines inventory tracking for product
    - backorder_status::String : Set backorder status
    - increase_quantity::Float64 : Defines the incremental changes in product quantity
    - reduce_quantity::Float64 : Defines the decrement changes in product quantity
    - low_stock_threshold::Float64 : Specify the quantity threshold below which the product is considered low in stock
    - warehouse_id::String : This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
    - weight::Float64 : Weight
    - weight_unit::String : Weight Unit
    - height::Float64 : Defines product&#39;s height
    - length::Float64 : Defines product&#39;s length
    - width::Float64 : Defines product&#39;s width
    - dimensions_unit::String : Weight Unit
    - is_virtual::Bool : Defines whether the product is virtual
    - is_free_shipping::Bool : Specifies product free shipping flag that has to be updated
    - gtin::String : Global Trade Item Number. An GTIN is an identifier for trade items.
    - upc::String : Universal Product Code. A UPC (UPC-A) is a commonly used identifer for many different products.
    - mpn::String : Manufacturer Part Number. A MPN is an identifier of a particular part design or material used.
    - ean::String : European Article Number. An EAN is a unique 8 or 13-digit identifier that many industries (such as book publishers) use to identify products.
    - isbn::String : International Standard Book Number. An ISBN is a unique identifier for books.
    - barcode::String : A barcode is a unique code composed of numbers used as a product identifier.
    - manufacturer::String : Defines product&#39;s manufacturer
    - manufacturer_id::String : Defines product&#39;s manufacturer by manufacturer_id
    - categories_ids::String : Defines product add that is specified by comma-separated categories id
    - related_products_ids::String : Defines product related products ids that has to be updated
    - up_sell_products_ids::String : Defines product up-sell products ids that has to be updated
    - cross_sell_products_ids::String : Defines product cross-sells products ids that has to be updated
    - meta_title::String : Defines unique meta title for each entity
    - meta_keywords::String : Defines unique meta keywords for each entity
    - meta_description::String : Defines unique meta description of a entity
    - seo_url::String : Defines unique URL for SEO
    - search_keywords::String : Defines unique search keywords
    - tags::String : Product tags
    - delivery_code::String : The delivery promise that applies to offer
    - package_details::ProductAddPackageDetails
    - country_of_origin::String : The country where the inventory item was made
    - harmonized_system_code::String : Harmonized System Code. An HSC is a 6-digit identifier that allows participating countries to classify traded goods on a common basis for customs purposes
    - shipping_template_id::Int64 : The numeric ID of the shipping template associated with the products in Etsy. You can find possible values in the \&quot;cart.info\&quot; API method response, in the field shipping_zones[]-&gt;id.
    - when_made::String : An enumerated string for the era in which the maker made the product.
    - is_supply::Bool : If true, it indicates the product as a supply, otherwise it indicates that it is a finished product.
    - downloadable::Bool : Defines whether the product is downloadable
    - materials::Vector{String} : A list of material strings for materials used in the product.
    - auto_renew::Bool : When true, automatically renews a listing upon its expiration.
    - on_sale::Bool : Set whether the product on sale
    - production_partner_ids::String : Defines product production partner ids that has to be updated
    - manufacturer_info::ProductAddManufacturerInfo
    - report_request_id::String : Report request id
    - disable_report_cache::Bool : Disable report cache for current request
    - reindex::Bool : Is reindex required
    - clear_cache::Bool : Is cache clear required
    - check_process_status::Bool : Disable or enable check process status. Please note that the response will be slower due to additional requests to the store.
    - specifics::Vector{ProductAddSpecificsInner} : An array of Item Specific Name/Value pairs used by the seller to provide descriptive details of an item in a structured manner.         The list of possible specifications can be obtained using the category.info method (additional_fields-&gt;product_specifics).         &lt;b&gt;The structure of the parameter is different for specific platforms.&lt;/b&gt;
    - shop_section_id::Int64 : Add Shop Section Id
    - personalization_details::ProductAddPersonalizationDetails
    - external_product_link::String : External product link
    - marketplace_item_properties::String : String containing the JSON representation of the supplied data
    - min_order_quantity::Float64 : The minimum quantity an order must contain, to be eligible to purchase this product.
"""
Base.@kwdef mutable struct ProductUpdate <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    model::Union{Nothing, String} = nothing
    sku::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    short_description::Union{Nothing, String} = nothing
    price::Union{Nothing, Float64} = nothing
    old_price::Union{Nothing, Float64} = nothing
    special_price::Union{Nothing, Float64} = nothing
    sprice_create::Union{Nothing, String} = nothing
    sprice_expire::Union{Nothing, String} = nothing
    cost_price::Union{Nothing, Float64} = nothing
    fixed_cost_shipping_price::Union{Nothing, Float64} = nothing
    retail_price::Union{Nothing, Float64} = nothing
    tier_prices::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddTierPricesInner} }
    reserve_price::Union{Nothing, Float64} = nothing
    buyitnow_price::Union{Nothing, Float64} = nothing
    taxable::Union{Nothing, Bool} = true
    tax_class_id::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    status::Union{Nothing, String} = nothing
    condition::Union{Nothing, String} = nothing
    visible::Union{Nothing, String} = nothing
    in_stock::Union{Nothing, Bool} = nothing
    avail::Union{Nothing, Bool} = true
    avail_from::Union{Nothing, String} = nothing
    product_class::Union{Nothing, String} = nothing
    brand_name::Union{Nothing, String} = nothing
    available_for_view::Union{Nothing, Bool} = nothing
    stores_ids::Union{Nothing, String} = nothing
    store_id::Union{Nothing, String} = nothing
    lang_id::Union{Nothing, String} = nothing
    quantity::Union{Nothing, Float64} = nothing
    reserve_quantity::Union{Nothing, Float64} = nothing
    manage_stock::Union{Nothing, Bool} = nothing
    backorder_status::Union{Nothing, String} = nothing
    increase_quantity::Union{Nothing, Float64} = nothing
    reduce_quantity::Union{Nothing, Float64} = nothing
    low_stock_threshold::Union{Nothing, Float64} = nothing
    warehouse_id::Union{Nothing, String} = nothing
    weight::Union{Nothing, Float64} = nothing
    weight_unit::Union{Nothing, String} = nothing
    height::Union{Nothing, Float64} = nothing
    length::Union{Nothing, Float64} = nothing
    width::Union{Nothing, Float64} = nothing
    dimensions_unit::Union{Nothing, String} = nothing
    is_virtual::Union{Nothing, Bool} = false
    is_free_shipping::Union{Nothing, Bool} = nothing
    gtin::Union{Nothing, String} = nothing
    upc::Union{Nothing, String} = nothing
    mpn::Union{Nothing, String} = nothing
    ean::Union{Nothing, String} = nothing
    isbn::Union{Nothing, String} = nothing
    barcode::Union{Nothing, String} = nothing
    manufacturer::Union{Nothing, String} = nothing
    manufacturer_id::Union{Nothing, String} = nothing
    categories_ids::Union{Nothing, String} = nothing
    related_products_ids::Union{Nothing, String} = nothing
    up_sell_products_ids::Union{Nothing, String} = nothing
    cross_sell_products_ids::Union{Nothing, String} = nothing
    meta_title::Union{Nothing, String} = nothing
    meta_keywords::Union{Nothing, String} = nothing
    meta_description::Union{Nothing, String} = nothing
    seo_url::Union{Nothing, String} = nothing
    search_keywords::Union{Nothing, String} = nothing
    tags::Union{Nothing, String} = nothing
    delivery_code::Union{Nothing, String} = nothing
    package_details = nothing # spec type: Union{ Nothing, ProductAddPackageDetails }
    country_of_origin::Union{Nothing, String} = nothing
    harmonized_system_code::Union{Nothing, String} = nothing
    shipping_template_id::Union{Nothing, Int64} = 0
    when_made::Union{Nothing, String} = "made_to_order"
    is_supply::Union{Nothing, Bool} = true
    downloadable::Union{Nothing, Bool} = false
    materials::Union{Nothing, Vector{String}} = nothing
    auto_renew::Union{Nothing, Bool} = false
    on_sale::Union{Nothing, Bool} = false
    production_partner_ids::Union{Nothing, String} = nothing
    manufacturer_info = nothing # spec type: Union{ Nothing, ProductAddManufacturerInfo }
    report_request_id::Union{Nothing, String} = nothing
    disable_report_cache::Union{Nothing, Bool} = false
    reindex::Union{Nothing, Bool} = true
    clear_cache::Union{Nothing, Bool} = true
    check_process_status::Union{Nothing, Bool} = false
    specifics::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddSpecificsInner} }
    shop_section_id::Union{Nothing, Int64} = nothing
    personalization_details = nothing # spec type: Union{ Nothing, ProductAddPersonalizationDetails }
    external_product_link::Union{Nothing, String} = nothing
    marketplace_item_properties::Union{Nothing, String} = nothing
    min_order_quantity::Union{Nothing, Float64} = nothing

    function ProductUpdate(id, model, sku, name, description, short_description, price, old_price, special_price, sprice_create, sprice_expire, cost_price, fixed_cost_shipping_price, retail_price, tier_prices, reserve_price, buyitnow_price, taxable, tax_class_id, type, status, condition, visible, in_stock, avail, avail_from, product_class, brand_name, available_for_view, stores_ids, store_id, lang_id, quantity, reserve_quantity, manage_stock, backorder_status, increase_quantity, reduce_quantity, low_stock_threshold, warehouse_id, weight, weight_unit, height, length, width, dimensions_unit, is_virtual, is_free_shipping, gtin, upc, mpn, ean, isbn, barcode, manufacturer, manufacturer_id, categories_ids, related_products_ids, up_sell_products_ids, cross_sell_products_ids, meta_title, meta_keywords, meta_description, seo_url, search_keywords, tags, delivery_code, package_details, country_of_origin, harmonized_system_code, shipping_template_id, when_made, is_supply, downloadable, materials, auto_renew, on_sale, production_partner_ids, manufacturer_info, report_request_id, disable_report_cache, reindex, clear_cache, check_process_status, specifics, shop_section_id, personalization_details, external_product_link, marketplace_item_properties, min_order_quantity, )
        OpenAPI.validate_property(ProductUpdate, Symbol("id"), id)
        OpenAPI.validate_property(ProductUpdate, Symbol("model"), model)
        OpenAPI.validate_property(ProductUpdate, Symbol("sku"), sku)
        OpenAPI.validate_property(ProductUpdate, Symbol("name"), name)
        OpenAPI.validate_property(ProductUpdate, Symbol("description"), description)
        OpenAPI.validate_property(ProductUpdate, Symbol("short_description"), short_description)
        OpenAPI.validate_property(ProductUpdate, Symbol("price"), price)
        OpenAPI.validate_property(ProductUpdate, Symbol("old_price"), old_price)
        OpenAPI.validate_property(ProductUpdate, Symbol("special_price"), special_price)
        OpenAPI.validate_property(ProductUpdate, Symbol("sprice_create"), sprice_create)
        OpenAPI.validate_property(ProductUpdate, Symbol("sprice_expire"), sprice_expire)
        OpenAPI.validate_property(ProductUpdate, Symbol("cost_price"), cost_price)
        OpenAPI.validate_property(ProductUpdate, Symbol("fixed_cost_shipping_price"), fixed_cost_shipping_price)
        OpenAPI.validate_property(ProductUpdate, Symbol("retail_price"), retail_price)
        OpenAPI.validate_property(ProductUpdate, Symbol("tier_prices"), tier_prices)
        OpenAPI.validate_property(ProductUpdate, Symbol("reserve_price"), reserve_price)
        OpenAPI.validate_property(ProductUpdate, Symbol("buyitnow_price"), buyitnow_price)
        OpenAPI.validate_property(ProductUpdate, Symbol("taxable"), taxable)
        OpenAPI.validate_property(ProductUpdate, Symbol("tax_class_id"), tax_class_id)
        OpenAPI.validate_property(ProductUpdate, Symbol("type"), type)
        OpenAPI.validate_property(ProductUpdate, Symbol("status"), status)
        OpenAPI.validate_property(ProductUpdate, Symbol("condition"), condition)
        OpenAPI.validate_property(ProductUpdate, Symbol("visible"), visible)
        OpenAPI.validate_property(ProductUpdate, Symbol("in_stock"), in_stock)
        OpenAPI.validate_property(ProductUpdate, Symbol("avail"), avail)
        OpenAPI.validate_property(ProductUpdate, Symbol("avail_from"), avail_from)
        OpenAPI.validate_property(ProductUpdate, Symbol("product_class"), product_class)
        OpenAPI.validate_property(ProductUpdate, Symbol("brand_name"), brand_name)
        OpenAPI.validate_property(ProductUpdate, Symbol("available_for_view"), available_for_view)
        OpenAPI.validate_property(ProductUpdate, Symbol("stores_ids"), stores_ids)
        OpenAPI.validate_property(ProductUpdate, Symbol("store_id"), store_id)
        OpenAPI.validate_property(ProductUpdate, Symbol("lang_id"), lang_id)
        OpenAPI.validate_property(ProductUpdate, Symbol("quantity"), quantity)
        OpenAPI.validate_property(ProductUpdate, Symbol("reserve_quantity"), reserve_quantity)
        OpenAPI.validate_property(ProductUpdate, Symbol("manage_stock"), manage_stock)
        OpenAPI.validate_property(ProductUpdate, Symbol("backorder_status"), backorder_status)
        OpenAPI.validate_property(ProductUpdate, Symbol("increase_quantity"), increase_quantity)
        OpenAPI.validate_property(ProductUpdate, Symbol("reduce_quantity"), reduce_quantity)
        OpenAPI.validate_property(ProductUpdate, Symbol("low_stock_threshold"), low_stock_threshold)
        OpenAPI.validate_property(ProductUpdate, Symbol("warehouse_id"), warehouse_id)
        OpenAPI.validate_property(ProductUpdate, Symbol("weight"), weight)
        OpenAPI.validate_property(ProductUpdate, Symbol("weight_unit"), weight_unit)
        OpenAPI.validate_property(ProductUpdate, Symbol("height"), height)
        OpenAPI.validate_property(ProductUpdate, Symbol("length"), length)
        OpenAPI.validate_property(ProductUpdate, Symbol("width"), width)
        OpenAPI.validate_property(ProductUpdate, Symbol("dimensions_unit"), dimensions_unit)
        OpenAPI.validate_property(ProductUpdate, Symbol("is_virtual"), is_virtual)
        OpenAPI.validate_property(ProductUpdate, Symbol("is_free_shipping"), is_free_shipping)
        OpenAPI.validate_property(ProductUpdate, Symbol("gtin"), gtin)
        OpenAPI.validate_property(ProductUpdate, Symbol("upc"), upc)
        OpenAPI.validate_property(ProductUpdate, Symbol("mpn"), mpn)
        OpenAPI.validate_property(ProductUpdate, Symbol("ean"), ean)
        OpenAPI.validate_property(ProductUpdate, Symbol("isbn"), isbn)
        OpenAPI.validate_property(ProductUpdate, Symbol("barcode"), barcode)
        OpenAPI.validate_property(ProductUpdate, Symbol("manufacturer"), manufacturer)
        OpenAPI.validate_property(ProductUpdate, Symbol("manufacturer_id"), manufacturer_id)
        OpenAPI.validate_property(ProductUpdate, Symbol("categories_ids"), categories_ids)
        OpenAPI.validate_property(ProductUpdate, Symbol("related_products_ids"), related_products_ids)
        OpenAPI.validate_property(ProductUpdate, Symbol("up_sell_products_ids"), up_sell_products_ids)
        OpenAPI.validate_property(ProductUpdate, Symbol("cross_sell_products_ids"), cross_sell_products_ids)
        OpenAPI.validate_property(ProductUpdate, Symbol("meta_title"), meta_title)
        OpenAPI.validate_property(ProductUpdate, Symbol("meta_keywords"), meta_keywords)
        OpenAPI.validate_property(ProductUpdate, Symbol("meta_description"), meta_description)
        OpenAPI.validate_property(ProductUpdate, Symbol("seo_url"), seo_url)
        OpenAPI.validate_property(ProductUpdate, Symbol("search_keywords"), search_keywords)
        OpenAPI.validate_property(ProductUpdate, Symbol("tags"), tags)
        OpenAPI.validate_property(ProductUpdate, Symbol("delivery_code"), delivery_code)
        OpenAPI.validate_property(ProductUpdate, Symbol("package_details"), package_details)
        OpenAPI.validate_property(ProductUpdate, Symbol("country_of_origin"), country_of_origin)
        OpenAPI.validate_property(ProductUpdate, Symbol("harmonized_system_code"), harmonized_system_code)
        OpenAPI.validate_property(ProductUpdate, Symbol("shipping_template_id"), shipping_template_id)
        OpenAPI.validate_property(ProductUpdate, Symbol("when_made"), when_made)
        OpenAPI.validate_property(ProductUpdate, Symbol("is_supply"), is_supply)
        OpenAPI.validate_property(ProductUpdate, Symbol("downloadable"), downloadable)
        OpenAPI.validate_property(ProductUpdate, Symbol("materials"), materials)
        OpenAPI.validate_property(ProductUpdate, Symbol("auto_renew"), auto_renew)
        OpenAPI.validate_property(ProductUpdate, Symbol("on_sale"), on_sale)
        OpenAPI.validate_property(ProductUpdate, Symbol("production_partner_ids"), production_partner_ids)
        OpenAPI.validate_property(ProductUpdate, Symbol("manufacturer_info"), manufacturer_info)
        OpenAPI.validate_property(ProductUpdate, Symbol("report_request_id"), report_request_id)
        OpenAPI.validate_property(ProductUpdate, Symbol("disable_report_cache"), disable_report_cache)
        OpenAPI.validate_property(ProductUpdate, Symbol("reindex"), reindex)
        OpenAPI.validate_property(ProductUpdate, Symbol("clear_cache"), clear_cache)
        OpenAPI.validate_property(ProductUpdate, Symbol("check_process_status"), check_process_status)
        OpenAPI.validate_property(ProductUpdate, Symbol("specifics"), specifics)
        OpenAPI.validate_property(ProductUpdate, Symbol("shop_section_id"), shop_section_id)
        OpenAPI.validate_property(ProductUpdate, Symbol("personalization_details"), personalization_details)
        OpenAPI.validate_property(ProductUpdate, Symbol("external_product_link"), external_product_link)
        OpenAPI.validate_property(ProductUpdate, Symbol("marketplace_item_properties"), marketplace_item_properties)
        OpenAPI.validate_property(ProductUpdate, Symbol("min_order_quantity"), min_order_quantity)
        return new(id, model, sku, name, description, short_description, price, old_price, special_price, sprice_create, sprice_expire, cost_price, fixed_cost_shipping_price, retail_price, tier_prices, reserve_price, buyitnow_price, taxable, tax_class_id, type, status, condition, visible, in_stock, avail, avail_from, product_class, brand_name, available_for_view, stores_ids, store_id, lang_id, quantity, reserve_quantity, manage_stock, backorder_status, increase_quantity, reduce_quantity, low_stock_threshold, warehouse_id, weight, weight_unit, height, length, width, dimensions_unit, is_virtual, is_free_shipping, gtin, upc, mpn, ean, isbn, barcode, manufacturer, manufacturer_id, categories_ids, related_products_ids, up_sell_products_ids, cross_sell_products_ids, meta_title, meta_keywords, meta_description, seo_url, search_keywords, tags, delivery_code, package_details, country_of_origin, harmonized_system_code, shipping_template_id, when_made, is_supply, downloadable, materials, auto_renew, on_sale, production_partner_ids, manufacturer_info, report_request_id, disable_report_cache, reindex, clear_cache, check_process_status, specifics, shop_section_id, personalization_details, external_product_link, marketplace_item_properties, min_order_quantity, )
    end
end # type ProductUpdate

const _property_types_ProductUpdate = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("model")=>"String", Symbol("sku")=>"String", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("short_description")=>"String", Symbol("price")=>"Float64", Symbol("old_price")=>"Float64", Symbol("special_price")=>"Float64", Symbol("sprice_create")=>"String", Symbol("sprice_expire")=>"String", Symbol("cost_price")=>"Float64", Symbol("fixed_cost_shipping_price")=>"Float64", Symbol("retail_price")=>"Float64", Symbol("tier_prices")=>"Vector{ProductAddTierPricesInner}", Symbol("reserve_price")=>"Float64", Symbol("buyitnow_price")=>"Float64", Symbol("taxable")=>"Bool", Symbol("tax_class_id")=>"String", Symbol("type")=>"String", Symbol("status")=>"String", Symbol("condition")=>"String", Symbol("visible")=>"String", Symbol("in_stock")=>"Bool", Symbol("avail")=>"Bool", Symbol("avail_from")=>"String", Symbol("product_class")=>"String", Symbol("brand_name")=>"String", Symbol("available_for_view")=>"Bool", Symbol("stores_ids")=>"String", Symbol("store_id")=>"String", Symbol("lang_id")=>"String", Symbol("quantity")=>"Float64", Symbol("reserve_quantity")=>"Float64", Symbol("manage_stock")=>"Bool", Symbol("backorder_status")=>"String", Symbol("increase_quantity")=>"Float64", Symbol("reduce_quantity")=>"Float64", Symbol("low_stock_threshold")=>"Float64", Symbol("warehouse_id")=>"String", Symbol("weight")=>"Float64", Symbol("weight_unit")=>"String", Symbol("height")=>"Float64", Symbol("length")=>"Float64", Symbol("width")=>"Float64", Symbol("dimensions_unit")=>"String", Symbol("is_virtual")=>"Bool", Symbol("is_free_shipping")=>"Bool", Symbol("gtin")=>"String", Symbol("upc")=>"String", Symbol("mpn")=>"String", Symbol("ean")=>"String", Symbol("isbn")=>"String", Symbol("barcode")=>"String", Symbol("manufacturer")=>"String", Symbol("manufacturer_id")=>"String", Symbol("categories_ids")=>"String", Symbol("related_products_ids")=>"String", Symbol("up_sell_products_ids")=>"String", Symbol("cross_sell_products_ids")=>"String", Symbol("meta_title")=>"String", Symbol("meta_keywords")=>"String", Symbol("meta_description")=>"String", Symbol("seo_url")=>"String", Symbol("search_keywords")=>"String", Symbol("tags")=>"String", Symbol("delivery_code")=>"String", Symbol("package_details")=>"ProductAddPackageDetails", Symbol("country_of_origin")=>"String", Symbol("harmonized_system_code")=>"String", Symbol("shipping_template_id")=>"Int64", Symbol("when_made")=>"String", Symbol("is_supply")=>"Bool", Symbol("downloadable")=>"Bool", Symbol("materials")=>"Vector{String}", Symbol("auto_renew")=>"Bool", Symbol("on_sale")=>"Bool", Symbol("production_partner_ids")=>"String", Symbol("manufacturer_info")=>"ProductAddManufacturerInfo", Symbol("report_request_id")=>"String", Symbol("disable_report_cache")=>"Bool", Symbol("reindex")=>"Bool", Symbol("clear_cache")=>"Bool", Symbol("check_process_status")=>"Bool", Symbol("specifics")=>"Vector{ProductAddSpecificsInner}", Symbol("shop_section_id")=>"Int64", Symbol("personalization_details")=>"ProductAddPersonalizationDetails", Symbol("external_product_link")=>"String", Symbol("marketplace_item_properties")=>"String", Symbol("min_order_quantity")=>"Float64", )
OpenAPI.property_type(::Type{ ProductUpdate }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductUpdate[name]))}

function check_required(o::ProductUpdate)
    true
end

function OpenAPI.validate_property(::Type{ ProductUpdate }, name::Symbol, val)


























































































end
