# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductAdd_specifics_inner_booking_details

    ProductAddSpecificsInnerBookingDetails(;
        location=nothing,
        type=nothing,
        session_duration=nothing,
        session_gap=nothing,
        sessions_count=nothing,
        time_strict_value=nothing,
        time_strict_type="days",
        availabilities=nothing,
        overrides=nothing,
    )

    - location::String
    - type::String
    - session_duration::Int64
    - session_gap::Int64
    - sessions_count::Int64
    - time_strict_value::Float64
    - time_strict_type::String
    - availabilities::Vector{ProductAddSpecificsInnerBookingDetailsAvailabilitiesInner}
    - overrides::Vector{ProductAddSpecificsInnerBookingDetailsOverridesInner}
"""
Base.@kwdef mutable struct ProductAddSpecificsInnerBookingDetails <: OpenAPI.APIModel
    location::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    session_duration::Union{Nothing, Int64} = nothing
    session_gap::Union{Nothing, Int64} = nothing
    sessions_count::Union{Nothing, Int64} = nothing
    time_strict_value::Union{Nothing, Float64} = nothing
    time_strict_type::Union{Nothing, String} = "days"
    availabilities::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddSpecificsInnerBookingDetailsAvailabilitiesInner} }
    overrides::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductAddSpecificsInnerBookingDetailsOverridesInner} }

    function ProductAddSpecificsInnerBookingDetails(location, type, session_duration, session_gap, sessions_count, time_strict_value, time_strict_type, availabilities, overrides, )
        OpenAPI.validate_property(ProductAddSpecificsInnerBookingDetails, Symbol("location"), location)
        OpenAPI.validate_property(ProductAddSpecificsInnerBookingDetails, Symbol("type"), type)
        OpenAPI.validate_property(ProductAddSpecificsInnerBookingDetails, Symbol("session_duration"), session_duration)
        OpenAPI.validate_property(ProductAddSpecificsInnerBookingDetails, Symbol("session_gap"), session_gap)
        OpenAPI.validate_property(ProductAddSpecificsInnerBookingDetails, Symbol("sessions_count"), sessions_count)
        OpenAPI.validate_property(ProductAddSpecificsInnerBookingDetails, Symbol("time_strict_value"), time_strict_value)
        OpenAPI.validate_property(ProductAddSpecificsInnerBookingDetails, Symbol("time_strict_type"), time_strict_type)
        OpenAPI.validate_property(ProductAddSpecificsInnerBookingDetails, Symbol("availabilities"), availabilities)
        OpenAPI.validate_property(ProductAddSpecificsInnerBookingDetails, Symbol("overrides"), overrides)
        return new(location, type, session_duration, session_gap, sessions_count, time_strict_value, time_strict_type, availabilities, overrides, )
    end
end # type ProductAddSpecificsInnerBookingDetails

const _property_types_ProductAddSpecificsInnerBookingDetails = Dict{Symbol,String}(Symbol("location")=>"String", Symbol("type")=>"String", Symbol("session_duration")=>"Int64", Symbol("session_gap")=>"Int64", Symbol("sessions_count")=>"Int64", Symbol("time_strict_value")=>"Float64", Symbol("time_strict_type")=>"String", Symbol("availabilities")=>"Vector{ProductAddSpecificsInnerBookingDetailsAvailabilitiesInner}", Symbol("overrides")=>"Vector{ProductAddSpecificsInnerBookingDetailsOverridesInner}", )
OpenAPI.property_type(::Type{ ProductAddSpecificsInnerBookingDetails }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductAddSpecificsInnerBookingDetails[name]))}

function check_required(o::ProductAddSpecificsInnerBookingDetails)
    o.location === nothing && (return false)
    o.type === nothing && (return false)
    o.sessions_count === nothing && (return false)
    o.time_strict_value === nothing && (return false)
    o.time_strict_type === nothing && (return false)
    o.availabilities === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ProductAddSpecificsInnerBookingDetails }, name::Symbol, val)

    if name === Symbol("location")
        OpenAPI.validate_param(name, "ProductAddSpecificsInnerBookingDetails", :minLength, val, 1)
    end

    if name === Symbol("type")
        OpenAPI.validate_param(name, "ProductAddSpecificsInnerBookingDetails", :enum, val, ["date", "date_time"])
    end






    if name === Symbol("time_strict_type")
        OpenAPI.validate_param(name, "ProductAddSpecificsInnerBookingDetails", :enum, val, ["days", "hours", "minutes"])
    end


    if name === Symbol("availabilities")
        OpenAPI.validate_param(name, "ProductAddSpecificsInnerBookingDetails", :minItems, val, 1)
    end

    if name === Symbol("overrides")
        OpenAPI.validate_param(name, "ProductAddSpecificsInnerBookingDetails", :minItems, val, 1)
    end
end
