# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductAdd_manufacturer_info
Manufacturer information.

    ProductAddManufacturerInfo(;
        name=nothing,
        address=nothing,
        phone=nothing,
        email=nothing,
    )

    - name::String : Defines manufacturer&#x60;s name
    - address::String : Defines manufacturer&#x60;s address
    - phone::String : Defines manufacturer&#x60;s phone
    - email::String : Defines manufacturer&#x60;s email
"""
Base.@kwdef mutable struct ProductAddManufacturerInfo <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    address::Union{Nothing, String} = nothing
    phone::Union{Nothing, String} = nothing
    email::Union{Nothing, String} = nothing

    function ProductAddManufacturerInfo(name, address, phone, email, )
        OpenAPI.validate_property(ProductAddManufacturerInfo, Symbol("name"), name)
        OpenAPI.validate_property(ProductAddManufacturerInfo, Symbol("address"), address)
        OpenAPI.validate_property(ProductAddManufacturerInfo, Symbol("phone"), phone)
        OpenAPI.validate_property(ProductAddManufacturerInfo, Symbol("email"), email)
        return new(name, address, phone, email, )
    end
end # type ProductAddManufacturerInfo

const _property_types_ProductAddManufacturerInfo = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("address")=>"String", Symbol("phone")=>"String", Symbol("email")=>"String", )
OpenAPI.property_type(::Type{ ProductAddManufacturerInfo }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductAddManufacturerInfo[name]))}

function check_required(o::ProductAddManufacturerInfo)
    true
end

function OpenAPI.validate_property(::Type{ ProductAddManufacturerInfo }, name::Symbol, val)

    if name === Symbol("name")
        OpenAPI.validate_param(name, "ProductAddManufacturerInfo", :minLength, val, 1)
    end

    if name === Symbol("address")
        OpenAPI.validate_param(name, "ProductAddManufacturerInfo", :minLength, val, 1)
    end

    if name === Symbol("phone")
        OpenAPI.validate_param(name, "ProductAddManufacturerInfo", :minLength, val, 1)
    end

    if name === Symbol("email")
        OpenAPI.validate_param(name, "ProductAddManufacturerInfo", :minLength, val, 1)
    end
end
