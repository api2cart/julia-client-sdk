# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""OrderPreestimateShippingList

    OrderPreestimateShippingList(;
        warehouse_id=nothing,
        customer_id=nothing,
        customer_email=nothing,
        store_id=nothing,
        shipp_address_1=nothing,
        shipp_city=nothing,
        shipp_postcode=nothing,
        shipp_state=nothing,
        shipp_country=nothing,
        params="force_all",
        exclude=nothing,
        order_item=nothing,
    )

    - warehouse_id::String : This parameter is used for selecting a warehouse where you need to set/modify a product quantity.
    - customer_id::String : Retrieves orders specified by customer id
    - customer_email::String : Retrieves orders specified by customer email
    - store_id::String : Store Id
    - shipp_address_1::String : Specifies first shipping address
    - shipp_city::String : Specifies shipping city
    - shipp_postcode::String : Specifies shipping postcode
    - shipp_state::String : Specifies shipping state code
    - shipp_country::String : Specifies shipping country code
    - params::String : Set this parameter in order to choose which entity fields you want to retrieve
    - exclude::String : Set this parameter in order to choose which entity fields you want to ignore. Works only if parameter &#x60;params&#x60; equal force_all
    - order_item::Vector{OrderPreestimateShippingListOrderItemInner}
"""
Base.@kwdef mutable struct OrderPreestimateShippingList <: OpenAPI.APIModel
    warehouse_id::Union{Nothing, String} = nothing
    customer_id::Union{Nothing, String} = nothing
    customer_email::Union{Nothing, String} = nothing
    store_id::Union{Nothing, String} = nothing
    shipp_address_1::Union{Nothing, String} = nothing
    shipp_city::Union{Nothing, String} = nothing
    shipp_postcode::Union{Nothing, String} = nothing
    shipp_state::Union{Nothing, String} = nothing
    shipp_country::Union{Nothing, String} = nothing
    params::Union{Nothing, String} = "force_all"
    exclude::Union{Nothing, String} = nothing
    order_item::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{OrderPreestimateShippingListOrderItemInner} }

    function OrderPreestimateShippingList(warehouse_id, customer_id, customer_email, store_id, shipp_address_1, shipp_city, shipp_postcode, shipp_state, shipp_country, params, exclude, order_item, )
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("warehouse_id"), warehouse_id)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("customer_id"), customer_id)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("customer_email"), customer_email)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("store_id"), store_id)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("shipp_address_1"), shipp_address_1)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("shipp_city"), shipp_city)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("shipp_postcode"), shipp_postcode)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("shipp_state"), shipp_state)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("shipp_country"), shipp_country)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("params"), params)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("exclude"), exclude)
        OpenAPI.validate_property(OrderPreestimateShippingList, Symbol("order_item"), order_item)
        return new(warehouse_id, customer_id, customer_email, store_id, shipp_address_1, shipp_city, shipp_postcode, shipp_state, shipp_country, params, exclude, order_item, )
    end
end # type OrderPreestimateShippingList

const _property_types_OrderPreestimateShippingList = Dict{Symbol,String}(Symbol("warehouse_id")=>"String", Symbol("customer_id")=>"String", Symbol("customer_email")=>"String", Symbol("store_id")=>"String", Symbol("shipp_address_1")=>"String", Symbol("shipp_city")=>"String", Symbol("shipp_postcode")=>"String", Symbol("shipp_state")=>"String", Symbol("shipp_country")=>"String", Symbol("params")=>"String", Symbol("exclude")=>"String", Symbol("order_item")=>"Vector{OrderPreestimateShippingListOrderItemInner}", )
OpenAPI.property_type(::Type{ OrderPreestimateShippingList }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_OrderPreestimateShippingList[name]))}

function check_required(o::OrderPreestimateShippingList)
    o.shipp_country === nothing && (return false)
    o.order_item === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ OrderPreestimateShippingList }, name::Symbol, val)












end
