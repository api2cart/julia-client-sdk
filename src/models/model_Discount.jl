# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Discount

    Discount(;
        id=nothing,
        name=nothing,
        modifier_type=nothing,
        value=nothing,
        from_time=nothing,
        to_time=nothing,
        customer_group_ids=nothing,
        sort_order=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - name::String
    - modifier_type::String
    - value::Float64
    - from_time::String
    - to_time::String
    - customer_group_ids::String
    - sort_order::Int64
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct Discount <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    modifier_type::Union{Nothing, String} = nothing
    value::Union{Nothing, Float64} = nothing
    from_time::Union{Nothing, String} = nothing
    to_time::Union{Nothing, String} = nothing
    customer_group_ids::Union{Nothing, String} = nothing
    sort_order::Union{Nothing, Int64} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function Discount(id, name, modifier_type, value, from_time, to_time, customer_group_ids, sort_order, additional_fields, custom_fields, )
        OpenAPI.validate_property(Discount, Symbol("id"), id)
        OpenAPI.validate_property(Discount, Symbol("name"), name)
        OpenAPI.validate_property(Discount, Symbol("modifier_type"), modifier_type)
        OpenAPI.validate_property(Discount, Symbol("value"), value)
        OpenAPI.validate_property(Discount, Symbol("from_time"), from_time)
        OpenAPI.validate_property(Discount, Symbol("to_time"), to_time)
        OpenAPI.validate_property(Discount, Symbol("customer_group_ids"), customer_group_ids)
        OpenAPI.validate_property(Discount, Symbol("sort_order"), sort_order)
        OpenAPI.validate_property(Discount, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(Discount, Symbol("custom_fields"), custom_fields)
        return new(id, name, modifier_type, value, from_time, to_time, customer_group_ids, sort_order, additional_fields, custom_fields, )
    end
end # type Discount

const _property_types_Discount = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("modifier_type")=>"String", Symbol("value")=>"Float64", Symbol("from_time")=>"String", Symbol("to_time")=>"String", Symbol("customer_group_ids")=>"String", Symbol("sort_order")=>"Int64", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ Discount }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Discount[name]))}

function check_required(o::Discount)
    true
end

function OpenAPI.validate_property(::Type{ Discount }, name::Symbol, val)










end
