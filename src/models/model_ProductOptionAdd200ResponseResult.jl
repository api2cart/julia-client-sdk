# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductOptionAdd_200_response_result

    ProductOptionAdd200ResponseResult(;
        option_id=nothing,
        product_option_id=nothing,
        product_value_ids=nothing,
    )

    - option_id::String
    - product_option_id::String
    - product_value_ids::String
"""
Base.@kwdef mutable struct ProductOptionAdd200ResponseResult <: OpenAPI.APIModel
    option_id::Union{Nothing, String} = nothing
    product_option_id::Union{Nothing, String} = nothing
    product_value_ids::Union{Nothing, String} = nothing

    function ProductOptionAdd200ResponseResult(option_id, product_option_id, product_value_ids, )
        OpenAPI.validate_property(ProductOptionAdd200ResponseResult, Symbol("option_id"), option_id)
        OpenAPI.validate_property(ProductOptionAdd200ResponseResult, Symbol("product_option_id"), product_option_id)
        OpenAPI.validate_property(ProductOptionAdd200ResponseResult, Symbol("product_value_ids"), product_value_ids)
        return new(option_id, product_option_id, product_value_ids, )
    end
end # type ProductOptionAdd200ResponseResult

const _property_types_ProductOptionAdd200ResponseResult = Dict{Symbol,String}(Symbol("option_id")=>"String", Symbol("product_option_id")=>"String", Symbol("product_value_ids")=>"String", )
OpenAPI.property_type(::Type{ ProductOptionAdd200ResponseResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductOptionAdd200ResponseResult[name]))}

function check_required(o::ProductOptionAdd200ResponseResult)
    true
end

function OpenAPI.validate_property(::Type{ ProductOptionAdd200ResponseResult }, name::Symbol, val)



end
