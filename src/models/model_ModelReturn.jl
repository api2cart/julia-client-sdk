# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Return

    ModelReturn(;
        id=nothing,
        name=nothing,
        order_id=nothing,
        customer_id=nothing,
        store_id=nothing,
        created_at=nothing,
        modified_at=nothing,
        status=nothing,
        order_products=nothing,
        comment=nothing,
        staff_note=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - name::String
    - order_id::String
    - customer_id::String
    - store_id::String
    - created_at::String
    - modified_at::String
    - status::ReturnStatus
    - order_products::Vector{ReturnOrderProduct}
    - comment::String
    - staff_note::String
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct ModelReturn <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    order_id::Union{Nothing, String} = nothing
    customer_id::Union{Nothing, String} = nothing
    store_id::Union{Nothing, String} = nothing
    created_at::Union{Nothing, String} = nothing
    modified_at::Union{Nothing, String} = nothing
    status = nothing # spec type: Union{ Nothing, ReturnStatus }
    order_products::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ReturnOrderProduct} }
    comment::Union{Nothing, String} = nothing
    staff_note::Union{Nothing, String} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function ModelReturn(id, name, order_id, customer_id, store_id, created_at, modified_at, status, order_products, comment, staff_note, additional_fields, custom_fields, )
        OpenAPI.validate_property(ModelReturn, Symbol("id"), id)
        OpenAPI.validate_property(ModelReturn, Symbol("name"), name)
        OpenAPI.validate_property(ModelReturn, Symbol("order_id"), order_id)
        OpenAPI.validate_property(ModelReturn, Symbol("customer_id"), customer_id)
        OpenAPI.validate_property(ModelReturn, Symbol("store_id"), store_id)
        OpenAPI.validate_property(ModelReturn, Symbol("created_at"), created_at)
        OpenAPI.validate_property(ModelReturn, Symbol("modified_at"), modified_at)
        OpenAPI.validate_property(ModelReturn, Symbol("status"), status)
        OpenAPI.validate_property(ModelReturn, Symbol("order_products"), order_products)
        OpenAPI.validate_property(ModelReturn, Symbol("comment"), comment)
        OpenAPI.validate_property(ModelReturn, Symbol("staff_note"), staff_note)
        OpenAPI.validate_property(ModelReturn, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(ModelReturn, Symbol("custom_fields"), custom_fields)
        return new(id, name, order_id, customer_id, store_id, created_at, modified_at, status, order_products, comment, staff_note, additional_fields, custom_fields, )
    end
end # type ModelReturn

const _property_types_ModelReturn = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("name")=>"String", Symbol("order_id")=>"String", Symbol("customer_id")=>"String", Symbol("store_id")=>"String", Symbol("created_at")=>"String", Symbol("modified_at")=>"String", Symbol("status")=>"ReturnStatus", Symbol("order_products")=>"Vector{ReturnOrderProduct}", Symbol("comment")=>"String", Symbol("staff_note")=>"String", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ ModelReturn }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ModelReturn[name]))}

function check_required(o::ModelReturn)
    true
end

function OpenAPI.validate_property(::Type{ ModelReturn }, name::Symbol, val)













end
