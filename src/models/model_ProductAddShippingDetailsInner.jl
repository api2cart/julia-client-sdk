# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductAdd_shipping_details_inner

    ProductAddShippingDetailsInner(;
        shipping_type=nothing,
        shipping_service=nothing,
        shipping_cost=nothing,
    )

    - shipping_type::String
    - shipping_service::String
    - shipping_cost::Float64
"""
Base.@kwdef mutable struct ProductAddShippingDetailsInner <: OpenAPI.APIModel
    shipping_type::Union{Nothing, String} = nothing
    shipping_service::Union{Nothing, String} = nothing
    shipping_cost::Union{Nothing, Float64} = nothing

    function ProductAddShippingDetailsInner(shipping_type, shipping_service, shipping_cost, )
        OpenAPI.validate_property(ProductAddShippingDetailsInner, Symbol("shipping_type"), shipping_type)
        OpenAPI.validate_property(ProductAddShippingDetailsInner, Symbol("shipping_service"), shipping_service)
        OpenAPI.validate_property(ProductAddShippingDetailsInner, Symbol("shipping_cost"), shipping_cost)
        return new(shipping_type, shipping_service, shipping_cost, )
    end
end # type ProductAddShippingDetailsInner

const _property_types_ProductAddShippingDetailsInner = Dict{Symbol,String}(Symbol("shipping_type")=>"String", Symbol("shipping_service")=>"String", Symbol("shipping_cost")=>"Float64", )
OpenAPI.property_type(::Type{ ProductAddShippingDetailsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductAddShippingDetailsInner[name]))}

function check_required(o::ProductAddShippingDetailsInner)
    true
end

function OpenAPI.validate_property(::Type{ ProductAddShippingDetailsInner }, name::Symbol, val)



end
