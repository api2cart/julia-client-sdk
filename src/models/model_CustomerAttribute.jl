# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Customer_Attribute

    CustomerAttribute(;
        attribute_id=nothing,
        code=nothing,
        name=nothing,
        type=nothing,
        values=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - attribute_id::String
    - code::String
    - name::String
    - type::String
    - values::Vector{CustomerAttributeValue}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct CustomerAttribute <: OpenAPI.APIModel
    attribute_id::Union{Nothing, String} = nothing
    code::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    values::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CustomerAttributeValue} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function CustomerAttribute(attribute_id, code, name, type, values, additional_fields, custom_fields, )
        OpenAPI.validate_property(CustomerAttribute, Symbol("attribute_id"), attribute_id)
        OpenAPI.validate_property(CustomerAttribute, Symbol("code"), code)
        OpenAPI.validate_property(CustomerAttribute, Symbol("name"), name)
        OpenAPI.validate_property(CustomerAttribute, Symbol("type"), type)
        OpenAPI.validate_property(CustomerAttribute, Symbol("values"), values)
        OpenAPI.validate_property(CustomerAttribute, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(CustomerAttribute, Symbol("custom_fields"), custom_fields)
        return new(attribute_id, code, name, type, values, additional_fields, custom_fields, )
    end
end # type CustomerAttribute

const _property_types_CustomerAttribute = Dict{Symbol,String}(Symbol("attribute_id")=>"String", Symbol("code")=>"String", Symbol("name")=>"String", Symbol("type")=>"String", Symbol("values")=>"Vector{CustomerAttributeValue}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ CustomerAttribute }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CustomerAttribute[name]))}

function check_required(o::CustomerAttribute)
    true
end

function OpenAPI.validate_property(::Type{ CustomerAttribute }, name::Symbol, val)







end
