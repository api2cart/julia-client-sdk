# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CartConfig_200_response_result

    CartConfig200ResponseResult(;
        store_name=nothing,
        store_url=nothing,
        db_prefix=nothing,
    )

    - store_name::String
    - store_url::String
    - db_prefix::String
"""
Base.@kwdef mutable struct CartConfig200ResponseResult <: OpenAPI.APIModel
    store_name::Union{Nothing, String} = nothing
    store_url::Union{Nothing, String} = nothing
    db_prefix::Union{Nothing, String} = nothing

    function CartConfig200ResponseResult(store_name, store_url, db_prefix, )
        OpenAPI.validate_property(CartConfig200ResponseResult, Symbol("store_name"), store_name)
        OpenAPI.validate_property(CartConfig200ResponseResult, Symbol("store_url"), store_url)
        OpenAPI.validate_property(CartConfig200ResponseResult, Symbol("db_prefix"), db_prefix)
        return new(store_name, store_url, db_prefix, )
    end
end # type CartConfig200ResponseResult

const _property_types_CartConfig200ResponseResult = Dict{Symbol,String}(Symbol("store_name")=>"String", Symbol("store_url")=>"String", Symbol("db_prefix")=>"String", )
OpenAPI.property_type(::Type{ CartConfig200ResponseResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CartConfig200ResponseResult[name]))}

function check_required(o::CartConfig200ResponseResult)
    true
end

function OpenAPI.validate_property(::Type{ CartConfig200ResponseResult }, name::Symbol, val)



end
