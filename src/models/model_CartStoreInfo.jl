# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Cart_StoreInfo

    CartStoreInfo(;
        store_id=nothing,
        name=nothing,
        language=nothing,
        store_languages=nothing,
        currency=nothing,
        store_currencies=nothing,
        timezone=nothing,
        country=nothing,
        root_category_id=nothing,
        multi_store_url=nothing,
        active=nothing,
        weight_unit=nothing,
        dimension_unit=nothing,
        prices_include_tax=nothing,
        carrier_info=nothing,
        store_owner_info=nothing,
        default_warehouse_id=nothing,
        channels=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - store_id::String
    - name::String
    - language::String
    - store_languages::Vector{Language}
    - currency::Currency
    - store_currencies::Vector{Currency}
    - timezone::String
    - country::String
    - root_category_id::String
    - multi_store_url::String
    - active::Bool
    - weight_unit::String
    - dimension_unit::String
    - prices_include_tax::Bool
    - carrier_info::Vector{Carrier}
    - store_owner_info::Info
    - default_warehouse_id::String
    - channels::Vector{CartChannel}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct CartStoreInfo <: OpenAPI.APIModel
    store_id::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    language::Union{Nothing, String} = nothing
    store_languages::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Language} }
    currency = nothing # spec type: Union{ Nothing, Currency }
    store_currencies::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Currency} }
    timezone::Union{Nothing, String} = nothing
    country::Union{Nothing, String} = nothing
    root_category_id::Union{Nothing, String} = nothing
    multi_store_url::Union{Nothing, String} = nothing
    active::Union{Nothing, Bool} = nothing
    weight_unit::Union{Nothing, String} = nothing
    dimension_unit::Union{Nothing, String} = nothing
    prices_include_tax::Union{Nothing, Bool} = nothing
    carrier_info::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Carrier} }
    store_owner_info = nothing # spec type: Union{ Nothing, Info }
    default_warehouse_id::Union{Nothing, String} = nothing
    channels::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CartChannel} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function CartStoreInfo(store_id, name, language, store_languages, currency, store_currencies, timezone, country, root_category_id, multi_store_url, active, weight_unit, dimension_unit, prices_include_tax, carrier_info, store_owner_info, default_warehouse_id, channels, additional_fields, custom_fields, )
        OpenAPI.validate_property(CartStoreInfo, Symbol("store_id"), store_id)
        OpenAPI.validate_property(CartStoreInfo, Symbol("name"), name)
        OpenAPI.validate_property(CartStoreInfo, Symbol("language"), language)
        OpenAPI.validate_property(CartStoreInfo, Symbol("store_languages"), store_languages)
        OpenAPI.validate_property(CartStoreInfo, Symbol("currency"), currency)
        OpenAPI.validate_property(CartStoreInfo, Symbol("store_currencies"), store_currencies)
        OpenAPI.validate_property(CartStoreInfo, Symbol("timezone"), timezone)
        OpenAPI.validate_property(CartStoreInfo, Symbol("country"), country)
        OpenAPI.validate_property(CartStoreInfo, Symbol("root_category_id"), root_category_id)
        OpenAPI.validate_property(CartStoreInfo, Symbol("multi_store_url"), multi_store_url)
        OpenAPI.validate_property(CartStoreInfo, Symbol("active"), active)
        OpenAPI.validate_property(CartStoreInfo, Symbol("weight_unit"), weight_unit)
        OpenAPI.validate_property(CartStoreInfo, Symbol("dimension_unit"), dimension_unit)
        OpenAPI.validate_property(CartStoreInfo, Symbol("prices_include_tax"), prices_include_tax)
        OpenAPI.validate_property(CartStoreInfo, Symbol("carrier_info"), carrier_info)
        OpenAPI.validate_property(CartStoreInfo, Symbol("store_owner_info"), store_owner_info)
        OpenAPI.validate_property(CartStoreInfo, Symbol("default_warehouse_id"), default_warehouse_id)
        OpenAPI.validate_property(CartStoreInfo, Symbol("channels"), channels)
        OpenAPI.validate_property(CartStoreInfo, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(CartStoreInfo, Symbol("custom_fields"), custom_fields)
        return new(store_id, name, language, store_languages, currency, store_currencies, timezone, country, root_category_id, multi_store_url, active, weight_unit, dimension_unit, prices_include_tax, carrier_info, store_owner_info, default_warehouse_id, channels, additional_fields, custom_fields, )
    end
end # type CartStoreInfo

const _property_types_CartStoreInfo = Dict{Symbol,String}(Symbol("store_id")=>"String", Symbol("name")=>"String", Symbol("language")=>"String", Symbol("store_languages")=>"Vector{Language}", Symbol("currency")=>"Currency", Symbol("store_currencies")=>"Vector{Currency}", Symbol("timezone")=>"String", Symbol("country")=>"String", Symbol("root_category_id")=>"String", Symbol("multi_store_url")=>"String", Symbol("active")=>"Bool", Symbol("weight_unit")=>"String", Symbol("dimension_unit")=>"String", Symbol("prices_include_tax")=>"Bool", Symbol("carrier_info")=>"Vector{Carrier}", Symbol("store_owner_info")=>"Info", Symbol("default_warehouse_id")=>"String", Symbol("channels")=>"Vector{CartChannel}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ CartStoreInfo }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CartStoreInfo[name]))}

function check_required(o::CartStoreInfo)
    true
end

function OpenAPI.validate_property(::Type{ CartStoreInfo }, name::Symbol, val)




















end
