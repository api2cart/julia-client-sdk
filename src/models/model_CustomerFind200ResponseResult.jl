# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CustomerFind_200_response_result

    CustomerFind200ResponseResult(;
        id=nothing,
        email=nothing,
        first_name=nothing,
        last_name=nothing,
    )

    - id::String
    - email::String
    - first_name::String
    - last_name::String
"""
Base.@kwdef mutable struct CustomerFind200ResponseResult <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    email::Union{Nothing, String} = nothing
    first_name::Union{Nothing, String} = nothing
    last_name::Union{Nothing, String} = nothing

    function CustomerFind200ResponseResult(id, email, first_name, last_name, )
        OpenAPI.validate_property(CustomerFind200ResponseResult, Symbol("id"), id)
        OpenAPI.validate_property(CustomerFind200ResponseResult, Symbol("email"), email)
        OpenAPI.validate_property(CustomerFind200ResponseResult, Symbol("first_name"), first_name)
        OpenAPI.validate_property(CustomerFind200ResponseResult, Symbol("last_name"), last_name)
        return new(id, email, first_name, last_name, )
    end
end # type CustomerFind200ResponseResult

const _property_types_CustomerFind200ResponseResult = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("email")=>"String", Symbol("first_name")=>"String", Symbol("last_name")=>"String", )
OpenAPI.property_type(::Type{ CustomerFind200ResponseResult }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CustomerFind200ResponseResult[name]))}

function check_required(o::CustomerFind200ResponseResult)
    true
end

function OpenAPI.validate_property(::Type{ CustomerFind200ResponseResult }, name::Symbol, val)




end
