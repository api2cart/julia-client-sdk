# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""CatalogPriceRule

    CatalogPriceRule(;
        id=nothing,
        gid=nothing,
        type=nothing,
        name=nothing,
        description=nothing,
        short_description=nothing,
        avail=nothing,
        actions=nothing,
        created_time=nothing,
        date_start=nothing,
        date_end=nothing,
        usage_count=nothing,
        conditions=nothing,
        uses_per_order_limit=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - gid::String
    - type::String
    - name::String
    - description::String
    - short_description::String
    - avail::Bool
    - actions::Vector{CatalogPriceRuleAction}
    - created_time::A2CDateTime
    - date_start::A2CDateTime
    - date_end::A2CDateTime
    - usage_count::Float64
    - conditions::Vector{CouponCondition}
    - uses_per_order_limit::Int64
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct CatalogPriceRule <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    gid::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    name::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    short_description::Union{Nothing, String} = nothing
    avail::Union{Nothing, Bool} = nothing
    actions::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CatalogPriceRuleAction} }
    created_time = nothing # spec type: Union{ Nothing, A2CDateTime }
    date_start = nothing # spec type: Union{ Nothing, A2CDateTime }
    date_end = nothing # spec type: Union{ Nothing, A2CDateTime }
    usage_count::Union{Nothing, Float64} = nothing
    conditions::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{CouponCondition} }
    uses_per_order_limit::Union{Nothing, Int64} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function CatalogPriceRule(id, gid, type, name, description, short_description, avail, actions, created_time, date_start, date_end, usage_count, conditions, uses_per_order_limit, additional_fields, custom_fields, )
        OpenAPI.validate_property(CatalogPriceRule, Symbol("id"), id)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("gid"), gid)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("type"), type)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("name"), name)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("description"), description)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("short_description"), short_description)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("avail"), avail)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("actions"), actions)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("created_time"), created_time)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("date_start"), date_start)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("date_end"), date_end)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("usage_count"), usage_count)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("conditions"), conditions)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("uses_per_order_limit"), uses_per_order_limit)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(CatalogPriceRule, Symbol("custom_fields"), custom_fields)
        return new(id, gid, type, name, description, short_description, avail, actions, created_time, date_start, date_end, usage_count, conditions, uses_per_order_limit, additional_fields, custom_fields, )
    end
end # type CatalogPriceRule

const _property_types_CatalogPriceRule = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("gid")=>"String", Symbol("type")=>"String", Symbol("name")=>"String", Symbol("description")=>"String", Symbol("short_description")=>"String", Symbol("avail")=>"Bool", Symbol("actions")=>"Vector{CatalogPriceRuleAction}", Symbol("created_time")=>"A2CDateTime", Symbol("date_start")=>"A2CDateTime", Symbol("date_end")=>"A2CDateTime", Symbol("usage_count")=>"Float64", Symbol("conditions")=>"Vector{CouponCondition}", Symbol("uses_per_order_limit")=>"Int64", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ CatalogPriceRule }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_CatalogPriceRule[name]))}

function check_required(o::CatalogPriceRule)
    true
end

function OpenAPI.validate_property(::Type{ CatalogPriceRule }, name::Symbol, val)
















end
