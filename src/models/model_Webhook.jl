# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Webhook

    Webhook(;
        id=nothing,
        label=nothing,
        store_id=nothing,
        lang_id=nothing,
        active=nothing,
        callback=nothing,
        fields=nothing,
        created_at=nothing,
        updated_at=nothing,
        entity=nothing,
        action=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::Int64
    - label::String
    - store_id::String
    - lang_id::String
    - active::Bool
    - callback::String
    - fields::String
    - created_at::String
    - updated_at::String
    - entity::String
    - action::String
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct Webhook <: OpenAPI.APIModel
    id::Union{Nothing, Int64} = nothing
    label::Union{Nothing, String} = nothing
    store_id::Union{Nothing, String} = nothing
    lang_id::Union{Nothing, String} = nothing
    active::Union{Nothing, Bool} = nothing
    callback::Union{Nothing, String} = nothing
    fields::Union{Nothing, String} = nothing
    created_at::Union{Nothing, String} = nothing
    updated_at::Union{Nothing, String} = nothing
    entity::Union{Nothing, String} = nothing
    action::Union{Nothing, String} = nothing
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function Webhook(id, label, store_id, lang_id, active, callback, fields, created_at, updated_at, entity, action, additional_fields, custom_fields, )
        OpenAPI.validate_property(Webhook, Symbol("id"), id)
        OpenAPI.validate_property(Webhook, Symbol("label"), label)
        OpenAPI.validate_property(Webhook, Symbol("store_id"), store_id)
        OpenAPI.validate_property(Webhook, Symbol("lang_id"), lang_id)
        OpenAPI.validate_property(Webhook, Symbol("active"), active)
        OpenAPI.validate_property(Webhook, Symbol("callback"), callback)
        OpenAPI.validate_property(Webhook, Symbol("fields"), fields)
        OpenAPI.validate_property(Webhook, Symbol("created_at"), created_at)
        OpenAPI.validate_property(Webhook, Symbol("updated_at"), updated_at)
        OpenAPI.validate_property(Webhook, Symbol("entity"), entity)
        OpenAPI.validate_property(Webhook, Symbol("action"), action)
        OpenAPI.validate_property(Webhook, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(Webhook, Symbol("custom_fields"), custom_fields)
        return new(id, label, store_id, lang_id, active, callback, fields, created_at, updated_at, entity, action, additional_fields, custom_fields, )
    end
end # type Webhook

const _property_types_Webhook = Dict{Symbol,String}(Symbol("id")=>"Int64", Symbol("label")=>"String", Symbol("store_id")=>"String", Symbol("lang_id")=>"String", Symbol("active")=>"Bool", Symbol("callback")=>"String", Symbol("fields")=>"String", Symbol("created_at")=>"String", Symbol("updated_at")=>"String", Symbol("entity")=>"String", Symbol("action")=>"String", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ Webhook }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Webhook[name]))}

function check_required(o::Webhook)
    true
end

function OpenAPI.validate_property(::Type{ Webhook }, name::Symbol, val)













end
