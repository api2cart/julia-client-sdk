# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductOptionAdd

    ProductOptionAdd(;
        name=nothing,
        type=nothing,
        product_id=nothing,
        default_option_value=nothing,
        option_values=nothing,
        description=nothing,
        avail=true,
        sort_order=0,
        required=false,
        values=nothing,
        clear_cache=true,
    )

    - name::String : Defines option&#39;s name
    - type::String : Defines option&#39;s type that has to be added
    - product_id::String : Defines product id where the option should be added
    - default_option_value::String : Defines default option value that has to be added
    - option_values::String : Defines option values that has to be added
    - description::String : Defines option&#39;s description
    - avail::Bool : Defines whether the option is available
    - sort_order::Int64 : Sort number in the list
    - required::Bool : Defines if the option is required
    - values::Vector{ProductOptionAddValuesInner} : An array of option values.&lt;/b&gt;
    - clear_cache::Bool : Is cache clear required
"""
Base.@kwdef mutable struct ProductOptionAdd <: OpenAPI.APIModel
    name::Union{Nothing, String} = nothing
    type::Union{Nothing, String} = nothing
    product_id::Union{Nothing, String} = nothing
    default_option_value::Union{Nothing, String} = nothing
    option_values::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    avail::Union{Nothing, Bool} = true
    sort_order::Union{Nothing, Int64} = 0
    required::Union{Nothing, Bool} = false
    values::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{ProductOptionAddValuesInner} }
    clear_cache::Union{Nothing, Bool} = true

    function ProductOptionAdd(name, type, product_id, default_option_value, option_values, description, avail, sort_order, required, values, clear_cache, )
        OpenAPI.validate_property(ProductOptionAdd, Symbol("name"), name)
        OpenAPI.validate_property(ProductOptionAdd, Symbol("type"), type)
        OpenAPI.validate_property(ProductOptionAdd, Symbol("product_id"), product_id)
        OpenAPI.validate_property(ProductOptionAdd, Symbol("default_option_value"), default_option_value)
        OpenAPI.validate_property(ProductOptionAdd, Symbol("option_values"), option_values)
        OpenAPI.validate_property(ProductOptionAdd, Symbol("description"), description)
        OpenAPI.validate_property(ProductOptionAdd, Symbol("avail"), avail)
        OpenAPI.validate_property(ProductOptionAdd, Symbol("sort_order"), sort_order)
        OpenAPI.validate_property(ProductOptionAdd, Symbol("required"), required)
        OpenAPI.validate_property(ProductOptionAdd, Symbol("values"), values)
        OpenAPI.validate_property(ProductOptionAdd, Symbol("clear_cache"), clear_cache)
        return new(name, type, product_id, default_option_value, option_values, description, avail, sort_order, required, values, clear_cache, )
    end
end # type ProductOptionAdd

const _property_types_ProductOptionAdd = Dict{Symbol,String}(Symbol("name")=>"String", Symbol("type")=>"String", Symbol("product_id")=>"String", Symbol("default_option_value")=>"String", Symbol("option_values")=>"String", Symbol("description")=>"String", Symbol("avail")=>"Bool", Symbol("sort_order")=>"Int64", Symbol("required")=>"Bool", Symbol("values")=>"Vector{ProductOptionAddValuesInner}", Symbol("clear_cache")=>"Bool", )
OpenAPI.property_type(::Type{ ProductOptionAdd }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductOptionAdd[name]))}

function check_required(o::ProductOptionAdd)
    o.name === nothing && (return false)
    o.type === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ProductOptionAdd }, name::Symbol, val)


    if name === Symbol("type")
        OpenAPI.validate_param(name, "ProductOptionAdd", :enum, val, ["option_type_select", "option_type_text", "option_type_radio", "option_type_checkbox", "option_type_textarea", "option_type_readonly", "option_type_multiselect", "option_type_multicheckbox", "option_type_file", "option_type_date", "option_type_datetime", "option_type_time"])
    end










end
