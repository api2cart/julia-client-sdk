# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""Category

    Category(;
        id=nothing,
        parent_id=nothing,
        created_at=nothing,
        modified_at=nothing,
        name=nothing,
        short_description=nothing,
        description=nothing,
        stores_ids=nothing,
        keywords=nothing,
        meta_description=nothing,
        meta_title=nothing,
        avail=nothing,
        path=nothing,
        seo_url=nothing,
        sort_order=nothing,
        images=nothing,
        additional_fields=nothing,
        custom_fields=nothing,
    )

    - id::String
    - parent_id::String
    - created_at::A2CDateTime
    - modified_at::A2CDateTime
    - name::String
    - short_description::String
    - description::String
    - stores_ids::Vector{String}
    - keywords::String
    - meta_description::String
    - meta_title::String
    - avail::Bool
    - path::String
    - seo_url::String
    - sort_order::Int64
    - images::Vector{Image}
    - additional_fields::Any
    - custom_fields::Any
"""
Base.@kwdef mutable struct Category <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    parent_id::Union{Nothing, String} = nothing
    created_at = nothing # spec type: Union{ Nothing, A2CDateTime }
    modified_at = nothing # spec type: Union{ Nothing, A2CDateTime }
    name::Union{Nothing, String} = nothing
    short_description::Union{Nothing, String} = nothing
    description::Union{Nothing, String} = nothing
    stores_ids::Union{Nothing, Vector{String}} = nothing
    keywords::Union{Nothing, String} = nothing
    meta_description::Union{Nothing, String} = nothing
    meta_title::Union{Nothing, String} = nothing
    avail::Union{Nothing, Bool} = nothing
    path::Union{Nothing, String} = nothing
    seo_url::Union{Nothing, String} = nothing
    sort_order::Union{Nothing, Int64} = nothing
    images::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{Image} }
    additional_fields::Union{Nothing, Any} = nothing
    custom_fields::Union{Nothing, Any} = nothing

    function Category(id, parent_id, created_at, modified_at, name, short_description, description, stores_ids, keywords, meta_description, meta_title, avail, path, seo_url, sort_order, images, additional_fields, custom_fields, )
        OpenAPI.validate_property(Category, Symbol("id"), id)
        OpenAPI.validate_property(Category, Symbol("parent_id"), parent_id)
        OpenAPI.validate_property(Category, Symbol("created_at"), created_at)
        OpenAPI.validate_property(Category, Symbol("modified_at"), modified_at)
        OpenAPI.validate_property(Category, Symbol("name"), name)
        OpenAPI.validate_property(Category, Symbol("short_description"), short_description)
        OpenAPI.validate_property(Category, Symbol("description"), description)
        OpenAPI.validate_property(Category, Symbol("stores_ids"), stores_ids)
        OpenAPI.validate_property(Category, Symbol("keywords"), keywords)
        OpenAPI.validate_property(Category, Symbol("meta_description"), meta_description)
        OpenAPI.validate_property(Category, Symbol("meta_title"), meta_title)
        OpenAPI.validate_property(Category, Symbol("avail"), avail)
        OpenAPI.validate_property(Category, Symbol("path"), path)
        OpenAPI.validate_property(Category, Symbol("seo_url"), seo_url)
        OpenAPI.validate_property(Category, Symbol("sort_order"), sort_order)
        OpenAPI.validate_property(Category, Symbol("images"), images)
        OpenAPI.validate_property(Category, Symbol("additional_fields"), additional_fields)
        OpenAPI.validate_property(Category, Symbol("custom_fields"), custom_fields)
        return new(id, parent_id, created_at, modified_at, name, short_description, description, stores_ids, keywords, meta_description, meta_title, avail, path, seo_url, sort_order, images, additional_fields, custom_fields, )
    end
end # type Category

const _property_types_Category = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("parent_id")=>"String", Symbol("created_at")=>"A2CDateTime", Symbol("modified_at")=>"A2CDateTime", Symbol("name")=>"String", Symbol("short_description")=>"String", Symbol("description")=>"String", Symbol("stores_ids")=>"Vector{String}", Symbol("keywords")=>"String", Symbol("meta_description")=>"String", Symbol("meta_title")=>"String", Symbol("avail")=>"Bool", Symbol("path")=>"String", Symbol("seo_url")=>"String", Symbol("sort_order")=>"Int64", Symbol("images")=>"Vector{Image}", Symbol("additional_fields")=>"Any", Symbol("custom_fields")=>"Any", )
OpenAPI.property_type(::Type{ Category }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_Category[name]))}

function check_required(o::Category)
    true
end

function OpenAPI.validate_property(::Type{ Category }, name::Symbol, val)


















end
