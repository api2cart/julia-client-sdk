# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""ProductAdd_specifics_inner_group_products_details_inner

    ProductAddSpecificsInnerGroupProductsDetailsInner(;
        id=nothing,
        quantity=nothing,
    )

    - id::String
    - quantity::Int64
"""
Base.@kwdef mutable struct ProductAddSpecificsInnerGroupProductsDetailsInner <: OpenAPI.APIModel
    id::Union{Nothing, String} = nothing
    quantity::Union{Nothing, Int64} = nothing

    function ProductAddSpecificsInnerGroupProductsDetailsInner(id, quantity, )
        OpenAPI.validate_property(ProductAddSpecificsInnerGroupProductsDetailsInner, Symbol("id"), id)
        OpenAPI.validate_property(ProductAddSpecificsInnerGroupProductsDetailsInner, Symbol("quantity"), quantity)
        return new(id, quantity, )
    end
end # type ProductAddSpecificsInnerGroupProductsDetailsInner

const _property_types_ProductAddSpecificsInnerGroupProductsDetailsInner = Dict{Symbol,String}(Symbol("id")=>"String", Symbol("quantity")=>"Int64", )
OpenAPI.property_type(::Type{ ProductAddSpecificsInnerGroupProductsDetailsInner }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_ProductAddSpecificsInnerGroupProductsDetailsInner[name]))}

function check_required(o::ProductAddSpecificsInnerGroupProductsDetailsInner)
    o.id === nothing && (return false)
    o.quantity === nothing && (return false)
    true
end

function OpenAPI.validate_property(::Type{ ProductAddSpecificsInnerGroupProductsDetailsInner }, name::Symbol, val)


    if name === Symbol("quantity")
        OpenAPI.validate_param(name, "ProductAddSpecificsInnerGroupProductsDetailsInner", :minimum, val, 1, false)
    end
end
