# This file was generated by the Julia OpenAPI Code Generator
# Do not modify this file directly. Modify the OpenAPI specification instead.


@doc raw"""AccountSupportedPlatforms_200_response_result_supported_platforms_inner_params

    AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams(;
        required=nothing,
        additional=nothing,
    )

    - required::Vector{Vector{AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsRequiredInnerInner}}
    - additional::Vector{AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsRequiredInnerInner}
"""
Base.@kwdef mutable struct AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams <: OpenAPI.APIModel
    required::Union{Nothing, Vector{Vector{AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsRequiredInnerInner}}} = nothing
    additional::Union{Nothing, Vector} = nothing # spec type: Union{ Nothing, Vector{AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsRequiredInnerInner} }

    function AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams(required, additional, )
        OpenAPI.validate_property(AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams, Symbol("required"), required)
        OpenAPI.validate_property(AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams, Symbol("additional"), additional)
        return new(required, additional, )
    end
end # type AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams

const _property_types_AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams = Dict{Symbol,String}(Symbol("required")=>"Vector{Vector{AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsRequiredInnerInner}}", Symbol("additional")=>"Vector{AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParamsRequiredInnerInner}", )
OpenAPI.property_type(::Type{ AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams }, name::Symbol) = Union{Nothing,eval(Base.Meta.parse(_property_types_AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams[name]))}

function check_required(o::AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams)
    true
end

function OpenAPI.validate_property(::Type{ AccountSupportedPlatforms200ResponseResultSupportedPlatformsInnerParams }, name::Symbol, val)


end
